(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1485924,      29479]
NotebookOptionsPosition[   1460243,      28762]
NotebookOutlinePosition[   1460601,      28778]
CellTagsIndexPosition[   1460558,      28775]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["SVM-BDS-BDT Comparison Results, 5/19/16", "Title",
 CellChangeTimes->{{3.670327188625718*^9, 3.6703271978244143`*^9}, {
  3.672564714264142*^9, 3.672564718827018*^9}, {3.672637394895651*^9, 
  3.672637395039366*^9}, {3.672637532651675*^9, 3.672637533484366*^9}}],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Raw Data", "Chapter"]], "Chapter",
 CellChangeTimes->{3.6703747202572107`*^9}],

Cell[CellGroupData[{

Cell["\<\
SVM: c, \[Gamma], Number of Support Vectors, False Positive Fraction, False \
Negative Fraction, Efficiency\
\>", "Section",
 CellChangeTimes->{{3.67037468964478*^9, 3.6703747088395157`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SVMLinearHardRawData", "=", " ", 
   RowBox[{"Import", " ", "[", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<SVM\>\"", ",", 
        "\"\<Results\>\"", ",", "\"\<linearhard0519\>\""}], "}"}], "]"}], ",",
      " ", "\"\<Table\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SVMLinearSoftRawData", "=", " ", 
    RowBox[{"Import", " ", "[", 
     RowBox[{
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<SVM\>\"", ",", 
         "\"\<Results\>\"", ",", "\"\<linearsoft0519\>\""}], "}"}], "]"}], 
      ",", " ", "\"\<Table\>\""}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SVMCircleHardRawData", "=", " ", 
   RowBox[{"Import", " ", "[", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<SVM\>\"", ",", 
        "\"\<Results\>\"", ",", "\"\<circlehard0519\>\""}], "}"}], "]"}], ",",
      " ", "\"\<Table\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SVMCircleSoftRawData", "=", " ", 
    RowBox[{"Import", " ", "[", 
     RowBox[{
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<SVM\>\"", ",", 
         "\"\<Results\>\"", ",", "\"\<circlesoft0519\>\""}], "}"}], "]"}], 
      ",", " ", "\"\<Table\>\""}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"SVMTwoCircleHardRawData", "=", " ", 
  RowBox[{"Import", " ", "[", 
   RowBox[{
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<SVM\>\"", ",", 
       "\"\<Results\>\"", ",", "\"\<twocirclehard0519\>\""}], "}"}], "]"}], 
    ",", " ", "\"\<Table\>\""}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SVMTwoCircleSoftRawData", "=", " ", 
   RowBox[{"Import", " ", "[", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<SVM\>\"", ",", 
        "\"\<Results\>\"", ",", "\"\<twocirclesoft0519\>\""}], "}"}], "]"}], 
     ",", " ", "\"\<Table\>\""}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6458953396322947`*^9, 3.645895342278307*^9}, {
   3.6458954547986526`*^9, 3.6458954648604317`*^9}, {3.6458955379085197`*^9, 
   3.645895541298182*^9}, {3.645895751944387*^9, 3.645895762059876*^9}, 
   3.645896041237175*^9, {3.6461470125793467`*^9, 3.6461470921265717`*^9}, 
   3.646529075403604*^9, 3.646529106496681*^9, {3.6468827771554537`*^9, 
   3.646882824604542*^9}, {3.64688287710527*^9, 3.6468828969377327`*^9}, {
   3.647049074182143*^9, 3.647049083129785*^9}, {3.647049500518478*^9, 
   3.647049528041201*^9}, {3.647053253885064*^9, 3.6470532885371313`*^9}, {
   3.652592304654352*^9, 3.652592322017527*^9}, {3.666099966701707*^9, 
   3.666100023720604*^9}, {3.6703267374203787`*^9, 3.670326741290271*^9}, {
   3.670326789834674*^9, 3.6703268026272182`*^9}, {3.670326860159974*^9, 
   3.670326971115827*^9}, {3.6703270056572533`*^9, 3.670327007546687*^9}, {
   3.670327097461337*^9, 3.6703270996594877`*^9}, {3.670327236766659*^9, 
   3.670327256054014*^9}, {3.6703274574237747`*^9, 3.6703274751475782`*^9}, {
   3.67032752002388*^9, 3.670327572523769*^9}, {3.670328045639875*^9, 
   3.670328046997388*^9}, {3.670374122579352*^9, 3.670374185905579*^9}, {
   3.670374226733451*^9, 3.670374232324079*^9}, 3.6703742996589823`*^9, {
   3.6703743794604073`*^9, 3.670374383089617*^9}, {3.6703746053425217`*^9, 
   3.6703746373164043`*^9}, 3.670374680744129*^9, {3.6703747295386477`*^9, 
   3.6703747306254253`*^9}, {3.672564737798396*^9, 3.67256493053653*^9}, {
   3.6725669552000027`*^9, 3.67256706003353*^9}, {3.672569597217229*^9, 
   3.6725695985034657`*^9}, {3.6726373969135313`*^9, 3.67263740802355*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.001`", ",", "1.`", ",", "412", ",", "0.`", ",", "1.`", ",", "0.`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.001`", ",", "1.5`", ",", "416", ",", "0.`", ",", "1.`", ",", "0.`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.001`", ",", "2.`", ",", "418", ",", "0.`", ",", "1.`", ",", "0.`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.001`", ",", "2.5`", ",", "417", ",", "0.`", ",", "1.`", ",", "0.`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.001`", ",", "3.`", ",", "421", ",", "0.`", ",", "1.`", ",", "0.`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.001`", ",", "3.5`", ",", "422", ",", "0.`", ",", "1.`", ",", "0.`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.001`", ",", "4.`", ",", "422", ",", "0.`", ",", "1.`", ",", "0.`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.001`", ",", "4.5`", ",", "424", ",", "0.`", ",", "1.`", ",", "0.`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.001`", ",", "5.`", ",", "423", ",", "0.`", ",", "1.`", ",", "0.`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.001`", ",", "5.5`", ",", "424", ",", "0.`", ",", "1.`", ",", "0.`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.001`", ",", "6.`", ",", "427", ",", "0.`", ",", "1.`", ",", "0.`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.00177827941004`", ",", "1.`", ",", "421", ",", "0.`", ",", "1.`", ",", 
     "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.00177827941004`", ",", "1.5`", ",", "424", ",", "0.`", ",", "1.`", ",",
      "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.00177827941004`", ",", "2.`", ",", "432", ",", "0.`", ",", "1.`", ",", 
     "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.00177827941004`", ",", "2.5`", ",", "438", ",", "0.`", ",", "1.`", ",",
      "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.00177827941004`", ",", "3.`", ",", "442", ",", "0.`", ",", "1.`", ",", 
     "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.00177827941004`", ",", "3.5`", ",", "444", ",", "0.`", ",", "1.`", ",",
      "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.00177827941004`", ",", "4.`", ",", "445", ",", "0.`", ",", "1.`", ",", 
     "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.00177827941004`", ",", "4.5`", ",", "452", ",", "0.`", ",", "1.`", ",",
      "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.00177827941004`", ",", "5.`", ",", "459", ",", "0.`", ",", "1.`", ",", 
     "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.00177827941004`", ",", "5.5`", ",", "469", ",", "0.`", ",", "1.`", ",",
      "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.00177827941004`", ",", "6.`", ",", "481", ",", "0.`", ",", "1.`", ",", 
     "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.00316227766017`", ",", "1.`", ",", "430", ",", "0.`", ",", "1.`", ",", 
     "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.00316227766017`", ",", "1.5`", ",", "440", ",", "0.`", ",", "1.`", ",",
      "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.00316227766017`", ",", "2.`", ",", "451", ",", "0.`", ",", "1.`", ",", 
     "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.00316227766017`", ",", "2.5`", ",", "461", ",", "0.`", ",", "1.`", ",",
      "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.00316227766017`", ",", "3.`", ",", "472", ",", "0.`", ",", "1.`", ",", 
     "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.00316227766017`", ",", "3.5`", ",", "474", ",", "0.`", ",", "1.`", ",",
      "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.00316227766017`", ",", "4.`", ",", "491", ",", "0.`", ",", "1.`", ",", 
     "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.00316227766017`", ",", "4.5`", ",", "518", ",", "0.`", ",", "1.`", ",",
      "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.00316227766017`", ",", "5.`", ",", "516", ",", "0.`", ",", "1.`", ",", 
     "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.00316227766017`", ",", "5.5`", ",", "529", ",", "0.`", ",", "1.`", ",",
      "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.00316227766017`", ",", "6.`", ",", "545", ",", "0.`", ",", "1.`", ",", 
     "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0056234132519`", ",", "1.`", ",", "446", ",", "0.`", ",", "1.`", ",", 
     "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0056234132519`", ",", "1.5`", ",", "461", ",", "0.`", ",", "1.`", ",", 
     "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0056234132519`", ",", "2.`", ",", "481", ",", "0.`", ",", "1.`", ",", 
     "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0056234132519`", ",", "2.5`", ",", "496", ",", "0.`", ",", "1.`", ",", 
     "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0056234132519`", ",", "3.`", ",", "501", ",", "0.`", ",", "1.`", ",", 
     "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0056234132519`", ",", "3.5`", ",", "518", ",", "0.`", ",", "1.`", ",", 
     "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0056234132519`", ",", "4.`", ",", "537", ",", "0.`", ",", "1.`", ",", 
     "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0056234132519`", ",", "4.5`", ",", "553", ",", "0.`", ",", "1.`", ",", 
     "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0056234132519`", ",", "5.`", ",", "565", ",", "0.`", ",", "1.`", ",", 
     "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0056234132519`", ",", "5.5`", ",", "582", ",", "0.`", ",", "1.`", ",", 
     "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0056234132519`", ",", "6.`", ",", "598", ",", "0.`", ",", "1.`", ",", 
     "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.01`", ",", "1.`", ",", "456", ",", "0.`", ",", "1.`", ",", "0.`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.01`", ",", "1.5`", ",", "474", ",", "0.`", ",", "1.`", ",", "0.`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.01`", ",", "2.`", ",", "513", ",", "0.`", ",", "1.`", ",", "0.`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.01`", ",", "2.5`", ",", "522", ",", "0.`", ",", "1.`", ",", "0.`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.01`", ",", "3.`", ",", "531", ",", "0.`", ",", "1.`", ",", "0.`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.01`", ",", "3.5`", ",", "568", ",", "0.`", ",", "1.`", ",", "0.`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.01`", ",", "4.`", ",", "583", ",", "0.`", ",", "1.`", ",", "0.`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.01`", ",", "4.5`", ",", "600", ",", "0.`", ",", "1.`", ",", "0.`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.01`", ",", "5.`", ",", "619", ",", "0.`", ",", "1.`", ",", "0.`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.01`", ",", "5.5`", ",", "636", ",", "0.`", ",", "1.`", ",", "0.`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.01`", ",", "6.`", ",", "647", ",", "0.`", ",", "1.`", ",", "0.`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0177827941004`", ",", "1.`", ",", "464", ",", "0.`", ",", "1.`", ",", 
     "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0177827941004`", ",", "1.5`", ",", "492", ",", "0.`", ",", "1.`", ",", 
     "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0177827941004`", ",", "2.`", ",", "533", ",", "0.`", ",", "1.`", ",", 
     "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0177827941004`", ",", "2.5`", ",", "557", ",", "0.`", ",", "1.`", ",", 
     "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0177827941004`", ",", "3.`", ",", "578", ",", "0.`", ",", "1.`", ",", 
     "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0177827941004`", ",", "3.5`", ",", "588", ",", "0.`", ",", "1.`", ",", 
     "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0177827941004`", ",", "4.`", ",", "621", ",", "0.`", ",", "1.`", ",", 
     "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0177827941004`", ",", "4.5`", ",", "643", ",", "0.`", ",", "1.`", ",", 
     "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0177827941004`", ",", "5.`", ",", "648", ",", "0.`", ",", "1.`", ",", 
     "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0177827941004`", ",", "5.5`", ",", "674", ",", "0.`", ",", "1.`", ",", 
     "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0177827941004`", ",", "6.`", ",", "674", ",", "0.`", ",", "1.`", ",", 
     "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0316227766017`", ",", "1.`", ",", "468", ",", "0.`", ",", 
     "0.789743589744`", ",", "0.210256410256`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0316227766017`", ",", "1.5`", ",", "514", ",", "0.`", ",", "1.`", ",", 
     "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0316227766017`", ",", "2.`", ",", "552", ",", "0.`", ",", "1.`", ",", 
     "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0316227766017`", ",", "2.5`", ",", "571", ",", "0.`", ",", "1.`", ",", 
     "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0316227766017`", ",", "3.`", ",", "598", ",", "0.`", ",", "1.`", ",", 
     "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0316227766017`", ",", "3.5`", ",", "626", ",", "0.`", ",", "1.`", ",", 
     "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0316227766017`", ",", "4.`", ",", "646", ",", "0.`", ",", "1.`", ",", 
     "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0316227766017`", ",", "4.5`", ",", "660", ",", "0.`", ",", "1.`", ",", 
     "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0316227766017`", ",", "5.`", ",", "669", ",", "0.`", ",", "1.`", ",", 
     "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0316227766017`", ",", "5.5`", ",", "690", ",", "0.`", ",", "1.`", ",", 
     "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0316227766017`", ",", "6.`", ",", "697", ",", "0.`", ",", "1.`", ",", 
     "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.056234132519`", ",", "1.`", ",", "465", ",", "0.`", ",", 
     "0.364102564103`", ",", "0.635897435897`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.056234132519`", ",", "1.5`", ",", "510", ",", "0.`", ",", 
     "0.533333333333`", ",", "0.466666666667`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.056234132519`", ",", "2.`", ",", "558", ",", "0.`", ",", 
     "0.712820512821`", ",", "0.287179487179`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.056234132519`", ",", "2.5`", ",", "584", ",", "0.`", ",", 
     "0.923076923077`", ",", "0.0769230769231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.056234132519`", ",", "3.`", ",", "613", ",", "0.`", ",", "1.`", ",", 
     "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.056234132519`", ",", "3.5`", ",", "642", ",", "0.`", ",", "1.`", ",", 
     "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.056234132519`", ",", "4.`", ",", "641", ",", "0.`", ",", "1.`", ",", 
     "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.056234132519`", ",", "4.5`", ",", "675", ",", "0.`", ",", "1.`", ",", 
     "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.056234132519`", ",", "5.`", ",", "692", ",", "0.`", ",", "1.`", ",", 
     "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.056234132519`", ",", "5.5`", ",", "703", ",", "0.`", ",", "1.`", ",", 
     "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.056234132519`", ",", "6.`", ",", "713", ",", "0.`", ",", "1.`", ",", 
     "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.1`", ",", "1.`", ",", "397", ",", "0.00745341614907`", ",", 
     "0.153846153846`", ",", "0.846153846154`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.1`", ",", "1.5`", ",", "474", ",", "0.00124223602484`", ",", 
     "0.189743589744`", ",", "0.810256410256`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.1`", ",", "2.`", ",", "550", ",", "0.`", ",", "0.25641025641`", ",", 
     "0.74358974359`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.1`", ",", "2.5`", ",", "594", ",", "0.`", ",", "0.358974358974`", ",", 
     "0.641025641026`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.1`", ",", "3.`", ",", "614", ",", "0.`", ",", "0.482051282051`", ",", 
     "0.517948717949`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.1`", ",", "3.5`", ",", "646", ",", "0.`", ",", "0.589743589744`", ",", 
     "0.410256410256`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.1`", ",", "4.`", ",", "656", ",", "0.`", ",", "0.712820512821`", ",", 
     "0.287179487179`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.1`", ",", "4.5`", ",", "672", ",", "0.`", ",", "0.841025641026`", ",", 
     "0.158974358974`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.1`", ",", "5.`", ",", "687", ",", "0.`", ",", "0.94358974359`", ",", 
     "0.0564102564103`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.1`", ",", "5.5`", ",", "705", ",", "0.`", ",", "0.984615384615`", ",", 
     "0.0153846153846`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.1`", ",", "6.`", ",", "713", ",", "0.`", ",", "1.`", ",", "0.`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.177827941004`", ",", "1.`", ",", "328", ",", "0.00869565217391`", ",", 
     "0.0974358974359`", ",", "0.902564102564`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.177827941004`", ",", "1.5`", ",", "393", ",", "0.00869565217391`", ",",
      "0.0974358974359`", ",", "0.902564102564`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.177827941004`", ",", "2.`", ",", "477", ",", "0.00621118012422`", ",", 
     "0.107692307692`", ",", "0.892307692308`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.177827941004`", ",", "2.5`", ",", "537", ",", "0.00496894409938`", ",",
      "0.123076923077`", ",", "0.876923076923`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.177827941004`", ",", "3.`", ",", "581", ",", "0.00124223602484`", ",", 
     "0.153846153846`", ",", "0.846153846154`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.177827941004`", ",", "3.5`", ",", "633", ",", "0.00124223602484`", ",",
      "0.184615384615`", ",", "0.815384615385`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.177827941004`", ",", "4.`", ",", "651", ",", "0.`", ",", 
     "0.220512820513`", ",", "0.779487179487`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.177827941004`", ",", "4.5`", ",", "665", ",", "0.`", ",", 
     "0.271794871795`", ",", "0.728205128205`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.177827941004`", ",", "5.`", ",", "682", ",", "0.`", ",", 
     "0.338461538462`", ",", "0.661538461538`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.177827941004`", ",", "5.5`", ",", "702", ",", "0.`", ",", "0.4`", ",", 
     "0.6`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.177827941004`", ",", "6.`", ",", "711", ",", "0.`", ",", 
     "0.482051282051`", ",", "0.517948717949`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.316227766017`", ",", "1.`", ",", "269", ",", "0.00993788819876`", ",", 
     "0.0820512820513`", ",", "0.917948717949`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.316227766017`", ",", "1.5`", ",", "347", ",", "0.00993788819876`", ",",
      "0.0717948717949`", ",", "0.928205128205`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.316227766017`", ",", "2.`", ",", "416", ",", "0.00993788819876`", ",", 
     "0.0717948717949`", ",", "0.928205128205`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.316227766017`", ",", "2.5`", ",", "479", ",", "0.00993788819876`", ",",
      "0.0717948717949`", ",", "0.928205128205`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.316227766017`", ",", "3.`", ",", "524", ",", "0.00745341614907`", ",", 
     "0.0769230769231`", ",", "0.923076923077`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.316227766017`", ",", "3.5`", ",", "557", ",", "0.00745341614907`", ",",
      "0.0769230769231`", ",", "0.923076923077`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.316227766017`", ",", "4.`", ",", "614", ",", "0.00496894409938`", ",", 
     "0.0769230769231`", ",", "0.923076923077`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.316227766017`", ",", "4.5`", ",", "629", ",", "0.00621118012422`", ",",
      "0.0820512820513`", ",", "0.917948717949`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.316227766017`", ",", "5.`", ",", "657", ",", "0.00621118012422`", ",", 
     "0.0974358974359`", ",", "0.902564102564`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.316227766017`", ",", "5.5`", ",", "672", ",", "0.00372670807453`", ",",
      "0.117948717949`", ",", "0.882051282051`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.316227766017`", ",", "6.`", ",", "685", ",", "0.00248447204969`", ",", 
     "0.133333333333`", ",", "0.866666666667`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.56234132519`", ",", "1.`", ",", "236", ",", "0.016149068323`", ",", 
     "0.0615384615385`", ",", "0.938461538462`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.56234132519`", ",", "1.5`", ",", "294", ",", "0.0173913043478`", ",", 
     "0.0666666666667`", ",", "0.933333333333`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.56234132519`", ",", "2.`", ",", "363", ",", "0.016149068323`", ",", 
     "0.0615384615385`", ",", "0.938461538462`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.56234132519`", ",", "2.5`", ",", "429", ",", "0.0124223602484`", ",", 
     "0.0615384615385`", ",", "0.938461538462`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.56234132519`", ",", "3.`", ",", "469", ",", "0.0124223602484`", ",", 
     "0.0615384615385`", ",", "0.938461538462`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.56234132519`", ",", "3.5`", ",", "506", ",", "0.0111801242236`", ",", 
     "0.0615384615385`", ",", "0.938461538462`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.56234132519`", ",", "4.`", ",", "552", ",", "0.0111801242236`", ",", 
     "0.0615384615385`", ",", "0.938461538462`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.56234132519`", ",", "4.5`", ",", "583", ",", "0.0111801242236`", ",", 
     "0.0615384615385`", ",", "0.938461538462`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.56234132519`", ",", "5.`", ",", "606", ",", "0.0111801242236`", ",", 
     "0.0615384615385`", ",", "0.938461538462`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.56234132519`", ",", "5.5`", ",", "628", ",", "0.0111801242236`", ",", 
     "0.0666666666667`", ",", "0.933333333333`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.56234132519`", ",", "6.`", ",", "652", ",", "0.0111801242236`", ",", 
     "0.0717948717949`", ",", "0.928205128205`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.`", ",", "1.`", ",", "203", ",", "0.0149068322981`", ",", 
     "0.0615384615385`", ",", "0.938461538462`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.`", ",", "1.5`", ",", "251", ",", "0.0149068322981`", ",", 
     "0.0512820512821`", ",", "0.948717948718`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.`", ",", "2.`", ",", "323", ",", "0.0136645962733`", ",", 
     "0.0512820512821`", ",", "0.948717948718`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.`", ",", "2.5`", ",", "396", ",", "0.0149068322981`", ",", 
     "0.0512820512821`", ",", "0.948717948718`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.`", ",", "3.`", ",", "442", ",", "0.0149068322981`", ",", 
     "0.0410256410256`", ",", "0.958974358974`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.`", ",", "3.5`", ",", "474", ",", "0.0136645962733`", ",", 
     "0.0410256410256`", ",", "0.958974358974`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.`", ",", "4.`", ",", "519", ",", "0.0124223602484`", ",", 
     "0.0410256410256`", ",", "0.958974358974`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.`", ",", "4.5`", ",", "542", ",", "0.0124223602484`", ",", 
     "0.0358974358974`", ",", "0.964102564103`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.`", ",", "5.`", ",", "573", ",", "0.0124223602484`", ",", 
     "0.0358974358974`", ",", "0.964102564103`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.`", ",", "5.5`", ",", "594", ",", "0.0124223602484`", ",", 
     "0.0358974358974`", ",", "0.964102564103`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.`", ",", "6.`", ",", "618", ",", "0.0124223602484`", ",", 
     "0.0410256410256`", ",", "0.958974358974`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.77827941004`", ",", "1.`", ",", "190", ",", "0.0186335403727`", ",", 
     "0.0512820512821`", ",", "0.948717948718`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.77827941004`", ",", "1.5`", ",", "229", ",", "0.0149068322981`", ",", 
     "0.0461538461538`", ",", "0.953846153846`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.77827941004`", ",", "2.`", ",", "289", ",", "0.0149068322981`", ",", 
     "0.0358974358974`", ",", "0.964102564103`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.77827941004`", ",", "2.5`", ",", "364", ",", "0.016149068323`", ",", 
     "0.0410256410256`", ",", "0.958974358974`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.77827941004`", ",", "3.`", ",", "420", ",", "0.016149068323`", ",", 
     "0.0307692307692`", ",", "0.969230769231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.77827941004`", ",", "3.5`", ",", "448", ",", "0.016149068323`", ",", 
     "0.0307692307692`", ",", "0.969230769231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.77827941004`", ",", "4.`", ",", "491", ",", "0.016149068323`", ",", 
     "0.0307692307692`", ",", "0.969230769231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.77827941004`", ",", "4.5`", ",", "526", ",", "0.016149068323`", ",", 
     "0.0307692307692`", ",", "0.969230769231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.77827941004`", ",", "5.`", ",", "546", ",", "0.0149068322981`", ",", 
     "0.0307692307692`", ",", "0.969230769231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.77827941004`", ",", "5.5`", ",", "565", ",", "0.0149068322981`", ",", 
     "0.0358974358974`", ",", "0.964102564103`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.77827941004`", ",", "6.`", ",", "598", ",", "0.0149068322981`", ",", 
     "0.0358974358974`", ",", "0.964102564103`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3.16227766017`", ",", "1.`", ",", "152", ",", "0.016149068323`", ",", 
     "0.0461538461538`", ",", "0.953846153846`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3.16227766017`", ",", "1.5`", ",", "214", ",", "0.0173913043478`", ",", 
     "0.0410256410256`", ",", "0.958974358974`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3.16227766017`", ",", "2.`", ",", "284", ",", "0.0149068322981`", ",", 
     "0.0410256410256`", ",", "0.958974358974`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3.16227766017`", ",", "2.5`", ",", "345", ",", "0.0149068322981`", ",", 
     "0.0307692307692`", ",", "0.969230769231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3.16227766017`", ",", "3.`", ",", "393", ",", "0.0149068322981`", ",", 
     "0.0307692307692`", ",", "0.969230769231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3.16227766017`", ",", "3.5`", ",", "434", ",", "0.016149068323`", ",", 
     "0.025641025641`", ",", "0.974358974359`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3.16227766017`", ",", "4.`", ",", "470", ",", "0.0149068322981`", ",", 
     "0.025641025641`", ",", "0.974358974359`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3.16227766017`", ",", "4.5`", ",", "498", ",", "0.0149068322981`", ",", 
     "0.0307692307692`", ",", "0.969230769231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3.16227766017`", ",", "5.`", ",", "534", ",", "0.0136645962733`", ",", 
     "0.025641025641`", ",", "0.974358974359`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3.16227766017`", ",", "5.5`", ",", "556", ",", "0.0149068322981`", ",", 
     "0.025641025641`", ",", "0.974358974359`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3.16227766017`", ",", "6.`", ",", "584", ",", "0.0149068322981`", ",", 
     "0.0307692307692`", ",", "0.969230769231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "5.6234132519`", ",", "1.`", ",", "134", ",", "0.0186335403727`", ",", 
     "0.0512820512821`", ",", "0.948717948718`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "5.6234132519`", ",", "1.5`", ",", "198", ",", "0.0186335403727`", ",", 
     "0.0512820512821`", ",", "0.948717948718`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "5.6234132519`", ",", "2.`", ",", "260", ",", "0.0136645962733`", ",", 
     "0.0307692307692`", ",", "0.969230769231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "5.6234132519`", ",", "2.5`", ",", "318", ",", "0.0136645962733`", ",", 
     "0.0307692307692`", ",", "0.969230769231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "5.6234132519`", ",", "3.`", ",", "371", ",", "0.0136645962733`", ",", 
     "0.0307692307692`", ",", "0.969230769231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "5.6234132519`", ",", "3.5`", ",", "423", ",", "0.0136645962733`", ",", 
     "0.0307692307692`", ",", "0.969230769231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "5.6234132519`", ",", "4.`", ",", "458", ",", "0.0136645962733`", ",", 
     "0.0307692307692`", ",", "0.969230769231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "5.6234132519`", ",", "4.5`", ",", "482", ",", "0.0136645962733`", ",", 
     "0.0307692307692`", ",", "0.969230769231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "5.6234132519`", ",", "5.`", ",", "515", ",", "0.0136645962733`", ",", 
     "0.0307692307692`", ",", "0.969230769231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "5.6234132519`", ",", "5.5`", ",", "554", ",", "0.0136645962733`", ",", 
     "0.0307692307692`", ",", "0.969230769231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "5.6234132519`", ",", "6.`", ",", "574", ",", "0.0124223602484`", ",", 
     "0.0307692307692`", ",", "0.969230769231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "10.`", ",", "1.`", ",", "118", ",", "0.0136645962733`", ",", 
     "0.0512820512821`", ",", "0.948717948718`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "10.`", ",", "1.5`", ",", "183", ",", "0.0149068322981`", ",", 
     "0.0410256410256`", ",", "0.958974358974`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "10.`", ",", "2.`", ",", "246", ",", "0.016149068323`", ",", 
     "0.0307692307692`", ",", "0.969230769231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "10.`", ",", "2.5`", ",", "311", ",", "0.0111801242236`", ",", 
     "0.0307692307692`", ",", "0.969230769231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "10.`", ",", "3.`", ",", "373", ",", "0.0149068322981`", ",", 
     "0.0358974358974`", ",", "0.964102564103`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "10.`", ",", "3.5`", ",", "418", ",", "0.0149068322981`", ",", 
     "0.0358974358974`", ",", "0.964102564103`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "10.`", ",", "4.`", ",", "444", ",", "0.0149068322981`", ",", 
     "0.0307692307692`", ",", "0.969230769231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "10.`", ",", "4.5`", ",", "474", ",", "0.0149068322981`", ",", 
     "0.0307692307692`", ",", "0.969230769231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "10.`", ",", "5.`", ",", "505", ",", "0.0136645962733`", ",", 
     "0.0307692307692`", ",", "0.969230769231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "10.`", ",", "5.5`", ",", "541", ",", "0.0149068322981`", ",", 
     "0.0307692307692`", ",", "0.969230769231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "10.`", ",", "6.`", ",", "573", ",", "0.0149068322981`", ",", 
     "0.0307692307692`", ",", "0.969230769231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "17.7827941004`", ",", "1.`", ",", "84", ",", "0.0149068322981`", ",", 
     "0.0410256410256`", ",", "0.958974358974`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "17.7827941004`", ",", "1.5`", ",", "170", ",", "0.0124223602484`", ",", 
     "0.0307692307692`", ",", "0.969230769231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "17.7827941004`", ",", "2.`", ",", "250", ",", "0.0124223602484`", ",", 
     "0.0358974358974`", ",", "0.964102564103`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "17.7827941004`", ",", "2.5`", ",", "298", ",", "0.0149068322981`", ",", 
     "0.0358974358974`", ",", "0.964102564103`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "17.7827941004`", ",", "3.`", ",", "358", ",", "0.016149068323`", ",", 
     "0.0307692307692`", ",", "0.969230769231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "17.7827941004`", ",", "3.5`", ",", "406", ",", "0.0149068322981`", ",", 
     "0.0307692307692`", ",", "0.969230769231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "17.7827941004`", ",", "4.`", ",", "434", ",", "0.0149068322981`", ",", 
     "0.025641025641`", ",", "0.974358974359`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "17.7827941004`", ",", "4.5`", ",", "473", ",", "0.0149068322981`", ",", 
     "0.0307692307692`", ",", "0.969230769231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "17.7827941004`", ",", "5.`", ",", "501", ",", "0.0149068322981`", ",", 
     "0.0307692307692`", ",", "0.969230769231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "17.7827941004`", ",", "5.5`", ",", "540", ",", "0.016149068323`", ",", 
     "0.0307692307692`", ",", "0.969230769231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "17.7827941004`", ",", "6.`", ",", "569", ",", "0.016149068323`", ",", 
     "0.0307692307692`", ",", "0.969230769231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "31.6227766017`", ",", "1.`", ",", "49", ",", "0.0124223602484`", ",", 
     "0.0358974358974`", ",", "0.964102564103`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "31.6227766017`", ",", "1.5`", ",", "165", ",", "0.0111801242236`", ",", 
     "0.0358974358974`", ",", "0.964102564103`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "31.6227766017`", ",", "2.`", ",", "238", ",", "0.0136645962733`", ",", 
     "0.0307692307692`", ",", "0.969230769231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "31.6227766017`", ",", "2.5`", ",", "297", ",", "0.016149068323`", ",", 
     "0.0307692307692`", ",", "0.969230769231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "31.6227766017`", ",", "3.`", ",", "365", ",", "0.016149068323`", ",", 
     "0.0307692307692`", ",", "0.969230769231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "31.6227766017`", ",", "3.5`", ",", "405", ",", "0.0149068322981`", ",", 
     "0.0358974358974`", ",", "0.964102564103`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "31.6227766017`", ",", "4.`", ",", "432", ",", "0.0149068322981`", ",", 
     "0.0307692307692`", ",", "0.969230769231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "31.6227766017`", ",", "4.5`", ",", "471", ",", "0.0149068322981`", ",", 
     "0.0307692307692`", ",", "0.969230769231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "31.6227766017`", ",", "5.`", ",", "502", ",", "0.0149068322981`", ",", 
     "0.0307692307692`", ",", "0.969230769231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "31.6227766017`", ",", "5.5`", ",", "538", ",", "0.016149068323`", ",", 
     "0.0307692307692`", ",", "0.969230769231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "31.6227766017`", ",", "6.`", ",", "573", ",", "0.016149068323`", ",", 
     "0.0307692307692`", ",", "0.969230769231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "56.234132519`", ",", "1.`", ",", "43", ",", "0.0124223602484`", ",", 
     "0.0358974358974`", ",", "0.964102564103`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "56.234132519`", ",", "1.5`", ",", "159", ",", "0.0111801242236`", ",", 
     "0.0307692307692`", ",", "0.969230769231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "56.234132519`", ",", "2.`", ",", "237", ",", "0.0136645962733`", ",", 
     "0.025641025641`", ",", "0.974358974359`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "56.234132519`", ",", "2.5`", ",", "300", ",", "0.016149068323`", ",", 
     "0.025641025641`", ",", "0.974358974359`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "56.234132519`", ",", "3.`", ",", "362", ",", "0.016149068323`", ",", 
     "0.025641025641`", ",", "0.974358974359`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "56.234132519`", ",", "3.5`", ",", "410", ",", "0.0149068322981`", ",", 
     "0.0307692307692`", ",", "0.969230769231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "56.234132519`", ",", "4.`", ",", "435", ",", "0.0149068322981`", ",", 
     "0.0307692307692`", ",", "0.969230769231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "56.234132519`", ",", "4.5`", ",", "471", ",", "0.0149068322981`", ",", 
     "0.0307692307692`", ",", "0.969230769231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "56.234132519`", ",", "5.`", ",", "502", ",", "0.0149068322981`", ",", 
     "0.0307692307692`", ",", "0.969230769231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "56.234132519`", ",", "5.5`", ",", "538", ",", "0.016149068323`", ",", 
     "0.0307692307692`", ",", "0.969230769231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "56.234132519`", ",", "6.`", ",", "573", ",", "0.016149068323`", ",", 
     "0.0307692307692`", ",", "0.969230769231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "100.`", ",", "1.`", ",", "41", ",", "0.0124223602484`", ",", 
     "0.0358974358974`", ",", "0.964102564103`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "100.`", ",", "1.5`", ",", "165", ",", "0.0111801242236`", ",", 
     "0.0358974358974`", ",", "0.964102564103`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "100.`", ",", "2.`", ",", "234", ",", "0.0136645962733`", ",", 
     "0.025641025641`", ",", "0.974358974359`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "100.`", ",", "2.5`", ",", "304", ",", "0.016149068323`", ",", 
     "0.025641025641`", ",", "0.974358974359`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "100.`", ",", "3.`", ",", "362", ",", "0.016149068323`", ",", 
     "0.025641025641`", ",", "0.974358974359`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "100.`", ",", "3.5`", ",", "410", ",", "0.0149068322981`", ",", 
     "0.0307692307692`", ",", "0.969230769231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "100.`", ",", "4.`", ",", "435", ",", "0.0149068322981`", ",", 
     "0.0307692307692`", ",", "0.969230769231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "100.`", ",", "4.5`", ",", "471", ",", "0.0149068322981`", ",", 
     "0.0307692307692`", ",", "0.969230769231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "100.`", ",", "5.`", ",", "502", ",", "0.0149068322981`", ",", 
     "0.0307692307692`", ",", "0.969230769231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "100.`", ",", "5.5`", ",", "538", ",", "0.016149068323`", ",", 
     "0.0307692307692`", ",", "0.969230769231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "100.`", ",", "6.`", ",", "573", ",", "0.016149068323`", ",", 
     "0.0307692307692`", ",", "0.969230769231`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.672643878656846*^9, 3.6726441754190817`*^9, 
  3.672644338915682*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
BDS: Number of Stumps,  Efficiency, False Positive Fraction, False Negative \
Fraction\
\>", "Section",
 CellChangeTimes->{
  3.670374745223699*^9, 3.670375057298338*^9, {3.671536485063921*^9, 
   3.671536509540853*^9}, {3.671538678866248*^9, 3.67153867974384*^9}, {
   3.671541838512536*^9, 3.671541838927367*^9}, {3.672564638505356*^9, 
   3.672564640321226*^9}, {3.6726370906930103`*^9, 3.6726370910086*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"BDSLinearHardRawData", "=", " ", 
   RowBox[{"Import", " ", "[", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<BDT\>\"", ",", 
        "\"\<Results\>\"", ",", "\"\<linearhard0519\>\""}], "}"}], "]"}], ",",
      " ", "\"\<Table\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BDSLinearSoftRawData", "=", " ", 
    RowBox[{"Import", " ", "[", 
     RowBox[{
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<BDT\>\"", ",", 
         "\"\<Results\>\"", ",", "\"\<linearsoft0519\>\""}], "}"}], "]"}], 
      ",", " ", "\"\<Table\>\""}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDSCircleHardRawData", "=", " ", 
   RowBox[{"Import", " ", "[", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<BDT\>\"", ",", 
        "\"\<Results\>\"", ",", "\"\<circlehard0519\>\""}], "}"}], "]"}], ",",
      " ", "\"\<Table\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BDSCircleSoftRawData", "=", " ", 
    RowBox[{"Import", " ", "[", 
     RowBox[{
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<BDT\>\"", ",", 
         "\"\<Results\>\"", ",", "\"\<circlesoft0519\>\""}], "}"}], "]"}], 
      ",", " ", "\"\<Table\>\""}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDSTwoCircleHardRawData", "=", " ", 
   RowBox[{"Import", " ", "[", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<BDT\>\"", ",", 
        "\"\<Results\>\"", ",", "\"\<twocirclehard0519\>\""}], "}"}], "]"}], 
     ",", " ", "\"\<Table\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDSTwoCircleSoftRawData", "=", " ", 
   RowBox[{"Import", " ", "[", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<BDT\>\"", ",", 
        "\"\<Results\>\"", ",", "\"\<twocirclesoft0519\>\""}], "}"}], "]"}], 
     ",", " ", "\"\<Table\>\""}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6703269965792522`*^9, 3.670327023687717*^9}, {
  3.670327216580103*^9, 3.670327217962435*^9}, {3.670327481322748*^9, 
  3.6703274856825933`*^9}, {3.670327577342249*^9, 3.670327579403215*^9}, {
  3.67032770120446*^9, 3.670327711305008*^9}, {3.670328062741159*^9, 
  3.6703280633723297`*^9}, {3.670374737394896*^9, 3.670374748081676*^9}, {
  3.670932644897143*^9, 3.6709326698142147`*^9}, {3.67093946531529*^9, 
  3.670939472770157*^9}, {3.6725681995700274`*^9, 3.672568214695856*^9}, {
  3.672568314805361*^9, 3.6725683315568333`*^9}, {3.6725696055271387`*^9, 
  3.672569606398636*^9}, {3.6726370939380217`*^9, 3.672637100482712*^9}, {
  3.6726371376875763`*^9, 3.6726371413270473`*^9}, {3.6726374150957737`*^9, 
  3.6726374239285393`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Import", "::", "nffil"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"File not found during \[NoBreak]\\!\\(Import\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Import/nffil\\\", \
ButtonNote -> \\\"Import::nffil\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6726438789392567`*^9, 3.672644175712538*^9, 
  3.672644339218656*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Import", "::", "nffil"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"File not found during \[NoBreak]\\!\\(Import\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Import/nffil\\\", \
ButtonNote -> \\\"Import::nffil\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6726438789392567`*^9, 3.672644175712538*^9, 
  3.6726443392527037`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Import", "::", "nffil"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"File not found during \[NoBreak]\\!\\(Import\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Import/nffil\\\", \
ButtonNote -> \\\"Import::nffil\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6726438789392567`*^9, 3.672644175712538*^9, 
  3.67264433929959*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Import", "::", "nffil"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"File not found during \[NoBreak]\\!\\(Import\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Import/nffil\\\", \
ButtonNote -> \\\"Import::nffil\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6726438789392567`*^9, 3.672644175712538*^9, 
  3.672644339348504*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Import", "::", "nffil"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"File not found during \[NoBreak]\\!\\(Import\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Import/nffil\\\", \
ButtonNote -> \\\"Import::nffil\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6726438789392567`*^9, 3.672644175712538*^9, 
  3.672644339394279*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Import", "::", "nffil"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"File not found during \[NoBreak]\\!\\(Import\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Import/nffil\\\", \
ButtonNote -> \\\"Import::nffil\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6726438789392567`*^9, 3.672644175712538*^9, 
  3.672644339440436*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
BDT: Number of Trees,  Efficiency, False Positive Fraction, False Negative \
Fraction\
\>", "Section",
 CellChangeTimes->{{3.672637194595977*^9, 3.672637199328768*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"BDTLinearHardRawData", "=", " ", 
   RowBox[{"Import", " ", "[", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<BDT\>\"", ",", 
        "\"\<ResultsTree\>\"", ",", "\"\<linearhard0519\>\""}], "}"}], "]"}], 
     ",", " ", "\"\<Table\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BDTLinearSoftRawData", "=", " ", 
    RowBox[{"Import", " ", "[", 
     RowBox[{
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<BDT\>\"", ",", 
         "\"\<ResultsTree\>\"", ",", "\"\<linearsoft0519\>\""}], "}"}], "]"}],
       ",", " ", "\"\<Table\>\""}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDTCircleHardRawData", "=", " ", 
   RowBox[{"Import", " ", "[", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<BDT\>\"", ",", 
        "\"\<ResultsTree\>\"", ",", "\"\<circlehard0519\>\""}], "}"}], "]"}], 
     ",", " ", "\"\<Table\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BDTCircleSoftRawData", "=", " ", 
    RowBox[{"Import", " ", "[", 
     RowBox[{
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<BDT\>\"", ",", 
         "\"\<ResultsTree\>\"", ",", "\"\<circlesoft0519\>\""}], "}"}], "]"}],
       ",", " ", "\"\<Table\>\""}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDTTwoCircleHardRawData", "=", " ", 
   RowBox[{"Import", " ", "[", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<BDT\>\"", ",", 
        "\"\<ResultsTree\>\"", ",", "\"\<twocirclehard0519\>\""}], "}"}], 
      "]"}], ",", " ", "\"\<Table\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDTTwoCircleSoftRawData", "=", " ", 
   RowBox[{"Import", " ", "[", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<BDT\>\"", ",", 
        "\"\<ResultsTree\>\"", ",", "\"\<twocirclesoft0519\>\""}], "}"}], 
      "]"}], ",", " ", "\"\<Table\>\""}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6726372181527443`*^9, 3.672637241876794*^9}, {
  3.672637427726871*^9, 3.6726374341894913`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Import", "::", "nffil"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"File not found during \[NoBreak]\\!\\(Import\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Import/nffil\\\", \
ButtonNote -> \\\"Import::nffil\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643879178439*^9, 3.6726441759495983`*^9, 
  3.6726443394905367`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Import", "::", "nffil"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"File not found during \[NoBreak]\\!\\(Import\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Import/nffil\\\", \
ButtonNote -> \\\"Import::nffil\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643879178439*^9, 3.6726441759495983`*^9, 
  3.672644339536785*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Import", "::", "nffil"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"File not found during \[NoBreak]\\!\\(Import\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Import/nffil\\\", \
ButtonNote -> \\\"Import::nffil\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643879178439*^9, 3.6726441759495983`*^9, 
  3.6726443395824013`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Import", "::", "nffil"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"File not found during \[NoBreak]\\!\\(Import\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Import/nffil\\\", \
ButtonNote -> \\\"Import::nffil\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643879178439*^9, 3.6726441759495983`*^9, 
  3.672644339627537*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Import", "::", "nffil"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"File not found during \[NoBreak]\\!\\(Import\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Import/nffil\\\", \
ButtonNote -> \\\"Import::nffil\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643879178439*^9, 3.6726441759495983`*^9, 
  3.672644339675795*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Import", "::", "nffil"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"File not found during \[NoBreak]\\!\\(Import\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Import/nffil\\\", \
ButtonNote -> \\\"Import::nffil\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643879178439*^9, 3.6726441759495983`*^9, 
  3.6726443397206306`*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Formatted Datasets", "Chapter",
 CellChangeTimes->{3.670374783490404*^9}],

Cell[CellGroupData[{

Cell["SVM", "Section",
 CellChangeTimes->{3.670374794768991*^9}],

Cell[CellGroupData[{

Cell["c-\[Gamma]-Efficiency", "Subsection",
 CellChangeTimes->{3.670374800632739*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SVMLinearHardCGE", " ", "=", " ", 
   RowBox[{"SVMLinearHardRawData", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", " ", "6"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SVMLinearSoftCGE", " ", "=", " ", 
    RowBox[{"SVMLinearSoftRawData", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", " ", "6"}], "}"}]}], "]"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SVMCircleHardCGE", " ", "=", " ", 
   RowBox[{"SVMCircleHardRawData", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", " ", "6"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SVMCircleSoftCGE", " ", "=", " ", 
    RowBox[{"SVMCircleSoftRawData", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", " ", "6"}], "}"}]}], "]"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SVMTwoCircleHardCGE", " ", "=", " ", 
   RowBox[{"SVMTwoCircleHardRawData", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", " ", "6"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SVMTwoCircleSoftCGE", " ", "=", " ", 
   RowBox[{"SVMTwoCircleSoftRawData", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", " ", "6"}], "}"}]}], "]"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6458957669860783`*^9, 3.6458957681941032`*^9}, {
   3.645895848184383*^9, 3.645895895685553*^9}, {3.645895979439611*^9, 
   3.645896043667047*^9}, {3.645896461734478*^9, 3.6458964944049377`*^9}, {
   3.646147018164769*^9, 3.6461470236845827`*^9}, {3.646147115393324*^9, 
   3.6461471388870907`*^9}, {3.646147173514226*^9, 3.646147174501964*^9}, 
   3.646148020520252*^9, 3.64614869561548*^9, {3.646149205509503*^9, 
   3.646149208885244*^9}, {3.64652885465926*^9, 3.646528918214838*^9}, {
   3.646583501892984*^9, 3.6465835198146276`*^9}, {3.646584162008995*^9, 
   3.646584173663227*^9}, {3.647049087017199*^9, 3.647049096217198*^9}, {
   3.652592337498508*^9, 3.65259234481711*^9}, 3.670326989683516*^9, {
   3.670327035095395*^9, 3.67032707088356*^9}, {3.6703271108566017`*^9, 
   3.670327112497054*^9}, {3.670327267755802*^9, 3.670327295547206*^9}, {
   3.670327350695256*^9, 3.6703274001532717`*^9}, {3.6703274378306313`*^9, 
   3.670327438270843*^9}, {3.670328057657029*^9, 3.67032805898076*^9}, {
   3.670328447579053*^9, 3.67032865540519*^9}, {3.670328701063665*^9, 
   3.670328744540131*^9}, {3.6703288293823442`*^9, 3.6703288838406153`*^9}, 
   3.670328934175758*^9, {3.6703747886565313`*^9, 3.670374814038397*^9}, {
   3.670374945891951*^9, 3.67037494666431*^9}, {3.6725670785087023`*^9, 
   3.672567173037406*^9}, {3.67256962254145*^9, 3.672569623324004*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Log(c)-\[Gamma]-Efficiency", "Subsection",
 CellChangeTimes->{3.670374820263287*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SVMLinearHardLogCGE", " ", "=", " ", 
   RowBox[{"MapAt", "[", 
    RowBox[{"Log10", ",", " ", "SVMLinearHardCGE", ",", " ", 
     RowBox[{"{", 
      RowBox[{"All", ",", " ", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SVMLinearSoftLogCGE", " ", "=", " ", 
    RowBox[{"MapAt", "[", 
     RowBox[{"Log10", ",", " ", "SVMLinearSoftCGE", ",", " ", 
      RowBox[{"{", 
       RowBox[{"All", ",", " ", "1"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SVMCircleHardLogCGE", " ", "=", " ", 
   RowBox[{"MapAt", "[", 
    RowBox[{"Log10", ",", " ", "SVMCircleHardCGE", ",", " ", 
     RowBox[{"{", 
      RowBox[{"All", ",", " ", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SVMCircleSoftLogCGE", " ", "=", " ", 
    RowBox[{"MapAt", "[", 
     RowBox[{"Log10", ",", " ", "SVMCircleSoftCGE", ",", " ", 
      RowBox[{"{", 
       RowBox[{"All", ",", " ", "1"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SVMTwoCircleHardLogCGE", " ", "=", " ", 
   RowBox[{"MapAt", "[", 
    RowBox[{"Log10", ",", " ", "SVMTwoCircleHardCGE", ",", " ", 
     RowBox[{"{", 
      RowBox[{"All", ",", " ", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SVMTwoCircleSoftLogCGE", " ", "=", " ", 
   RowBox[{"MapAt", "[", 
    RowBox[{"Log10", ",", " ", "SVMTwoCircleSoftCGE", ",", " ", 
     RowBox[{"{", 
      RowBox[{"All", ",", " ", "1"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6458957669860783`*^9, 3.6458957681941032`*^9}, {
   3.645895848184383*^9, 3.645895895685553*^9}, {3.645895979439611*^9, 
   3.645896043667047*^9}, {3.645896461734478*^9, 3.6458964944049377`*^9}, {
   3.646147018164769*^9, 3.6461470236845827`*^9}, {3.646147115393324*^9, 
   3.6461471388870907`*^9}, {3.646147173514226*^9, 3.646147174501964*^9}, 
   3.646148020520252*^9, 3.64614869561548*^9, {3.646149205509503*^9, 
   3.646149208885244*^9}, {3.64652885465926*^9, 3.646528918214838*^9}, {
   3.646583501892984*^9, 3.6465835198146276`*^9}, {3.646584162008995*^9, 
   3.646584173663227*^9}, {3.647049087017199*^9, 3.647049096217198*^9}, {
   3.652592337498508*^9, 3.65259234481711*^9}, 3.670326989683516*^9, {
   3.670327035095395*^9, 3.67032707088356*^9}, {3.6703271108566017`*^9, 
   3.670327112497054*^9}, {3.670327267755802*^9, 3.670327295547206*^9}, {
   3.670327350695256*^9, 3.6703274001532717`*^9}, {3.6703274378306313`*^9, 
   3.670327438270843*^9}, {3.670328057657029*^9, 3.67032805898076*^9}, {
   3.670328447579053*^9, 3.67032865540519*^9}, {3.670328701063665*^9, 
   3.670328744540131*^9}, {3.6703288293823442`*^9, 3.6703288838406153`*^9}, 
   3.670328934175758*^9, {3.6703747886565313`*^9, 3.670374822753456*^9}, 
   3.670374869182987*^9, {3.6725671597184153`*^9, 3.672567224880069*^9}, {
   3.67256962695723*^9, 3.6725696278363943`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Efficiency-1 - False Positive Fraction", "Subsection",
 CellChangeTimes->{
  3.6703748774522448`*^9, {3.670375048690886*^9, 3.67037505162679*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SVMLinearHardEFP", "=", " ", 
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#"}], "&"}], ",", 
     RowBox[{"SVMLinearHardRawData", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"6", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SVMLinearSoftEFP", "=", " ", 
    RowBox[{"MapAt", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"1", "-", "#"}], "&"}], ",", 
      RowBox[{"SVMLinearSoftRawData", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{"6", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SVMCircleHardEFP", " ", "=", " ", 
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#"}], "&"}], ",", 
     RowBox[{"SVMCircleHardRawData", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"6", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SVMCircleSoftEFP", " ", "=", " ", 
    RowBox[{"MapAt", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"1", "-", "#"}], "&"}], ",", 
      RowBox[{"SVMCircleSoftRawData", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{"6", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SVMTwoCircleHardEFP", " ", "=", " ", 
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#"}], "&"}], ",", 
     RowBox[{"SVMTwoCircleHardRawData", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"6", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SVMTwoCircleSoftEFP", " ", "=", " ", 
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#"}], "&"}], ",", 
     RowBox[{"SVMTwoCircleSoftRawData", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"6", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6458957669860783`*^9, 3.6458957681941032`*^9}, {
   3.645895848184383*^9, 3.645895895685553*^9}, {3.645895979439611*^9, 
   3.645896043667047*^9}, {3.645896461734478*^9, 3.6458964944049377`*^9}, {
   3.646147018164769*^9, 3.6461470236845827`*^9}, {3.646147115393324*^9, 
   3.6461471388870907`*^9}, {3.646147173514226*^9, 3.646147174501964*^9}, 
   3.646148020520252*^9, 3.64614869561548*^9, {3.646149205509503*^9, 
   3.646149208885244*^9}, {3.64652885465926*^9, 3.646528918214838*^9}, {
   3.646583501892984*^9, 3.6465835198146276`*^9}, {3.646584162008995*^9, 
   3.646584173663227*^9}, {3.647049087017199*^9, 3.647049096217198*^9}, {
   3.652592337498508*^9, 3.65259234481711*^9}, 3.670326989683516*^9, {
   3.670327035095395*^9, 3.67032707088356*^9}, {3.6703271108566017`*^9, 
   3.670327112497054*^9}, {3.670327267755802*^9, 3.670327295547206*^9}, {
   3.670327350695256*^9, 3.6703274001532717`*^9}, {3.6703274378306313`*^9, 
   3.670327438270843*^9}, {3.670328057657029*^9, 3.67032805898076*^9}, {
   3.670328447579053*^9, 3.67032865540519*^9}, {3.670328701063665*^9, 
   3.670328744540131*^9}, {3.6703288293823442`*^9, 3.6703288838406153`*^9}, 
   3.670328934175758*^9, {3.6703747886565313`*^9, 3.670374822753456*^9}, {
   3.670374869182987*^9, 3.670374897516728*^9}, {3.672567240132958*^9, 
   3.672567309509758*^9}, 3.672567342012237*^9, {3.672569630349494*^9, 
   3.67256963089233*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Efficiency-1 - False Negative Fraction", "Subsection",
 CellChangeTimes->{
  3.6703748948196573`*^9, {3.670375041651226*^9, 3.6703750447391167`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SVMLinearHardEFN", "=", " ", 
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#"}], "&"}], ",", 
     RowBox[{"SVMLinearHardRawData", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"6", ",", "5"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SVMLinearSoftEFN", "=", " ", 
    RowBox[{"MapAt", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"1", "-", "#"}], "&"}], ",", 
      RowBox[{"SVMLinearSoftRawData", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{"6", ",", "5"}], "}"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SVMCircleHardEFN", " ", "=", " ", 
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#"}], "&"}], ",", 
     RowBox[{"SVMCircleHardRawData", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"6", ",", "5"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SVMCircleSoftEFN", " ", "=", " ", 
    RowBox[{"MapAt", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"1", "-", "#"}], "&"}], ",", 
      RowBox[{"SVMCircleSoftRawData", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{"6", ",", "5"}], "}"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SVMTwoCircleHardEFN", " ", "=", " ", 
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#"}], "&"}], ",", 
     RowBox[{"SVMTwoCircleHardRawData", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"6", ",", "5"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SVMTwoCircleSoftEFN", " ", "=", " ", 
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#"}], "&"}], ",", 
     RowBox[{"SVMTwoCircleSoftRawData", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"6", ",", "5"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6458957669860783`*^9, 3.6458957681941032`*^9}, {
   3.645895848184383*^9, 3.645895895685553*^9}, {3.645895979439611*^9, 
   3.645896043667047*^9}, {3.645896461734478*^9, 3.6458964944049377`*^9}, {
   3.646147018164769*^9, 3.6461470236845827`*^9}, {3.646147115393324*^9, 
   3.6461471388870907`*^9}, {3.646147173514226*^9, 3.646147174501964*^9}, 
   3.646148020520252*^9, 3.64614869561548*^9, {3.646149205509503*^9, 
   3.646149208885244*^9}, {3.64652885465926*^9, 3.646528918214838*^9}, {
   3.646583501892984*^9, 3.6465835198146276`*^9}, {3.646584162008995*^9, 
   3.646584173663227*^9}, {3.647049087017199*^9, 3.647049096217198*^9}, {
   3.652592337498508*^9, 3.65259234481711*^9}, 3.670326989683516*^9, {
   3.670327035095395*^9, 3.67032707088356*^9}, {3.6703271108566017`*^9, 
   3.670327112497054*^9}, {3.670327267755802*^9, 3.670327295547206*^9}, {
   3.670327350695256*^9, 3.6703274001532717`*^9}, {3.6703274378306313`*^9, 
   3.670327438270843*^9}, {3.670328057657029*^9, 3.67032805898076*^9}, {
   3.670328447579053*^9, 3.67032865540519*^9}, {3.670328701063665*^9, 
   3.670328744540131*^9}, {3.6703288293823442`*^9, 3.6703288838406153`*^9}, 
   3.670328934175758*^9, {3.6703747886565313`*^9, 3.670374822753456*^9}, {
   3.670374869182987*^9, 3.6703749368915873`*^9}, {3.672567314744774*^9, 
   3.672567344171556*^9}, {3.6725692652799797`*^9, 3.6725692752756863`*^9}, {
   3.672569633508635*^9, 3.672569634012274*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["False Positive Fraction-1 - False Negative Fraction", "Subsection",
 CellChangeTimes->{
  3.670374934706149*^9, {3.670375034867333*^9, 3.6703750399472847`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SVMLinearHardFPFN", "=", " ", 
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#"}], "&"}], ",", 
     RowBox[{"SVMLinearHardRawData", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "5"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SVMLinearSoftFPFN", "=", " ", 
    RowBox[{"MapAt", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"1", "-", "#"}], "&"}], ",", 
      RowBox[{"SVMLinearSoftRawData", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{"4", ",", "5"}], "}"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SVMCircleHardFPFN", " ", "=", " ", 
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#"}], "&"}], ",", 
     RowBox[{"SVMCircleHardRawData", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "5"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SVMCircleSoftFPFN", "=", " ", 
    RowBox[{"MapAt", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"1", "-", "#"}], "&"}], ",", 
      RowBox[{"SVMCircleSoftRawData", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{"4", ",", "5"}], "}"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SVMTwoCircleHardFPFN", " ", "=", " ", 
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#"}], "&"}], ",", 
     RowBox[{"SVMTwoCircleHardRawData", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "5"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SVMTwoCircleSoftFPFN", "=", " ", 
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#"}], "&"}], ",", 
     RowBox[{"SVMTwoCircleSoftRawData", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "5"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6458957669860783`*^9, 3.6458957681941032`*^9}, {
   3.645895848184383*^9, 3.645895895685553*^9}, {3.645895979439611*^9, 
   3.645896043667047*^9}, {3.645896461734478*^9, 3.6458964944049377`*^9}, {
   3.646147018164769*^9, 3.6461470236845827`*^9}, {3.646147115393324*^9, 
   3.6461471388870907`*^9}, {3.646147173514226*^9, 3.646147174501964*^9}, 
   3.646148020520252*^9, 3.64614869561548*^9, {3.646149205509503*^9, 
   3.646149208885244*^9}, {3.64652885465926*^9, 3.646528918214838*^9}, {
   3.646583501892984*^9, 3.6465835198146276`*^9}, {3.646584162008995*^9, 
   3.646584173663227*^9}, {3.647049087017199*^9, 3.647049096217198*^9}, {
   3.652592337498508*^9, 3.65259234481711*^9}, 3.670326989683516*^9, {
   3.670327035095395*^9, 3.67032707088356*^9}, {3.6703271108566017`*^9, 
   3.670327112497054*^9}, {3.670327267755802*^9, 3.670327295547206*^9}, {
   3.670327350695256*^9, 3.6703274001532717`*^9}, {3.6703274378306313`*^9, 
   3.670327438270843*^9}, {3.670328057657029*^9, 3.67032805898076*^9}, {
   3.670328447579053*^9, 3.67032865540519*^9}, {3.670328701063665*^9, 
   3.670328744540131*^9}, {3.6703288293823442`*^9, 3.6703288838406153`*^9}, 
   3.670328934175758*^9, {3.6703747886565313`*^9, 3.670374822753456*^9}, {
   3.670374869182987*^9, 3.670374932874607*^9}, {3.67256733017166*^9, 
   3.6725673461637087`*^9}, {3.672569282085449*^9, 3.672569299793499*^9}, {
   3.672569637116397*^9, 3.672569638003632*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["BDS", "Section",
 CellChangeTimes->{
  3.670374967032085*^9, {3.6726371528128023`*^9, 3.672637153004765*^9}}],

Cell[CellGroupData[{

Cell["Number of Stumps-Efficiency", "Subsection",
 CellChangeTimes->{{3.670374980008195*^9, 3.67037498681354*^9}, {
   3.670939486288014*^9, 3.670939488903781*^9}, {3.671536512322834*^9, 
   3.671536512475671*^9}, {3.671538700382721*^9, 3.6715387010709248`*^9}, 
   3.6715418547428226`*^9, {3.672637305110148*^9, 3.672637306166306*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"BDSLinearHardSE", " ", "=", " ", 
   RowBox[{"BDSLinearHardRawData", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BDSLinearSoftSE", " ", "=", " ", 
    RowBox[{"BDSLinearSoftRawData", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDSCircleHardSE", " ", "=", " ", 
   RowBox[{"BDSCircleHardRawData", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BDSCircleSoftSE", " ", "=", " ", 
    RowBox[{"BDSCircleSoftRawData", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDSTwoCircleHardSE", " ", "=", " ", 
   RowBox[{"BDSTwoCircleHardRawData", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDSTwoCircleSoftSE", " ", "=", " ", 
   RowBox[{"BDSTwoCircleSoftRawData", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6703271167369547`*^9, 3.6703271490209084`*^9}, {
   3.670327407136291*^9, 3.670327416639792*^9}, {3.670328088818083*^9, 
   3.67032808958603*^9}, {3.670328669730761*^9, 3.6703286703861313`*^9}, {
   3.670328937131645*^9, 3.670328968833178*^9}, {3.670374964889449*^9, 
   3.6703749764715014`*^9}, {3.670375006684169*^9, 3.670375009214158*^9}, {
   3.670939492496768*^9, 3.6709394989042463`*^9}, {3.671536519604545*^9, 
   3.6715365254106827`*^9}, {3.671536605183103*^9, 3.6715366084948397`*^9}, {
   3.671538692056406*^9, 3.6715386959440317`*^9}, {3.6715418567996397`*^9, 
   3.671541859977797*^9}, {3.67154199002221*^9, 3.671541994776412*^9}, {
   3.6725682452198277`*^9, 3.672568296977912*^9}, 3.6725683441199408`*^9, {
   3.672569648235074*^9, 3.672569648786447*^9}, {3.6726371555577593`*^9, 
   3.672637170188239*^9}, {3.672637440508729*^9, 3.6726374531558027`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\
\\!\\(0\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643879580824*^9, 3.672644176258408*^9, 
  3.6726443398183403`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\
\\!\\(0\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643879580824*^9, 3.672644176258408*^9, 
  3.67264433985495*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\
\\!\\(0\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643879580824*^9, 3.672644176258408*^9, 
  3.6726443398945847`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\
\\!\\(0\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643879580824*^9, 3.672644176258408*^9, 
  3.672644339938252*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\
\\!\\(0\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643879580824*^9, 3.672644176258408*^9, 
  3.6726443399790363`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\
\\!\\(0\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643879580824*^9, 3.672644176258408*^9, 
  3.6726443400193872`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Efficiency-1 - False Positive Fraction", "Subsection",
 CellChangeTimes->{3.670424631301402*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"BDSLinearHardEFP", " ", "=", " ", 
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#"}], "&"}], ",", 
     RowBox[{"BDSLinearHardRawData", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BDSLinearSoftEFP", " ", "=", " ", 
    RowBox[{"MapAt", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"1", "-", "#"}], "&"}], ",", 
      RowBox[{"BDSLinearSoftRawData", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "3"}], "}"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDSCircleHardEFP", " ", "=", " ", 
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#"}], "&"}], ",", 
     RowBox[{"BDSCircleHardRawData", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BDSCircleSoftEFP", " ", "=", " ", 
    RowBox[{"MapAt", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"1", "-", "#"}], "&"}], ",", 
      RowBox[{"BDSCircleSoftRawData", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "3"}], "}"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDSTwoCircleHardEFP", " ", "=", " ", 
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#"}], "&"}], ",", 
     RowBox[{"BDSTwoCircleHardRawData", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDSTwoCircleSoftEFP", " ", "=", " ", 
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#"}], "&"}], ",", 
     RowBox[{"BDSTwoCircleSoftRawData", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.670424644332982*^9, 3.670424711960997*^9}, {
  3.670939871510271*^9, 3.670939874318955*^9}, {3.67153674945823*^9, 
  3.671536768423601*^9}, {3.67153682381546*^9, 3.67153683047736*^9}, {
  3.671542006028742*^9, 3.6715420133979387`*^9}, {3.672568353188861*^9, 
  3.672568407922757*^9}, {3.672569650835374*^9, 3.672569651258834*^9}, {
  3.6726374554997787`*^9, 3.672637470682206*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\
\\!\\(0\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643879870204*^9, 3.672644176548193*^9, 
  3.672644340098235*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\
\\!\\(0\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643879870204*^9, 3.672644176548193*^9, 
  3.6726443401382504`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\
\\!\\(0\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643879870204*^9, 3.672644176548193*^9, 
  3.672644340181344*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\
\\!\\(0\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643879870204*^9, 3.672644176548193*^9, 
  3.672644340221696*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\
\\!\\(0\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643879870204*^9, 3.672644176548193*^9, 
  3.672644340263253*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\
\\!\\(0\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643879870204*^9, 3.672644176548193*^9, 
  3.672644340306629*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Efficiency-1 - False Negative Fraction", "Subsection",
 CellChangeTimes->{{3.670375012799139*^9, 3.670375030851686*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"BDSLinearHardEFN", " ", "=", " ", 
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#"}], "&"}], ",", 
     RowBox[{"BDSLinearHardRawData", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BDSLinearSoftEFN", " ", "=", " ", 
    RowBox[{"MapAt", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"1", "-", "#"}], "&"}], ",", 
      RowBox[{"BDSLinearSoftRawData", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDSCircleHardEFN", " ", "=", " ", 
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#"}], "&"}], ",", 
     RowBox[{"BDSCircleHardRawData", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BDSCircleSoftEFN", " ", "=", " ", 
    RowBox[{"MapAt", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"1", "-", "#"}], "&"}], ",", 
      RowBox[{"BDSCircleSoftRawData", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDSTwoCircleHardEFN", " ", "=", " ", 
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#"}], "&"}], ",", 
     RowBox[{"BDSTwoCircleHardRawData", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDSTwoCircleSoftEFN", " ", "=", " ", 
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#"}], "&"}], ",", 
     RowBox[{"BDSTwoCircleSoftRawData", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6703271167369547`*^9, 3.6703271490209084`*^9}, {
  3.670327407136291*^9, 3.670327416639792*^9}, {3.670328088818083*^9, 
  3.67032808958603*^9}, {3.670328669730761*^9, 3.6703286703861313`*^9}, {
  3.670328937131645*^9, 3.670328968833178*^9}, {3.670374964889449*^9, 
  3.6703749764715014`*^9}, {3.670375006684169*^9, 3.6703750146414633`*^9}, {
  3.671536770568179*^9, 3.671536836965081*^9}, {3.671542021374001*^9, 
  3.671542028253149*^9}, {3.672568423326232*^9, 3.6725684295625277`*^9}, {
  3.672569653642138*^9, 3.6725696540658293`*^9}, {3.67257003502862*^9, 
  3.672570051674779*^9}, {3.672637474338492*^9, 3.672637491104493*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\
\\!\\(0\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643880126252*^9, 3.672644176797286*^9, 
  3.672644340354599*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\
\\!\\(0\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643880126252*^9, 3.672644176797286*^9, 
  3.672644340395668*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\
\\!\\(0\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643880126252*^9, 3.672644176797286*^9, 
  3.672644340437695*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\
\\!\\(0\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643880126252*^9, 3.672644176797286*^9, 
  3.6726443404718523`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\
\\!\\(0\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643880126252*^9, 3.672644176797286*^9, 
  3.6726443405099697`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\
\\!\\(0\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643880126252*^9, 3.672644176797286*^9, 
  3.6726443405486403`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["False Positive Fraction-1 - False Negative Fraction", "Subsection",
 CellChangeTimes->{3.6704247210426607`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"BDSLinearHardFPFN", " ", "=", " ", 
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#"}], "&"}], ",", 
     RowBox[{"BDSLinearHardRawData", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BDSLinearSoftFPFN", " ", "=", " ", 
    RowBox[{"MapAt", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"1", "-", "#"}], "&"}], ",", 
      RowBox[{"BDSLinearSoftRawData", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDSCircleHardFPFN", " ", "=", " ", 
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#"}], "&"}], ",", 
     RowBox[{"BDSCircleHardRawData", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BDSCircleSoftFPFN", " ", "=", " ", 
    RowBox[{"MapAt", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"1", "-", "#"}], "&"}], ",", 
      RowBox[{"BDSCircleSoftRawData", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDSTwoCircleHardFPFN", " ", "=", " ", 
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#"}], "&"}], ",", 
     RowBox[{"BDSTwoCircleHardRawData", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDSTwoCircleSoftFPFN", " ", "=", " ", 
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#"}], "&"}], ",", 
     RowBox[{"BDSTwoCircleSoftRawData", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.670424733624148*^9, 3.670424759742743*^9}, {
  3.670939878637787*^9, 3.670939910108811*^9}, {3.671536839389258*^9, 
  3.671536844836809*^9}, {3.671542046063175*^9, 3.671542051735408*^9}, {
  3.672568437397332*^9, 3.6725684439293547`*^9}, {3.672569656018303*^9, 
  3.672569656506246*^9}, {3.672570054356432*^9, 3.672570071762224*^9}, {
  3.672637494280489*^9, 3.672637511518858*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\
\\!\\(0\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643880379541*^9, 3.672644177048154*^9, 
  3.67264434059263*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\
\\!\\(0\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643880379541*^9, 3.672644177048154*^9, 
  3.672644340637841*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\
\\!\\(0\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643880379541*^9, 3.672644177048154*^9, 
  3.6726443406727333`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\
\\!\\(0\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643880379541*^9, 3.672644177048154*^9, 
  3.672644340732707*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\
\\!\\(0\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643880379541*^9, 3.672644177048154*^9, 
  3.672644340782866*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\
\\!\\(0\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643880379541*^9, 3.672644177048154*^9, 
  3.672644340804406*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["BDT", "Section",
 CellChangeTimes->{{3.6726372513316717`*^9, 3.672637251682989*^9}}],

Cell[CellGroupData[{

Cell["Number of Trees-Efficiency", "Subsection",
 CellChangeTimes->{
  3.672637263052373*^9, {3.672637293415938*^9, 3.672637299910918*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"BDTLinearHardTE", " ", "=", " ", 
   RowBox[{"BDTLinearHardRawData", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BDTLinearSoftTE", " ", "=", " ", 
    RowBox[{"BDTLinearSoftRawData", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDTCircleHardTE", " ", "=", " ", 
   RowBox[{"BDTCircleHardRawData", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BDTCircleSoftTE", " ", "=", " ", 
    RowBox[{"BDTCircleSoftRawData", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDTTwoCircleHardTE", " ", "=", " ", 
   RowBox[{"BDTTwoCircleHardRawData", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDTTwoCircleSoftTE", " ", "=", " ", 
   RowBox[{"BDTTwoCircleSoftRawData", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.67263731578368*^9, 3.672637324517695*^9}, {
  3.67263735985213*^9, 3.672637367522016*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\
\\!\\(0\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643880645287*^9, 3.672644177297777*^9, 
  3.672644340853794*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\
\\!\\(0\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643880645287*^9, 3.672644177297777*^9, 
  3.6726443408879967`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\
\\!\\(0\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643880645287*^9, 3.672644177297777*^9, 
  3.672644340928979*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\
\\!\\(0\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643880645287*^9, 3.672644177297777*^9, 
  3.6726443409698563`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\
\\!\\(0\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643880645287*^9, 3.672644177297777*^9, 
  3.672644341009254*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\
\\!\\(0\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643880645287*^9, 3.672644177297777*^9, 
  3.672644341051949*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Efficiency-1 - False Positive Fraction", "Subsection",
 CellChangeTimes->{3.672637271532076*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"BDTLinearHardEFP", " ", "=", " ", 
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#"}], "&"}], ",", 
     RowBox[{"BDTLinearHardRawData", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BDTLinearSoftEFP", " ", "=", " ", 
    RowBox[{"MapAt", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"1", "-", "#"}], "&"}], ",", 
      RowBox[{"BDTLinearSoftRawData", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "3"}], "}"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDTCircleHardEFP", " ", "=", " ", 
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#"}], "&"}], ",", 
     RowBox[{"BDTCircleHardRawData", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BDTCircleSoftEFP", " ", "=", " ", 
    RowBox[{"MapAt", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"1", "-", "#"}], "&"}], ",", 
      RowBox[{"BDTCircleSoftRawData", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "3"}], "}"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDTTwoCircleHardEFP", " ", "=", " ", 
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#"}], "&"}], ",", 
     RowBox[{"BDTTwoCircleHardRawData", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDTTwoCircleSoftEFP", " ", "=", " ", 
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#"}], "&"}], ",", 
     RowBox[{"BDTTwoCircleSoftRawData", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], ";"}]}], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\
\\!\\(0\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643880944063*^9, 3.67264417756555*^9, 
  3.672644341129719*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\
\\!\\(0\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643880944063*^9, 3.67264417756555*^9, 
  3.672644341173284*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\
\\!\\(0\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643880944063*^9, 3.67264417756555*^9, 
  3.672644341216052*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\
\\!\\(0\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643880944063*^9, 3.67264417756555*^9, 
  3.6726443412558413`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\
\\!\\(0\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643880944063*^9, 3.67264417756555*^9, 
  3.672644341324141*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\
\\!\\(0\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643880944063*^9, 3.67264417756555*^9, 
  3.672644341358424*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Efficiency-1 - False Negative Fraction", "Subsection",
 CellChangeTimes->{3.672637278035728*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"BDTLinearHardEFN", " ", "=", " ", 
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#"}], "&"}], ",", 
     RowBox[{"BDTLinearHardRawData", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BDTLinearSoftEFN", " ", "=", " ", 
    RowBox[{"MapAt", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"1", "-", "#"}], "&"}], ",", 
      RowBox[{"BDTLinearSoftRawData", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDTCircleHardEFN", " ", "=", " ", 
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#"}], "&"}], ",", 
     RowBox[{"BDTCircleHardRawData", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BDTCircleSoftEFN", " ", "=", " ", 
    RowBox[{"MapAt", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"1", "-", "#"}], "&"}], ",", 
      RowBox[{"BDTCircleSoftRawData", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDTTwoCircleHardEFN", " ", "=", " ", 
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#"}], "&"}], ",", 
     RowBox[{"BDTTwoCircleHardRawData", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDTTwoCircleSoftEFN", " ", "=", " ", 
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#"}], "&"}], ",", 
     RowBox[{"BDTTwoCircleSoftRawData", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], ";"}]}], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\
\\!\\(0\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643881206909*^9, 3.67264417781658*^9, 
  3.6726443414052067`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\
\\!\\(0\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643881206909*^9, 3.67264417781658*^9, 
  3.6726443414442*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\
\\!\\(0\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643881206909*^9, 3.67264417781658*^9, 
  3.6726443414843273`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\
\\!\\(0\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643881206909*^9, 3.67264417781658*^9, 
  3.672644341524671*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\
\\!\\(0\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643881206909*^9, 3.67264417781658*^9, 
  3.672644341562971*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\
\\!\\(0\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643881206909*^9, 3.67264417781658*^9, 
  3.672644341602564*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["False Positive Fraction-1 - False Negative Fraction", "Subsection",
 CellChangeTimes->{3.6726372839618883`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"BDTLinearHardFPFN", " ", "=", " ", 
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#"}], "&"}], ",", 
     RowBox[{"BDTLinearHardRawData", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BDTLinearSoftFPFN", " ", "=", " ", 
    RowBox[{"MapAt", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"1", "-", "#"}], "&"}], ",", 
      RowBox[{"BDTLinearSoftRawData", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDTCircleHardFPFN", " ", "=", " ", 
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#"}], "&"}], ",", 
     RowBox[{"BDTCircleHardRawData", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BDTCircleSoftFPFN", " ", "=", " ", 
    RowBox[{"MapAt", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"1", "-", "#"}], "&"}], ",", 
      RowBox[{"BDTCircleSoftRawData", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDTTwoCircleHardFPFN", " ", "=", " ", 
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#"}], "&"}], ",", 
     RowBox[{"BDTTwoCircleHardRawData", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDTTwoCircleSoftFPFN", " ", "=", " ", 
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#"}], "&"}], ",", 
     RowBox[{"BDTTwoCircleSoftRawData", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], ";"}]}], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\
\\!\\(0\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643881456747*^9, 3.672644178063443*^9, 
  3.6726443416496153`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\
\\!\\(0\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643881456747*^9, 3.672644178063443*^9, 
  3.6726443416901827`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\
\\!\\(0\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643881456747*^9, 3.672644178063443*^9, 
  3.6726443417303963`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\
\\!\\(0\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643881456747*^9, 3.672644178063443*^9, 
  3.672644341772695*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\
\\!\\(0\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643881456747*^9, 3.672644178063443*^9, 
  3.672644341815991*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Symbol", "::", "argx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol\\)\[NoBreak] called with \[NoBreak]\
\\!\\(0\\)\[NoBreak] arguments; 1 argument is expected. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argx\\\", ButtonNote -> \
\\\"Symbol::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643881456747*^9, 3.672644178063443*^9, 
  3.672644341868491*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Optimizing Parameters", "Chapter",
 CellChangeTimes->{
  3.670375105408408*^9, {3.670375971577524*^9, 3.670375972920573*^9}}],

Cell[CellGroupData[{

Cell["SVM", "Section",
 CellChangeTimes->{3.670375114662737*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SVMLinearHardBest", " ", "=", " ", 
   RowBox[{"Last", "[", 
    RowBox[{"SortBy", "[", 
     RowBox[{"SVMLinearHardCGE", ",", "Last"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SVMLinearSoftBest", " ", "=", " ", 
    RowBox[{"Last", "[", 
     RowBox[{"SortBy", "[", 
      RowBox[{"SVMLinearSoftCGE", ",", "Last"}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SVMCircleHardBest", " ", "=", " ", 
   RowBox[{"Last", "[", 
    RowBox[{"SortBy", "[", 
     RowBox[{"SVMCircleHardCGE", ",", "Last"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SVMCircleSoftBest", " ", "=", " ", 
    RowBox[{"Last", "[", 
     RowBox[{"SortBy", "[", 
      RowBox[{"SVMCircleSoftCGE", ",", "Last"}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SVMTwoCircleHardBest", " ", "=", 
   RowBox[{"Last", "[", 
    RowBox[{"SortBy", "[", 
     RowBox[{"SVMTwoCircleHardCGE", ",", "Last"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SVMTwoCircleSoftBest", " ", "=", 
    RowBox[{"Last", "[", 
     RowBox[{"SortBy", "[", 
      RowBox[{"SVMTwoCircleSoftCGE", ",", "Last"}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SVMBestResultTable", " ", "=", " ", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<Data Set\>\"", ",", "\"\<c\>\"", ",", "\"\<\[Gamma]\>\"", ",", 
         "\"\<Efficiency\>\""}], "}"}], ",", 
       RowBox[{"Prepend", "[", 
        RowBox[{"SVMLinearHardBest", ",", "\"\<Linear Hard\>\""}], "]"}], ",", 
       RowBox[{"Prepend", "[", 
        RowBox[{"SVMLinearSoftBest", ",", "\"\<Linear Soft\>\""}], "]"}], ",", 
       RowBox[{"Prepend", "[", 
        RowBox[{"SVMCircleHardBest", ",", "\"\<Circle Hard\>\""}], "]"}], ",", 
       RowBox[{"Prepend", "[", 
        RowBox[{"SVMCircleSoftBest", ",", "\"\<Circle Soft\>\""}], "]"}], ",", 
       RowBox[{"Prepend", "[", 
        RowBox[{"SVMTwoCircleHardBest", ",", "\"\<Two Circle Hard\>\""}], 
        "]"}], ",", 
       RowBox[{"Prepend", "[", 
        RowBox[{"SVMTwoCircleSoftBest", ",", "\"\<Two Circle Soft\>\""}], 
        "]"}]}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.647053014717396*^9, 3.6470530542483892`*^9}, {
   3.647053110791792*^9, 3.647053172827661*^9}, {3.652592349762166*^9, 
   3.6525923556968327`*^9}, {3.653663637044158*^9, 3.653663642651341*^9}, {
   3.6703280213751802`*^9, 3.67032802803755*^9}, {3.670328084626874*^9, 
   3.6703282056946373`*^9}, {3.6703751104366426`*^9, 
   3.6703751199367447`*^9}, {3.672567513630794*^9, 3.672567647819371*^9}, 
   3.672567786120658*^9, 3.672568642000821*^9, 3.672568774303935*^9, {
   3.672569667314168*^9, 3.672569667849276*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["BDS", "Section",
 CellChangeTimes->{{3.672637591640396*^9, 3.672637608101486*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"BDSLinearHardBest", " ", "=", " ", 
   RowBox[{"Last", "[", 
    RowBox[{"SortBy", "[", 
     RowBox[{"BDSLinearHardSE", ",", "Last"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BDSLinearSoftBest", " ", "=", " ", 
    RowBox[{"Last", "[", 
     RowBox[{"SortBy", "[", 
      RowBox[{"BDSLinearSoftSE", ",", "Last"}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDSCircleHardBest", " ", "=", " ", 
   RowBox[{"Last", "[", 
    RowBox[{"SortBy", "[", 
     RowBox[{"BDSCircleHardSE", ",", "Last"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BDSCircleSoftBest", " ", "=", " ", 
    RowBox[{"Last", "[", 
     RowBox[{"SortBy", "[", 
      RowBox[{"BDSCircleSoftSE", ",", "Last"}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BDSTwoCircleHardBest", " ", "=", 
    RowBox[{"Last", "[", 
     RowBox[{"SortBy", "[", 
      RowBox[{"BDSTwoCircleHardSE", ",", "Last"}], "]"}], "]"}]}], ";", 
   RowBox[{"BDSTwoCircleSoftBest", " ", "=", 
    RowBox[{"Last", "[", 
     RowBox[{"SortBy", "[", 
      RowBox[{"BDSTwoCircleSoftSE", ",", "Last"}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDSBestResultTable", " ", "=", " ", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<Data Set\>\"", ",", "\"\<Number of Stumps\>\"", ",", 
         "\"\<Efficiency\>\""}], "}"}], ",", 
       RowBox[{"Prepend", "[", 
        RowBox[{"BDSLinearHardBest", ",", "\"\<Linear Hard\>\""}], "]"}], ",", 
       RowBox[{"Prepend", "[", 
        RowBox[{"BDSLinearSoftBest", ",", "\"\<Linear Soft\>\""}], "]"}], ",", 
       RowBox[{"Prepend", "[", 
        RowBox[{"BDSCircleHardBest", ",", "\"\<Circle Hard\>\""}], "]"}], ",", 
       RowBox[{"Prepend", "[", 
        RowBox[{"BDSCircleSoftBest", ",", "\"\<Circle Soft\>\""}], "]"}], ",", 
       RowBox[{"Prepend", "[", 
        RowBox[{"BDSTwoCircleHardBest", ",", "\"\<Two Circle Hard\>\""}], 
        "]"}], ",", 
       RowBox[{"Prepend", "[", 
        RowBox[{"BDSTwoCircleSoftBest", ",", "\"\<Two Circle Soft\>\""}], 
        "]"}]}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6726376129587517`*^9, 3.6726376454838953`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Last", "::", "nolast"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] has a length of zero \
and no last element. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Last/nolast\\\", ButtonNote -> \
\\\"Last::nolast\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643881714748*^9, 3.672644178322432*^9, 
  3.672644341917406*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Last", "::", "nolast"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] has a length of zero \
and no last element. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Last/nolast\\\", ButtonNote -> \
\\\"Last::nolast\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643881714748*^9, 3.672644178322432*^9, 
  3.67264434193958*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Last", "::", "nolast"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] has a length of zero \
and no last element. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Last/nolast\\\", ButtonNote -> \
\\\"Last::nolast\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643881714748*^9, 3.672644178322432*^9, 
  3.672644341963954*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Last", "::", "nolast"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] has a length of zero \
and no last element. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Last/nolast\\\", ButtonNote -> \
\\\"Last::nolast\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643881714748*^9, 3.672644178322432*^9, 
  3.672644341986416*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Last", "::", "nolast"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] has a length of zero \
and no last element. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Last/nolast\\\", ButtonNote -> \
\\\"Last::nolast\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643881714748*^9, 3.672644178322432*^9, 
  3.672644342009362*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Last", "::", "nolast"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] has a length of zero \
and no last element. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Last/nolast\\\", ButtonNote -> \
\\\"Last::nolast\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643881714748*^9, 3.672644178322432*^9, 
  3.6726443420337477`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Last", "::", "argx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Last\\)\[NoBreak] called with \
\[NoBreak]\\!\\(2\\)\[NoBreak] arguments; 1 argument is expected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/argx\\\", \
ButtonNote -> \\\"Last::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643881714748*^9, 3.672644178322432*^9, 
  3.672644342081266*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Last", "::", "argx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Last\\)\[NoBreak] called with \
\[NoBreak]\\!\\(2\\)\[NoBreak] arguments; 1 argument is expected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/argx\\\", \
ButtonNote -> \\\"Last::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643881714748*^9, 3.672644178322432*^9, 
  3.67264434212052*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Last", "::", "argx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Last\\)\[NoBreak] called with \
\[NoBreak]\\!\\(2\\)\[NoBreak] arguments; 1 argument is expected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/argx\\\", \
ButtonNote -> \\\"Last::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643881714748*^9, 3.672644178322432*^9, 
  3.6726443421624203`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Last :: \
argx\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643881714748*^9, 3.672644178322432*^9, 
  3.672644342183002*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["BDT", "Section",
 CellChangeTimes->{3.670375139629847*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"BDTLinearHardBest", " ", "=", " ", 
   RowBox[{"Last", "[", 
    RowBox[{"SortBy", "[", 
     RowBox[{"BDTLinearHardTE", ",", "Last"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BDTLinearSoftBest", " ", "=", " ", 
    RowBox[{"Last", "[", 
     RowBox[{"SortBy", "[", 
      RowBox[{"BDTLinearSoftTE", ",", "Last"}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDTCircleHardBest", " ", "=", " ", 
   RowBox[{"Last", "[", 
    RowBox[{"SortBy", "[", 
     RowBox[{"BDTCircleHardTE", ",", "Last"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BDTCircleSoftBest", " ", "=", " ", 
    RowBox[{"Last", "[", 
     RowBox[{"SortBy", "[", 
      RowBox[{"BDTCircleSoftTE", ",", "Last"}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BDTTwoCircleHardBest", " ", "=", 
    RowBox[{"Last", "[", 
     RowBox[{"SortBy", "[", 
      RowBox[{"BDTTwoCircleHardTE", ",", "Last"}], "]"}], "]"}]}], ";", 
   RowBox[{"BDTTwoCircleSoftBest", " ", "=", 
    RowBox[{"Last", "[", 
     RowBox[{"SortBy", "[", 
      RowBox[{"BDTTwoCircleSoftTE", ",", "Last"}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDTBestResultTable", " ", "=", " ", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<Data Set\>\"", ",", "\"\<Number of Trees\>\"", ",", 
         "\"\<Efficiency\>\""}], "}"}], ",", 
       RowBox[{"Prepend", "[", 
        RowBox[{"BDTLinearHardBest", ",", "\"\<Linear Hard\>\""}], "]"}], ",", 
       RowBox[{"Prepend", "[", 
        RowBox[{"BDTLinearSoftBest", ",", "\"\<Linear Soft\>\""}], "]"}], ",", 
       RowBox[{"Prepend", "[", 
        RowBox[{"BDTCircleHardBest", ",", "\"\<Circle Hard\>\""}], "]"}], ",",
        
       RowBox[{"Prepend", "[", 
        RowBox[{"BDTCircleSoftBest", ",", "\"\<Circle Soft\>\""}], "]"}], ",", 
       RowBox[{"Prepend", "[", 
        RowBox[{"BDTTwoCircleHardBest", ",", "\"\<Two Circle Hard\>\""}], 
        "]"}], ",", 
       RowBox[{"Prepend", "[", 
        RowBox[{"BDTTwoCircleSoftBest", ",", "\"\<Two Circle Soft\>\""}], 
        "]"}]}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6703282428527203`*^9, 3.670328334148058*^9}, {
   3.670375137259727*^9, 3.670375141273391*^9}, 3.6704244931120358`*^9, {
   3.670939571075974*^9, 3.670939576194221*^9}, {3.670939610802369*^9, 
   3.670939612016448*^9}, {3.671536554962517*^9, 3.6715365570005007`*^9}, {
   3.671536617054619*^9, 3.671536620861883*^9}, {3.67153870739393*^9, 
   3.671538708199877*^9}, {3.671541874671275*^9, 3.671541881664173*^9}, {
   3.672568470693277*^9, 3.672568628818145*^9}, 3.672568777583745*^9, {
   3.672569678816934*^9, 3.672569679280266*^9}, {3.6726376524428663`*^9, 
   3.672637665098604*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Last", "::", "nolast"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] has a length of zero \
and no last element. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Last/nolast\\\", ButtonNote -> \
\\\"Last::nolast\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6726438820156593`*^9, 3.672644178633419*^9, 
  3.6726443422386208`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Last", "::", "nolast"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] has a length of zero \
and no last element. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Last/nolast\\\", ButtonNote -> \
\\\"Last::nolast\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6726438820156593`*^9, 3.672644178633419*^9, 
  3.67264434225871*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Last", "::", "nolast"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] has a length of zero \
and no last element. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Last/nolast\\\", ButtonNote -> \
\\\"Last::nolast\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6726438820156593`*^9, 3.672644178633419*^9, 
  3.6726443422795687`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Last", "::", "nolast"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] has a length of zero \
and no last element. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Last/nolast\\\", ButtonNote -> \
\\\"Last::nolast\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6726438820156593`*^9, 3.672644178633419*^9, 
  3.672644342299911*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Last", "::", "nolast"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] has a length of zero \
and no last element. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Last/nolast\\\", ButtonNote -> \
\\\"Last::nolast\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6726438820156593`*^9, 3.672644178633419*^9, 
  3.672644342320241*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Last", "::", "nolast"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] has a length of zero \
and no last element. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Last/nolast\\\", ButtonNote -> \
\\\"Last::nolast\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6726438820156593`*^9, 3.672644178633419*^9, 
  3.6726443423408318`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Last", "::", "argx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Last\\)\[NoBreak] called with \
\[NoBreak]\\!\\(2\\)\[NoBreak] arguments; 1 argument is expected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/argx\\\", \
ButtonNote -> \\\"Last::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6726438820156593`*^9, 3.672644178633419*^9, 
  3.672644342379611*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Last", "::", "argx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Last\\)\[NoBreak] called with \
\[NoBreak]\\!\\(2\\)\[NoBreak] arguments; 1 argument is expected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/argx\\\", \
ButtonNote -> \\\"Last::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6726438820156593`*^9, 3.672644178633419*^9, 
  3.672644342419622*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Last", "::", "argx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Last\\)\[NoBreak] called with \
\[NoBreak]\\!\\(2\\)\[NoBreak] arguments; 1 argument is expected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/argx\\\", \
ButtonNote -> \\\"Last::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6726438820156593`*^9, 3.672644178633419*^9, 
  3.672644342457243*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Last :: \
argx\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6726438820156593`*^9, 3.672644178633419*^9, 
  3.67264434247847*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Developing Plots", "Chapter",
 CellChangeTimes->{3.670375157437183*^9}],

Cell[CellGroupData[{

Cell["SVM", "Section",
 CellChangeTimes->{3.6703751625410223`*^9}],

Cell[CellGroupData[{

Cell["c-\[Gamma]-Efficiency", "Subsection",
 CellChangeTimes->{3.6703751758447742`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SVMLinearHardCGEPlot", "=", 
   RowBox[{"ListPlot3D", "[", 
    RowBox[{"SVMLinearHardCGE", ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"c", ",", " ", "\[Gamma]", ",", " ", "Efficiency"}], "}"}]}], 
     ",", " ", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<SVM Linear Hard c-\[Gamma]-Efficiency\>\""}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Green"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SVMLinearSoftCGEPlot", "=", 
    RowBox[{"ListPlot3D", "[", 
     RowBox[{"SVMLinearSoftCGE", ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"c", ",", " ", "\[Gamma]", ",", " ", "Efficiency"}], "}"}]}], 
      ",", " ", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<SVM Linear Soft c-\[Gamma]-Efficiency\>\""}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Green"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SVMCircleHardCGEPlot", " ", "=", " ", 
   RowBox[{"ListPlot3D", "[", 
    RowBox[{"SVMCircleHardCGE", ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"c", ",", " ", "\[Gamma]", ",", " ", "Efficiency"}], "}"}]}], 
     ",", " ", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<SVM Circle Hard c-\[Gamma]-Efficiency\>\""}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Green"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SVMCircleSoftCGEPlot", " ", "=", " ", 
    RowBox[{"ListPlot3D", "[", 
     RowBox[{"SVMCircleSoftCGE", ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"c", ",", " ", "\[Gamma]", ",", " ", "Efficiency"}], "}"}]}], 
      ",", " ", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<SVM Circle Soft c-\[Gamma]-Efficiency\>\""}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Green"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SVMTwoCircleHardCGEPlot", " ", "=", " ", 
   RowBox[{"ListPlot3D", "[", 
    RowBox[{"SVMTwoCircleHardCGE", ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"c", ",", " ", "\[Gamma]", ",", " ", "Efficiency"}], "}"}]}], 
     ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<SVM Two Circle Hard c-\[Gamma]-Efficiency\>\""}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Green"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SVMTwoCircleSoftCGEPlot", " ", "=", " ", 
   RowBox[{"ListPlot3D", "[", 
    RowBox[{"SVMTwoCircleSoftCGE", ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"c", ",", " ", "\[Gamma]", ",", " ", "Efficiency"}], "}"}]}], 
     ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<SVM Two Circle Soft c-\[Gamma]-Efficiency\>\""}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Green"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.670372035528088*^9, 3.670372259598651*^9}, {
   3.6703723347477827`*^9, 3.6703724048535357`*^9}, {3.6703724510252*^9, 
   3.670372595024249*^9}, {3.6703728764563103`*^9, 3.670372890003982*^9}, {
   3.670373682175144*^9, 3.670373798506606*^9}, {3.670373888334588*^9, 
   3.670373981242383*^9}, {3.6703751530631733`*^9, 3.670375192510788*^9}, {
   3.6709311007814007`*^9, 3.670931137835946*^9}, {3.670931201780353*^9, 
   3.6709312054448013`*^9}, {3.670931248243758*^9, 3.6709312644177227`*^9}, {
   3.670931345721957*^9, 3.670931395365631*^9}, {3.6709317051889753`*^9, 
   3.6709317119265537`*^9}, {3.670931847415495*^9, 3.670931884214117*^9}, {
   3.6709319525860147`*^9, 3.670931961923951*^9}, 3.6709320740171556`*^9, {
   3.6709321092525873`*^9, 3.6709321120662413`*^9}, {3.670932310971439*^9, 
   3.670932356483953*^9}, {3.670932419376416*^9, 3.67093242814277*^9}, 
   3.670932499553864*^9, {3.672568836730443*^9, 3.672568934840774*^9}, {
   3.6725696874722652`*^9, 3.67256969048696*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Log(c)-\[Gamma]-Efficiency", "Subsection",
 CellChangeTimes->{3.670375198470936*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SVMLinearHardLogCGEPlot", "=", 
   RowBox[{"ListPlot3D", "[", 
    RowBox[{"SVMLinearHardLogCGE", ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<log(c)\>\"", ",", " ", "\[Gamma]", ",", " ", "Efficiency"}], 
       "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<SVM Linear Hard Log c-\[Gamma]-Efficiency\>\""}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Green"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SVMLinearSoftLogCGEPlot", "=", 
    RowBox[{"ListPlot3D", "[", 
     RowBox[{"SVMLinearSoftLogCGE", ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<log(c)\>\"", ",", " ", "\[Gamma]", ",", " ", "Efficiency"}], 
        "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<SVM Linear Soft Log c-\[Gamma]-Efficiency\>\""}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Green"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SVMCircleHardLogCGEPlot", "=", 
   RowBox[{"ListPlot3D", "[", 
    RowBox[{"SVMCircleHardLogCGE", ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<log(c)\>\"", ",", " ", "\[Gamma]", ",", " ", "Efficiency"}], 
       "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<SVM Circle Hard Log c-\[Gamma]-Efficiency\>\""}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Green"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SVMCircleSoftLogCGEPlot", "=", 
    RowBox[{"ListPlot3D", "[", 
     RowBox[{"SVMCircleSoftLogCGE", ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<log(c)\>\"", ",", " ", "\[Gamma]", ",", " ", "Efficiency"}], 
        "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<SVM Circle Soft Log c-\[Gamma]-Efficiency\>\""}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Green"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SVMTwoCircleHardLogCGEPlot", " ", "=", " ", 
   RowBox[{"ListPlot3D", "[", 
    RowBox[{"SVMTwoCircleHardLogCGE", ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<log(c)\>\"", ",", " ", "\[Gamma]", ",", " ", "Efficiency"}], 
       "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<SVM Two Circle Hard Log c-\[Gamma]-Efficiency\>\""}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Green"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SVMTwoCircleSoftLogCGEPlot", " ", "=", " ", 
   RowBox[{"ListPlot3D", "[", 
    RowBox[{"SVMTwoCircleSoftLogCGE", ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<log(c)\>\"", ",", " ", "\[Gamma]", ",", " ", "Efficiency"}], 
       "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<SVM Two Circle Soft Log c-\[Gamma]-Efficiency\>\""}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Green"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.670372035528088*^9, 3.670372259598651*^9}, {
   3.6703723347477827`*^9, 3.6703724048535357`*^9}, {3.6703724510252*^9, 
   3.670372595024249*^9}, {3.6703728764563103`*^9, 3.670372890003982*^9}, {
   3.670373682175144*^9, 3.670373798506606*^9}, {3.670373888334588*^9, 
   3.670373981242383*^9}, {3.6703751530631733`*^9, 3.670375207019936*^9}, {
   3.670931397847505*^9, 3.6709314029663677`*^9}, {3.6709318889665003`*^9, 
   3.670931897301412*^9}, {3.670931945857192*^9, 3.670931950441588*^9}, {
   3.670932362500535*^9, 3.670932368531577*^9}, 3.670932413144952*^9, 
   3.670932443664811*^9, {3.6709325165764627`*^9, 3.670932522341486*^9}, {
   3.672568943963842*^9, 3.672569032368004*^9}, {3.672569693607964*^9, 
   3.6725696945345707`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Efficiency-(1- False Positive Fraction)", "Subsection",
 CellChangeTimes->{3.670375217902507*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SVMLinearHardEFPPlot", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"SVMLinearHardEFP", ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "Efficiency", ",", " ", "\"\<1 - False Positive Fraction\>\""}], 
       "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<SVM Linear Hard Efficiency-False Positive Fraction\>\""}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Darker", "[", "Green", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SVMLinearSoftEFPPlot", " ", "=", " ", 
    RowBox[{"ListPlot", "[", 
     RowBox[{"SVMLinearSoftEFP", ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "Efficiency", ",", " ", "\"\<1 - False Positive Fraction\>\""}], 
        "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<SVM Linear Soft Efficiency-False Positive Fraction\>\""}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Darker", "[", "Green", "]"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SVMCircleHardEFPPlot", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"SVMCircleHardEFP", ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "Efficiency", ",", " ", "\"\<1 - False Positive Fraction\>\""}], 
       "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<SVM Circle Hard Efficiency-False Positive Fraction\>\""}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Darker", "[", "Green", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SVMCircleSoftEFPPlot", " ", "=", " ", 
    RowBox[{"ListPlot", "[", 
     RowBox[{"SVMCircleSoftEFP", ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "Efficiency", ",", " ", "\"\<1 - False Positive Fraction\>\""}], 
        "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<SVM Circle Soft Efficiency-False Positive Fraction\>\""}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Darker", "[", "Green", "]"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SVMTwoCircleHardEFPPlot", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"SVMTwoCircleHardEFP", ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "Efficiency", ",", " ", "\"\<1 - False Positive Fraction\>\""}], 
       "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<SVM Two Circle Hard Efficiency-False Positive Fraction\>\""}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Darker", "[", "Green", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SVMTwoCircleSoftEFPPlot", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"SVMTwoCircleSoftEFP", ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "Efficiency", ",", " ", "\"\<1 - False Positive Fraction\>\""}], 
       "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<SVM Two Circle Soft Efficiency-False Positive Fraction\>\""}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Darker", "[", "Green", "]"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.670372035528088*^9, 3.670372259598651*^9}, {
   3.6703723347477827`*^9, 3.6703724048535357`*^9}, {3.6703724510252*^9, 
   3.670372595024249*^9}, {3.6703728764563103`*^9, 3.670372890003982*^9}, {
   3.670373682175144*^9, 3.670373798506606*^9}, {3.670373888334588*^9, 
   3.670373981242383*^9}, {3.6703751530631733`*^9, 3.6703752359252987`*^9}, {
   3.6709314059910793`*^9, 3.670931412197929*^9}, {3.670931518869062*^9, 
   3.6709315234168577`*^9}, {3.670931569673396*^9, 3.6709315719586563`*^9}, {
   3.670931900462069*^9, 3.670931906700851*^9}, {3.6709319379622393`*^9, 
   3.6709319430434103`*^9}, 3.670932132222165*^9, 3.6709321769554377`*^9, {
   3.670932371068376*^9, 3.670932408777697*^9}, 3.670932458340797*^9, {
   3.67256905458657*^9, 3.67256916282623*^9}, {3.6725696966955957`*^9, 
   3.672569697760132*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Efficiency-(1-False Negative Fraction)", "Subsection",
 CellChangeTimes->{3.670375241632313*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SVMLinearHardEFNPlot", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"SVMLinearHardEFN", ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "Efficiency", ",", " ", "\"\<1 - False Negative Fraction\>\""}], 
       "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<SVM Linear Hard Efficiency-1 - False Negative Fraction\>\""}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Darker", "[", "Green", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SVMLinearSoftEFNPlot", " ", "=", " ", 
    RowBox[{"ListPlot", "[", 
     RowBox[{"SVMLinearSoftEFN", ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "Efficiency", ",", " ", "\"\<1 - False Negative Fraction\>\""}], 
        "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<SVM Linear Soft Efficiency-1 - False Negative Fraction\>\""}], 
      ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Darker", "[", "Green", "]"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SVMCircleHardEFNPlot", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"SVMCircleHardEFN", ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "Efficiency", ",", " ", "\"\<1 - False Negative Fraction\>\""}], 
       "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<SVM Circle Hard Efficiency-1 - False Negative Fraction\>\""}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Darker", "[", "Green", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SVMCircleSoftEFNPlot", " ", "=", " ", 
    RowBox[{"ListPlot", "[", 
     RowBox[{"SVMCircleSoftEFN", ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "Efficiency", ",", " ", "\"\<1 - False Negative Fraction\>\""}], 
        "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<SVM Circle Soft Efficiency-1 - False Negative Fraction\>\""}], 
      ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Darker", "[", "Green", "]"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SVMTwoCircleHardEFNPlot", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"SVMTwoCircleHardEFN", ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "Efficiency", ",", " ", "\"\<1 - False Negative Fraction\>\""}], 
       "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<SVM Two Circle Hard Efficiency-1 - False Negative Fraction\>\""}], 
     ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Darker", "[", "Green", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SVMTwoCircleSoftEFNPlot", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"SVMTwoCircleSoftEFN", ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "Efficiency", ",", " ", "\"\<1 - False Negative Fraction\>\""}], 
       "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<SVM Two Circle Soft Efficiency-1 - False Negative Fraction\>\""}], 
     ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Darker", "[", "Green", "]"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.670372035528088*^9, 3.670372259598651*^9}, {
   3.6703723347477827`*^9, 3.6703724048535357`*^9}, {3.6703724510252*^9, 
   3.670372595024249*^9}, {3.6703728764563103`*^9, 3.670372890003982*^9}, {
   3.670373682175144*^9, 3.670373798506606*^9}, {3.670373888334588*^9, 
   3.670373981242383*^9}, {3.6703751530631733`*^9, 3.670375272844849*^9}, {
   3.6709314161426563`*^9, 3.670931421069694*^9}, {3.670931910389736*^9, 
   3.670931935418255*^9}, {3.670932460554858*^9, 3.670932464337748*^9}, 
   3.6709325452567663`*^9, {3.6725691754979963`*^9, 3.672569250117876*^9}, {
   3.6725696997277737`*^9, 3.672569701070447*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["False Positive Fraction-(1-False Negative Fraction)", "Subsection",
 CellChangeTimes->{3.670375276990431*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SVMLinearHardFPFNPlot", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"SVMLinearHardFPFN", ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<False Positive Fraction\>\"", ",", " ", 
        "\"\<1 - False Negative Fraction\>\""}], "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<SVM Linear Hard False Positive Fraction-1 - False Negative \
Fraction\>\""}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Darker", "[", "Green", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SVMLinearSoftFPFNPlot", " ", "=", " ", 
    RowBox[{"ListPlot", "[", 
     RowBox[{"SVMLinearSoftFPFN", ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<False Positive Fraction\>\"", ",", " ", 
         "\"\<1 - False Negative Fraction\>\""}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<SVM Linear Soft False Positive Fraction-1 - False Negative \
Fraction\>\""}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Darker", "[", "Green", "]"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SVMCircleHardFPFNPlot", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"SVMCircleHardFPFN", ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<False Positive Fraction\>\"", ",", " ", 
        "\"\<1 - False Negative Fraction\>\""}], "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<SVM Circle Hard False Positive Fraction-1 - False Negative \
Fraction\>\""}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Darker", "[", "Green", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SVMCircleSoftFPFNPlot", " ", "=", " ", 
    RowBox[{"ListPlot", "[", 
     RowBox[{"SVMCircleSoftFPFN", ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<False Positive Fraction\>\"", ",", " ", 
         "\"\<1 - False Negative Fraction\>\""}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<SVM Circle Soft False Positive Fraction-1 - False Negative \
Fraction\>\""}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Darker", "[", "Green", "]"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SVMTwoCircleHardFPFNPlot", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"SVMTwoCircleHardFPFN", ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<False Positive Fraction\>\"", ",", " ", 
        "\"\<1 - False Negative Fraction\>\""}], "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<SVM Two Circle Hard False Positive Fraction-1 - False Negative \
Fraction\>\""}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Darker", "[", "Green", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SVMTwoCircleSoftFPFNPlot", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"SVMTwoCircleSoftFPFN", ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<False Positive Fraction\>\"", ",", " ", 
        "\"\<1 - False Negative Fraction\>\""}], "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<SVM Two Circle SoftFalse Positive Fraction-1 - False Negative \
Fraction\>\""}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Darker", "[", "Green", "]"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.670372035528088*^9, 3.670372259598651*^9}, {
   3.6703723347477827`*^9, 3.6703724048535357`*^9}, {3.6703724510252*^9, 
   3.670372595024249*^9}, {3.6703728764563103`*^9, 3.670372890003982*^9}, {
   3.670373682175144*^9, 3.670373798506606*^9}, {3.670373888334588*^9, 
   3.670373981242383*^9}, {3.6703751530631733`*^9, 3.670375278448658*^9}, {
   3.6709314239105253`*^9, 3.670931438348963*^9}, {3.670931920333219*^9, 
   3.670931924213481*^9}, 3.670931994463172*^9, {3.670932032124826*^9, 
   3.670932034909821*^9}, {3.670932466834668*^9, 3.670932478489345*^9}, {
   3.672569315354739*^9, 3.672569394313216*^9}, {3.6725697036870003`*^9, 
   3.6725697050460243`*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["BDS", "Section",
 CellChangeTimes->{{3.6726377416354713`*^9, 3.672637744442068*^9}}],

Cell[CellGroupData[{

Cell["Stumps-Efficiency", "Subsection",
 CellChangeTimes->{{3.6726377495308104`*^9, 3.672637753116424*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"BDSLinearHardSEPlot", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"BDSLinearHardSE", ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Stumps", ",", " ", "Efficiency"}], "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", "\"\<BDS Linear Hard Stumps-Efficiency\>\""}], 
     ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BDSLinearSoftSEPlot", " ", "=", " ", 
    RowBox[{"ListPlot", "[", 
     RowBox[{"BDSLinearSoftSE", ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Stumps", ",", " ", "Efficiency"}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", "\"\<BDS Linear Soft Stumps-Efficiency\>\""}], 
      ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDSCircleHardSEPlot", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"BDSCircleHardSE", ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Stumps", ",", " ", "Efficiency"}], "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", "\"\<BDS Circle Hard Stumps-Efficiency\>\""}], 
     ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BDSCircleSoftSEPlot", " ", "=", " ", 
    RowBox[{"ListPlot", "[", 
     RowBox[{"BDSCircleSoftSE", ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Stumps", ",", " ", "Efficiency"}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", "\"\<BDS Circle Soft Stumps-Efficiency\>\""}], 
      ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDSTwoCircleHardSEPlot", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"BDSTwoCircleHardSE", ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Stumps", ",", " ", "Efficiency"}], "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<BDS Two Circle Hard Stumps-Efficiency\>\""}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDSTwoCircleSoftSEPlot", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"BDSTwoCircleSoftSE", ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Stumps", ",", " ", "Efficiency"}], "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<BDS Two Circle Soft Stumps-Efficiency\>\""}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6726378118703938`*^9, 3.672637831940175*^9}, {
  3.672637865202674*^9, 3.6726378678328543`*^9}, {3.672644318068019*^9, 
  3.6726443250004253`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] is not a list of \
numbers or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643882972088*^9, 3.672644179562397*^9, 
  3.672644343191524*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] is not a list of \
numbers or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643882972088*^9, 3.672644179562397*^9, 
  3.672644343273694*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] is not a list of \
numbers or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643882972088*^9, 3.672644179562397*^9, 
  3.672644343366518*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ListPlot \
:: lpn\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643882972088*^9, 3.672644179562397*^9, 
  3.672644343389039*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] is not a list of \
numbers or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643882972088*^9, 3.672644179562397*^9, 
  3.672644343492283*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] is not a list of \
numbers or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643882972088*^9, 3.672644179562397*^9, 
  3.6726443435773277`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] is not a list of \
numbers or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643882972088*^9, 3.672644179562397*^9, 
  3.672644343665154*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ListPlot \
:: lpn\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643882972088*^9, 3.672644179562397*^9, 
  3.6726443436876383`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] is not a list of \
numbers or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643882972088*^9, 3.672644179562397*^9, 
  3.672644343784787*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] is not a list of \
numbers or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643882972088*^9, 3.672644179562397*^9, 
  3.672644343871893*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] is not a list of \
numbers or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643882972088*^9, 3.672644179562397*^9, 
  3.67264434395263*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ListPlot \
:: lpn\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643882972088*^9, 3.672644179562397*^9, 
  3.672644343973093*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] is not a list of \
numbers or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643882972088*^9, 3.672644179562397*^9, 
  3.6726443440678387`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] is not a list of \
numbers or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643882972088*^9, 3.672644179562397*^9, 
  3.6726443441527653`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] is not a list of \
numbers or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643882972088*^9, 3.672644179562397*^9, 
  3.672644344240774*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ListPlot \
:: lpn\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643882972088*^9, 3.672644179562397*^9, 
  3.672644344261859*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] is not a list of \
numbers or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643882972088*^9, 3.672644179562397*^9, 
  3.672644344357073*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] is not a list of \
numbers or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643882972088*^9, 3.672644179562397*^9, 
  3.672644344446596*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] is not a list of \
numbers or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643882972088*^9, 3.672644179562397*^9, 
  3.672644344530909*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ListPlot \
:: lpn\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643882972088*^9, 3.672644179562397*^9, 
  3.672644344551989*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] is not a list of \
numbers or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643882972088*^9, 3.672644179562397*^9, 
  3.672644344647841*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] is not a list of \
numbers or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643882972088*^9, 3.672644179562397*^9, 
  3.67264434473108*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] is not a list of \
numbers or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643882972088*^9, 3.672644179562397*^9, 
  3.6726443448175573`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ListPlot \
:: lpn\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643882972088*^9, 3.672644179562397*^9, 
  3.6726443448381767`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Efficiency-1 - False Positive Fraction", "Subsection",
 CellChangeTimes->{3.67263775910011*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"BDSLinearHardEFPPlot", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"BDSLinearHardEFP", ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "Efficiency", ",", " ", "\"\<1 - False Positive Fraction\>\""}], 
       "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<BDS Linear Hard Efficiency-1 - False Positive Fraction\>\""}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BDSLinearSoftEFPPlot", " ", "=", " ", 
    RowBox[{"ListPlot", "[", 
     RowBox[{"BDSLinearSoftEFP", ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "Efficiency", ",", " ", "\"\<1 - False Positive Fraction\>\""}], 
        "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<BDS Linear Soft Efficiency-1 - False Positive Fraction\>\""}], 
      ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDSCircleHardEFPPlot", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"BDSCircleHardEFP", ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "Efficiency", ",", " ", "\"\<1 - False Positive Fraction\>\""}], 
       "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<BDS Circle Hard Efficiency-1 - False Positive Fraction\>\""}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BDSCircleSoftEFPPlot", " ", "=", " ", 
    RowBox[{"ListPlot", "[", 
     RowBox[{"BDSCircleSoftEFP", ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "Efficiency", ",", " ", "\"\<1 - False Positive Fraction\>\""}], 
        "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<BDS Circle Soft Efficiency-1 - False Positive Fraction\>\""}], 
      ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDSTwoCircleHardEFPPlot", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"BDSTwoCircleHardEFP", ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "Efficiency", ",", " ", "\"\<1 - False Positive Fraction\>\""}], 
       "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<BDS Two Circle Hard Efficiency-1 - False Positive Fraction\>\""}], 
     ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDSTwoCircleSoftEFPPlot", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"BDSTwoCircleSoftEFP", ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "Efficiency", ",", " ", "\"\<1 - False Positive Fraction\>\""}], 
       "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<BDS Two Circle Soft Efficiency-1 - False Positive Fraction\>\""}], 
     ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.672637876817017*^9, 3.6726378946706543`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643883613632*^9, 3.6726441802224503`*^9, 
  3.6726443449690523`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643883613632*^9, 3.6726441802224503`*^9, 
  3.672644345042856*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643883613632*^9, 3.6726441802224503`*^9, 
  3.672644345128764*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ListPlot \
:: lpn\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643883613632*^9, 3.6726441802224503`*^9, 
  3.672644345149395*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643883613632*^9, 3.6726441802224503`*^9, 
  3.6726443452433577`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643883613632*^9, 3.6726441802224503`*^9, 
  3.672644345330048*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643883613632*^9, 3.6726441802224503`*^9, 
  3.6726443454144917`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ListPlot \
:: lpn\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643883613632*^9, 3.6726441802224503`*^9, 
  3.6726443454350767`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643883613632*^9, 3.6726441802224503`*^9, 
  3.6726443455285997`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643883613632*^9, 3.6726441802224503`*^9, 
  3.672644345617523*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643883613632*^9, 3.6726441802224503`*^9, 
  3.672644345710246*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ListPlot \
:: lpn\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643883613632*^9, 3.6726441802224503`*^9, 
  3.672644345730774*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643883613632*^9, 3.6726441802224503`*^9, 
  3.672644345827573*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643883613632*^9, 3.6726441802224503`*^9, 
  3.672644345912117*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643883613632*^9, 3.6726441802224503`*^9, 
  3.672644346003908*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ListPlot \
:: lpn\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643883613632*^9, 3.6726441802224503`*^9, 
  3.672644346027294*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643883613632*^9, 3.6726441802224503`*^9, 
  3.67264434612755*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643883613632*^9, 3.6726441802224503`*^9, 
  3.67264434621795*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643883613632*^9, 3.6726441802224503`*^9, 
  3.672644346305689*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ListPlot \
:: lpn\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643883613632*^9, 3.6726441802224503`*^9, 
  3.672644346326603*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643883613632*^9, 3.6726441802224503`*^9, 
  3.6726443464273148`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643883613632*^9, 3.6726441802224503`*^9, 
  3.67264434651553*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643883613632*^9, 3.6726441802224503`*^9, 
  3.672644346600649*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ListPlot \
:: lpn\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643883613632*^9, 3.6726441802224503`*^9, 
  3.672644346622208*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Efficiency-1 - False Negative Fraction", "Subsection",
 CellChangeTimes->{3.6726377652276897`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"BDSLinearHardEFNPlot", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"BDSLinearHardEFN", ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "Efficiency", ",", " ", "\"\<1 - False Negative Fraction\>\""}], 
       "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<BDS Linear Hard Efficiency-1 - False Negative Fraction\>\""}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BDSLinearSoftEFNPlot", " ", "=", " ", 
    RowBox[{"ListPlot", "[", 
     RowBox[{"BDSLinearSoftEFN", ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "Efficiency", ",", " ", "\"\<1 - False Negative Fraction\>\""}], 
        "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<BDS Linear Soft fficiency-1 - False Negative Fraction\>\""}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDSCircleHardEFNPlot", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"BDSCircleHardEFN", ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "Efficiency", ",", " ", "\"\<1 - False Negative Fraction\>\""}], 
       "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<BDS Circle Hard Efficiency-1 - False Negative Fraction\>\""}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BDSCircleSoftEFNPlot", " ", "=", " ", 
    RowBox[{"ListPlot", "[", 
     RowBox[{"BDSCircleSoftEFN", ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "Efficiency", ",", " ", "\"\<1 - False Negative Fraction\>\""}], 
        "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<BDS Circle Soft Efficiency-1 - False Negative Fraction\>\""}], 
      ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDSTwoCircleHardEFNPlot", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"BDSTwoCircleHardEFN", ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "Efficiency", ",", " ", "\"\<1 - False Negative Fraction\>\""}], 
       "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<BDS Two Circle Hard Efficiency-1 - False Negative Fraction\>\""}], 
     ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDSTwoCircleSoftEFNPlot", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"BDSTwoCircleSoftEFN", ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "Efficiency", ",", " ", "\"\<1 - False Negative Fraction\>\""}], 
       "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<BDS Two Circle Soft Efficiency-1 - False Negative Fraction\>\""}], 
     ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6726379189815187`*^9, 3.6726379379229393`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6726438854165287`*^9, 3.672644181923513*^9, 
  3.672644346758906*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6726438854165287`*^9, 3.672644181923513*^9, 
  3.67264434684021*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6726438854165287`*^9, 3.672644181923513*^9, 
  3.672644346930623*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ListPlot \
:: lpn\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6726438854165287`*^9, 3.672644181923513*^9, 
  3.672644346953824*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6726438854165287`*^9, 3.672644181923513*^9, 
  3.672644347058401*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6726438854165287`*^9, 3.672644181923513*^9, 
  3.672644347152926*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6726438854165287`*^9, 3.672644181923513*^9, 
  3.67264434724783*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ListPlot \
:: lpn\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6726438854165287`*^9, 3.672644181923513*^9, 
  3.672644347268518*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6726438854165287`*^9, 3.672644181923513*^9, 
  3.672644347367281*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6726438854165287`*^9, 3.672644181923513*^9, 
  3.672644347455551*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6726438854165287`*^9, 3.672644181923513*^9, 
  3.672644347543738*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ListPlot \
:: lpn\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6726438854165287`*^9, 3.672644181923513*^9, 
  3.672644347564596*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6726438854165287`*^9, 3.672644181923513*^9, 
  3.672644347662446*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6726438854165287`*^9, 3.672644181923513*^9, 
  3.6726443477522717`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6726438854165287`*^9, 3.672644181923513*^9, 
  3.672644347842944*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ListPlot \
:: lpn\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6726438854165287`*^9, 3.672644181923513*^9, 
  3.67264434786384*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6726438854165287`*^9, 3.672644181923513*^9, 
  3.672644347965207*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6726438854165287`*^9, 3.672644181923513*^9, 
  3.672644348050355*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6726438854165287`*^9, 3.672644181923513*^9, 
  3.672644348136388*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ListPlot \
:: lpn\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6726438854165287`*^9, 3.672644181923513*^9, 
  3.672644348159384*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6726438854165287`*^9, 3.672644181923513*^9, 
  3.672644348253499*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6726438854165287`*^9, 3.672644181923513*^9, 
  3.672644348341992*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6726438854165287`*^9, 3.672644181923513*^9, 
  3.672644348428464*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ListPlot \
:: lpn\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6726438854165287`*^9, 3.672644181923513*^9, 
  3.672644348448935*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["False Positive Fraction-(1-False Negative Fraction)", "Subsection",
 CellChangeTimes->{3.6726377732587843`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"BDSLinearHardFPFNPlot", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"BDSLinearHardFPFN", ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<False Positive Fraction\>\"", ",", " ", 
        "\"\<1 - False Negative Fraction\>\""}], "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<BDS Linear Hard False Positive Fraction-1 - False Negative \
Fraction\>\""}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BDSLinearSoftFPFNPlot", " ", "=", " ", 
    RowBox[{"ListPlot", "[", 
     RowBox[{"BDSLinearSoftFPFN", ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<False Positive Fraction\>\"", ",", " ", 
         "\"\<1 - False Negative Fraction\>\""}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<BDS Linear Soft False Positive Fraction-1 - False Negative \
Fraction\>\""}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDSCircleHardFPFNPlot", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"BDSCircleHardFPFN", ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<False Positive Fraction\>\"", ",", " ", 
        "\"\<1 - False Negative Fraction\>\""}], "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<BDS Circle Hard False Positive Fraction-1 - False Negative \
Fraction\>\""}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BDSCircleSoftFPFNPlot", " ", "=", " ", 
    RowBox[{"ListPlot", "[", 
     RowBox[{"BDSCircleSoftFPFN", ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<False Positive Fraction\>\"", ",", " ", 
         "\"\<1 - False Negative Fraction\>\""}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<BDS Circle Soft False Positive Fraction-1 - False Negative \
Fraction\>\""}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDSTwoCircleHardFPFNPlot", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"BDSTwoCircleHardFPFN", ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<False Positive Fraction\>\"", ",", " ", 
        "\"\<1 - False Negative Fraction\>\""}], "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<BDS Two Circle Hard False Positive Fraction-1 - False Negative \
Fraction\>\""}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDSTwoCircleSoftFPFNPlot", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"BDSTwoCircleSoftFPFN", ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<False Positive Fraction\>\"", ",", " ", 
        "\"\<1 - False Negative Fraction\>\""}], "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<BDS Two Circle Soft False Positive Fraction-1 - False Negative \
Fraction\>\""}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.672637942605213*^9, 3.672637972935998*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643887202224*^9, 3.6726441836196537`*^9, 
  3.6726443485807943`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643887202224*^9, 3.6726441836196537`*^9, 
  3.672644348654731*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643887202224*^9, 3.6726441836196537`*^9, 
  3.672644348741671*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ListPlot \
:: lpn\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643887202224*^9, 3.6726441836196537`*^9, 
  3.6726443487618933`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643887202224*^9, 3.6726441836196537`*^9, 
  3.672644348857298*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643887202224*^9, 3.6726441836196537`*^9, 
  3.672644348945757*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643887202224*^9, 3.6726441836196537`*^9, 
  3.6726443490358067`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ListPlot \
:: lpn\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643887202224*^9, 3.6726441836196537`*^9, 
  3.672644349056342*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643887202224*^9, 3.6726441836196537`*^9, 
  3.6726443491520243`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643887202224*^9, 3.6726441836196537`*^9, 
  3.67264434924305*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643887202224*^9, 3.6726441836196537`*^9, 
  3.672644349332073*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ListPlot \
:: lpn\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643887202224*^9, 3.6726441836196537`*^9, 
  3.672644349352228*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643887202224*^9, 3.6726441836196537`*^9, 
  3.672644349451869*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643887202224*^9, 3.6726441836196537`*^9, 
  3.672644349541354*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643887202224*^9, 3.6726441836196537`*^9, 
  3.672644349629468*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ListPlot \
:: lpn\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643887202224*^9, 3.6726441836196537`*^9, 
  3.672644349649815*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643887202224*^9, 3.6726441836196537`*^9, 
  3.672644349743453*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643887202224*^9, 3.6726441836196537`*^9, 
  3.672644349832272*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643887202224*^9, 3.6726441836196537`*^9, 
  3.672644349917149*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ListPlot \
:: lpn\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643887202224*^9, 3.6726441836196537`*^9, 
  3.67264434994013*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643887202224*^9, 3.6726441836196537`*^9, 
  3.6726443500423737`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643887202224*^9, 3.6726441836196537`*^9, 
  3.672644350128284*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643887202224*^9, 3.6726441836196537`*^9, 
  3.6726443502108383`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ListPlot \
:: lpn\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643887202224*^9, 3.6726441836196537`*^9, 
  3.672644350231152*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["BDT", "Section",
 CellChangeTimes->{{3.6703754199221163`*^9, 3.670375420488456*^9}}],

Cell[CellGroupData[{

Cell["Trees-Efficiency", "Subsection",
 CellChangeTimes->{
  3.6703754506007223`*^9, {3.6709396678699713`*^9, 3.670939668972899*^9}, {
   3.6715366972341423`*^9, 3.6715366973392076`*^9}, {3.6715387612774*^9, 
   3.6715387620603037`*^9}, 3.671541890996996*^9, {3.672637985798046*^9, 
   3.6726379866460953`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"BDTLinearHardTEPlot", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"BDTLinearHardTE", ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Stumps", ",", " ", "Efficiency"}], "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", "\"\<BDT Linear Hard Trees-Efficiency\>\""}], 
     ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BDTLinearSoftTEPlot", " ", "=", " ", 
    RowBox[{"ListPlot", "[", 
     RowBox[{"BDTLinearSoftTE", ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Stumps", ",", " ", "Efficiency"}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", "\"\<BDT Linear Soft Tres-Efficiency\>\""}], 
      ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDTCircleHardTEPlot", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"BDTCircleHardTE", ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Stumps", ",", " ", "Efficiency"}], "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", "\"\<BDT Circle Hard Trees-Efficiency\>\""}], 
     ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BDTCircleSoftTEPlot", " ", "=", " ", 
    RowBox[{"ListPlot", "[", 
     RowBox[{"BDTCircleSoftTE", ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Stumps", ",", " ", "Efficiency"}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", "\"\<BDT Circle Soft Trees-Efficiency\>\""}], 
      ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDTTwoCircleHardTEPlot", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"BDTTwoCircleHardTE", ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Stumps", ",", " ", "Efficiency"}], "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", "\"\<BDT Two Circle Hard Trees-Efficiency\>\""}],
      ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDTTwoCircleSoftTEPlot", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"BDTTwoCircleSoftTE", ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Stumps", ",", " ", "Efficiency"}], "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", "\"\<BDT Two Circle Soft Trees-Efficiency\>\""}],
      ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.670375470567774*^9, 3.6703756005979643`*^9}, {
   3.6709327491459427`*^9, 3.6709327888425493`*^9}, {3.67093312246716*^9, 
   3.670933125481658*^9}, 3.670933160565845*^9, 3.670933222981483*^9, {
   3.67093962298463*^9, 3.6709396606542053`*^9}, {3.671536578224555*^9, 
   3.671536586264121*^9}, {3.671536641749785*^9, 3.6715366646127653`*^9}, {
   3.671538715175687*^9, 3.671538757685398*^9}, {3.671541893318812*^9, 
   3.671541934868166*^9}, {3.672569489092999*^9, 3.672569562794042*^9}, {
   3.672569712773798*^9, 3.672569714052866*^9}, {3.672637991342985*^9, 
   3.6726380204125433`*^9}, {3.6726382441251717`*^9, 3.672638251997827*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] is not a list of \
numbers or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643888895379*^9, 3.672644185354558*^9, 
  3.6726443503609343`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] is not a list of \
numbers or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643888895379*^9, 3.672644185354558*^9, 
  3.672644350434332*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] is not a list of \
numbers or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643888895379*^9, 3.672644185354558*^9, 
  3.6726443505185537`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ListPlot \
:: lpn\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643888895379*^9, 3.672644185354558*^9, 
  3.672644350540517*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] is not a list of \
numbers or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643888895379*^9, 3.672644185354558*^9, 
  3.672644350636517*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] is not a list of \
numbers or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643888895379*^9, 3.672644185354558*^9, 
  3.672644350721133*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] is not a list of \
numbers or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643888895379*^9, 3.672644185354558*^9, 
  3.6726443508056498`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ListPlot \
:: lpn\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643888895379*^9, 3.672644185354558*^9, 
  3.672644350826079*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] is not a list of \
numbers or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643888895379*^9, 3.672644185354558*^9, 
  3.672644350922676*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] is not a list of \
numbers or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643888895379*^9, 3.672644185354558*^9, 
  3.67264435100607*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] is not a list of \
numbers or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643888895379*^9, 3.672644185354558*^9, 
  3.672644351088393*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ListPlot \
:: lpn\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643888895379*^9, 3.672644185354558*^9, 
  3.672644351108367*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] is not a list of \
numbers or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643888895379*^9, 3.672644185354558*^9, 
  3.672644351205057*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] is not a list of \
numbers or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643888895379*^9, 3.672644185354558*^9, 
  3.6726443512921753`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] is not a list of \
numbers or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643888895379*^9, 3.672644185354558*^9, 
  3.672644351383604*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ListPlot \
:: lpn\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643888895379*^9, 3.672644185354558*^9, 
  3.672644351409717*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] is not a list of \
numbers or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643888895379*^9, 3.672644185354558*^9, 
  3.672644351510247*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] is not a list of \
numbers or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643888895379*^9, 3.672644185354558*^9, 
  3.672644351600091*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] is not a list of \
numbers or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643888895379*^9, 3.672644185354558*^9, 
  3.672644351693115*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ListPlot \
:: lpn\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643888895379*^9, 3.672644185354558*^9, 
  3.672644351714773*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] is not a list of \
numbers or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643888895379*^9, 3.672644185354558*^9, 
  3.672644351815179*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] is not a list of \
numbers or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643888895379*^9, 3.672644185354558*^9, 
  3.672644351904867*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(Symbol[]\\)\[NoBreak] is not a list of \
numbers or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643888895379*^9, 3.672644185354558*^9, 
  3.6726443519923267`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ListPlot \
:: lpn\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643888895379*^9, 3.672644185354558*^9, 
  3.672644352013761*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Efficiency-1 - False Positive Fraction", "Subsection",
 CellChangeTimes->{3.670424967157833*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"BDTLinearHardEFPPlot", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"BDTLinearHardEFP", ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "Efficiency", ",", " ", "\"\<1 - False Positive Fraction\>\""}], 
       "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<BDT Linear Hard Efficiency-1 - False Positive Fraction\>\""}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BDTLinearSoftEFPPlot", " ", "=", " ", 
    RowBox[{"ListPlot", "[", 
     RowBox[{"BDTLinearSoftEFP", ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "Efficiency", ",", " ", "\"\<1 - False Positive Fraction\>\""}], 
        "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<BDT Linear Soft Efficiency-1 - False Positive Fraction\>\""}], 
      ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDTCircleHardEFPPlot", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"BDTCircleHardEFP", ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "Efficiency", ",", " ", "\"\<1 - False Positive Fraction\>\""}], 
       "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<BDT Circle Hard Efficiency-1 - False Positive Fraction\>\""}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BDTCircleSoftEFPPlot", " ", "=", " ", 
    RowBox[{"ListPlot", "[", 
     RowBox[{"BDTCircleSoftEFP", ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "Efficiency", ",", " ", "\"\<1 - False Positive Fraction\>\""}], 
        "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<BDT Circle Soft Efficiency-1 - False Positive Fraction\>\""}], 
      ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDTTwoCircleHardEFPPlot", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"BDTTwoCircleHardEFP", ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "Efficiency", ",", " ", "\"\<1 - False Positive Fraction\>\""}], 
       "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<BDT Two Circle Hard Efficiency-1 - False Positive Fraction\>\""}], 
     ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDTTwoCircleSoftEFPPlot", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"BDTTwoCircleSoftEFP", ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "Efficiency", ",", " ", "\"\<1 - False Positive Fraction\>\""}], 
       "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<BDT Two Circle Soft Efficiency-1 - False Positive Fraction\>\""}], 
     ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.670424986405561*^9, 3.670425045498266*^9}, {
  3.670425087669094*^9, 3.67042509981954*^9}, {3.670933173015237*^9, 
  3.670933178517828*^9}, {3.6725695698152447`*^9, 3.6725695900645533`*^9}, {
  3.672569899785791*^9, 3.672569943972642*^9}, {3.672570089689926*^9, 
  3.672570092486792*^9}, {3.6726382540632477`*^9, 3.672638261340289*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643890528352*^9, 3.67264418705836*^9, 
  3.672644352153426*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643890528352*^9, 3.67264418705836*^9, 
  3.6726443522331257`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643890528352*^9, 3.67264418705836*^9, 
  3.6726443523267317`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ListPlot \
:: lpn\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643890528352*^9, 3.67264418705836*^9, 
  3.672644352347474*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643890528352*^9, 3.67264418705836*^9, 
  3.672644352448101*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643890528352*^9, 3.67264418705836*^9, 
  3.672644352539502*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643890528352*^9, 3.67264418705836*^9, 
  3.672644352633692*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ListPlot \
:: lpn\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643890528352*^9, 3.67264418705836*^9, 
  3.672644352655506*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643890528352*^9, 3.67264418705836*^9, 
  3.672644352755968*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643890528352*^9, 3.67264418705836*^9, 
  3.6726443528446703`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643890528352*^9, 3.67264418705836*^9, 
  3.672644352935175*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ListPlot \
:: lpn\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643890528352*^9, 3.67264418705836*^9, 
  3.6726443529557447`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643890528352*^9, 3.67264418705836*^9, 
  3.672644353058236*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643890528352*^9, 3.67264418705836*^9, 
  3.672644353147893*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643890528352*^9, 3.67264418705836*^9, 
  3.672644353242261*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ListPlot \
:: lpn\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643890528352*^9, 3.67264418705836*^9, 
  3.672644353265164*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643890528352*^9, 3.67264418705836*^9, 
  3.672644353372323*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643890528352*^9, 3.67264418705836*^9, 
  3.6726443534633703`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643890528352*^9, 3.67264418705836*^9, 
  3.67264435355135*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ListPlot \
:: lpn\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643890528352*^9, 3.67264418705836*^9, 
  3.672644353573883*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643890528352*^9, 3.67264418705836*^9, 
  3.6726443536724253`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643890528352*^9, 3.67264418705836*^9, 
  3.672644353766878*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643890528352*^9, 3.67264418705836*^9, 
  3.6726443538567266`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ListPlot \
:: lpn\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643890528352*^9, 3.67264418705836*^9, 
  3.672644353877905*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Efficiency-1 - False Negative Fraction", "Subsection",
 CellChangeTimes->{{3.6703756076770563`*^9, 3.670375615348608*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"BDTLinearHardEFNPlot", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"BDTLinearHardEFN", ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "Efficiency", ",", " ", "\"\<1 - False Negative Fraction\>\""}], 
       "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<BDT Linear Hard Efficiency-1 - False Negative Fraction\>\""}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BDTLinearSoftEFNPlot", " ", "=", " ", 
    RowBox[{"ListPlot", "[", 
     RowBox[{"BDTLinearSoftEFN", ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "Efficiency", ",", " ", "\"\<1 - False Negative Fraction\>\""}], 
        "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<BDT Linear Soft fficiency-1 - False Negative Fraction\>\""}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDTCircleHardEFNPlot", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"BDTCircleHardEFN", ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "Efficiency", ",", " ", "\"\<1 - False Negative Fraction\>\""}], 
       "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<BDT Circle Hard Efficiency-1 - False Negative Fraction\>\""}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BDTCircleSoftEFNPlot", " ", "=", " ", 
    RowBox[{"ListPlot", "[", 
     RowBox[{"BDTCircleSoftEFN", ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "Efficiency", ",", " ", "\"\<1 - False Negative Fraction\>\""}], 
        "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<BDT Circle Soft Efficiency-1 - False Negative Fraction\>\""}], 
      ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDTTwoCircleHardEFNPlot", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"BDTTwoCircleHardEFN", ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "Efficiency", ",", " ", "\"\<1 - False Negative Fraction\>\""}], 
       "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<BDT Two Circle Hard Efficiency-1 - False Negative Fraction\>\""}], 
     ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDTTwoCircleSoftEFNPlot", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"BDTTwoCircleSoftEFN", ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "Efficiency", ",", " ", "\"\<1 - False Negative Fraction\>\""}], 
       "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<BDT Two Circle Soft Efficiency-1 - False Negative Fraction\>\""}], 
     ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.670375627069994*^9, 3.6703757054969378`*^9}, {
  3.6709331804704037`*^9, 3.670933186493651*^9}, {3.6725699572392817`*^9, 
  3.672570016181991*^9}, {3.672570094648932*^9, 3.672570095991315*^9}, {
  3.6726382637583303`*^9, 3.672638274130886*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643892286968*^9, 3.6726441888876467`*^9, 
  3.6726443540164413`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643892286968*^9, 3.6726441888876467`*^9, 
  3.672644354094695*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643892286968*^9, 3.6726441888876467`*^9, 
  3.672644354191121*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ListPlot \
:: lpn\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643892286968*^9, 3.6726441888876467`*^9, 
  3.672644354211813*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643892286968*^9, 3.6726441888876467`*^9, 
  3.672644354311262*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643892286968*^9, 3.6726441888876467`*^9, 
  3.672644354399984*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643892286968*^9, 3.6726441888876467`*^9, 
  3.672644354496665*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ListPlot \
:: lpn\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643892286968*^9, 3.6726441888876467`*^9, 
  3.672644354517391*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643892286968*^9, 3.6726441888876467`*^9, 
  3.672644354617606*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643892286968*^9, 3.6726441888876467`*^9, 
  3.672644354709931*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643892286968*^9, 3.6726441888876467`*^9, 
  3.672644354801466*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ListPlot \
:: lpn\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643892286968*^9, 3.6726441888876467`*^9, 
  3.6726443548255796`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643892286968*^9, 3.6726441888876467`*^9, 
  3.6726443549297323`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643892286968*^9, 3.6726441888876467`*^9, 
  3.672644355014573*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643892286968*^9, 3.6726441888876467`*^9, 
  3.6726443550983543`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ListPlot \
:: lpn\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643892286968*^9, 3.6726441888876467`*^9, 
  3.672644355118911*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643892286968*^9, 3.6726441888876467`*^9, 
  3.6726443552134943`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643892286968*^9, 3.6726441888876467`*^9, 
  3.6726443553005877`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643892286968*^9, 3.6726441888876467`*^9, 
  3.672644355386097*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ListPlot \
:: lpn\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643892286968*^9, 3.6726441888876467`*^9, 
  3.6726443554082327`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643892286968*^9, 3.6726441888876467`*^9, 
  3.672644355509531*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643892286968*^9, 3.6726441888876467`*^9, 
  3.672644355598838*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643892286968*^9, 3.6726441888876467`*^9, 
  3.6726443556939707`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ListPlot \
:: lpn\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643892286968*^9, 3.6726441888876467`*^9, 
  3.6726443557149467`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["False Positive Fraction-(1-False Negative Fraction)", "Subsection",
 CellChangeTimes->{3.6704251110533047`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"BDTLinearHardFPFNPlot", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"BDTLinearHardFPFN", ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<False Positive Fraction\>\"", ",", " ", 
        "\"\<1 - False Negative Fraction\>\""}], "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<BDT Linear Hard False Positive Fraction-1 - False Negative \
Fraction\>\""}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BDTLinearSoftFPFNPlot", " ", "=", " ", 
    RowBox[{"ListPlot", "[", 
     RowBox[{"BDTLinearSoftFPFN", ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<False Positive Fraction\>\"", ",", " ", 
         "\"\<1 - False Negative Fraction\>\""}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<BDT Linear Soft False Positive Fraction-1 - False Negative \
Fraction\>\""}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDTCircleHardFPFNPlot", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"BDTCircleHardFPFN", ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<False Positive Fraction\>\"", ",", " ", 
        "\"\<1 - False Negative Fraction\>\""}], "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<BDT Circle Hard False Positive Fraction-1 - False Negative \
Fraction\>\""}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BDTCircleSoftFPFNPlot", " ", "=", " ", 
    RowBox[{"ListPlot", "[", 
     RowBox[{"BDTCircleSoftFPFN", ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<False Positive Fraction\>\"", ",", " ", 
         "\"\<1 - False Negative Fraction\>\""}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<BDT Circle Soft False Positive Fraction-1 - False Negative \
Fraction\>\""}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDTTwoCircleHardFPFNPlot", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"BDTTwoCircleHardFPFN", ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<False Positive Fraction\>\"", ",", " ", 
        "\"\<1 - False Negative Fraction\>\""}], "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<BDT Two Circle Hard False Positive Fraction-1 - False Negative \
Fraction\>\""}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BDTTwoCircleSoftFPFNPlot", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"BDTTwoCircleSoftFPFN", ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<False Positive Fraction\>\"", ",", " ", 
        "\"\<1 - False Negative Fraction\>\""}], "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<BDT Two Circle Soft False Positive Fraction-1 - False Negative \
Fraction\>\""}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.670425123211239*^9, 3.6704251934557533`*^9}, {
  3.67093319064604*^9, 3.670933195563754*^9}, {3.672570104680911*^9, 
  3.6725702008782263`*^9}, {3.672638276332295*^9, 3.6726382817002087`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643894027516*^9, 3.672644190677444*^9, 
  3.672644355858362*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643894027516*^9, 3.672644190677444*^9, 
  3.6726443559360933`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643894027516*^9, 3.672644190677444*^9, 
  3.6726443560307903`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ListPlot \
:: lpn\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643894027516*^9, 3.672644190677444*^9, 
  3.67264435605363*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643894027516*^9, 3.672644190677444*^9, 
  3.6726443561538343`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643894027516*^9, 3.672644190677444*^9, 
  3.672644356243712*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643894027516*^9, 3.672644190677444*^9, 
  3.6726443563336763`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ListPlot \
:: lpn\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643894027516*^9, 3.672644190677444*^9, 
  3.6726443563568153`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643894027516*^9, 3.672644190677444*^9, 
  3.672644356457098*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643894027516*^9, 3.672644190677444*^9, 
  3.6726443565502768`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643894027516*^9, 3.672644190677444*^9, 
  3.672644356640806*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ListPlot \
:: lpn\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643894027516*^9, 3.672644190677444*^9, 
  3.672644356661126*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643894027516*^9, 3.672644190677444*^9, 
  3.672644356759358*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643894027516*^9, 3.672644190677444*^9, 
  3.672644356850526*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643894027516*^9, 3.672644190677444*^9, 
  3.672644356943143*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ListPlot \
:: lpn\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643894027516*^9, 3.672644190677444*^9, 
  3.6726443569635077`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643894027516*^9, 3.672644190677444*^9, 
  3.672644357070416*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643894027516*^9, 3.672644190677444*^9, 
  3.6726443571911373`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643894027516*^9, 3.672644190677444*^9, 
  3.672644357282606*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ListPlot \
:: lpn\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643894027516*^9, 3.672644190677444*^9, 
  3.672644357304727*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643894027516*^9, 3.672644190677444*^9, 
  3.67264435741473*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643894027516*^9, 3.672644190677444*^9, 
  3.6726443575080967`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(MapAt[\\(\\(\\(\\(\\(\\(\\(\\(1.` \
\[VeryThinSpace]\\)\\) - \\(\\(1.`\\\\ #1\\)\\)\\)\\) &\\)\\), \\(\\(Symbol[]\
\\)\\), \\(\\({All, 2.`}\\)\\)\\)\\)]\\)\[NoBreak] is not a list of numbers \
or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643894027516*^9, 3.672644190677444*^9, 
  3.67264435759659*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ListPlot \
:: lpn\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643894027516*^9, 3.672644190677444*^9, 
  3.672644357618683*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Visualizing Results", "Chapter",
 CellChangeTimes->{3.670375320759688*^9}],

Cell[CellGroupData[{

Cell["Optimized Parameters", "Section",
 CellChangeTimes->{3.6703753280378857`*^9}],

Cell[CellGroupData[{

Cell["SVM", "Subsection",
 CellChangeTimes->{3.6703753377274113`*^9}],

Cell[CellGroupData[{

Cell[BoxData["SVMBestResultTable"], "Input",
 CellChangeTimes->{{3.670375334701708*^9, 3.6703753415527687`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Data Set\"\>", "\<\"c\"\>", "\<\"\[Gamma]\"\>", \
"\<\"Efficiency\"\>"},
    {"\<\"Linear Hard\"\>", "0.1`", "6.`", "1.`"},
    {"\<\"Linear Soft\"\>", "5.6234132519`", "5.5`", "0.969289827255`"},
    {"\<\"Circle Hard\"\>", "100.`", "3.5`", "0.983870967742`"},
    {"\<\"Circle Soft\"\>", "100.`", "2.`", "0.935483870968`"},
    {"\<\"Two Circle Hard\"\>", "100.`", "3.`", "0.974358974359`"},
    {"\<\"Two Circle Soft\"\>", "3.16227766017`", "1.`", "0.960199004975`"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.6703753726171722`*^9, 3.670375385392658*^9}, 
   3.670375733692236*^9, 3.6703759338152447`*^9, 3.670677642957868*^9, 
   3.670931215220955*^9, 3.670931273921777*^9, 3.670931358951641*^9, 
   3.670931446010413*^9, {3.670931531912753*^9, 3.6709315793991003`*^9}, 
   3.670931726690292*^9, 3.670931855700782*^9, 3.670932002607141*^9, 
   3.670932043307353*^9, {3.670932081545072*^9, 3.6709320923698072`*^9}, 
   3.6709321393310013`*^9, 3.670932184195422*^9, 3.670932321507885*^9, {
   3.670932486418779*^9, 3.6709325527141037`*^9}, 3.670932672088439*^9, 
   3.670932764866557*^9, {3.670933197653372*^9, 3.670933225167624*^9}, {
   3.670933695676511*^9, 3.670933705637958*^9}, 3.670939379389626*^9, 
   3.670939417118347*^9, 3.670939701225223*^9, {3.670939906867234*^9, 
   3.670939922089799*^9}, 3.671540975722892*^9, 3.671541966330401*^9, 
   3.671542054193471*^9, 3.672570223579015*^9, 3.672571592770133*^9, 
   3.6726438956935797`*^9, 3.672644192392316*^9, 3.672644357687698*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["BDS", "Subsection",
 CellChangeTimes->{{3.672638035057851*^9, 3.672638035417972*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["BDSBestResultTable", "Input"]], "Input",
 CellChangeTimes->{{3.672638040580975*^9, 3.672638040738158*^9}}],

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"Data Set\"\>", ",", "\<\"Number of Stumps\"\>", 
       ",", "\<\"Efficiency\"\>"}], "}"}], ",", 
     RowBox[{"Last", "[", 
      RowBox[{"\<\"Linear Hard\"\>", ",", 
       RowBox[{"Symbol", "[", "]"}]}], "]"}], ",", 
     RowBox[{"Last", "[", 
      RowBox[{"\<\"Linear Soft\"\>", ",", 
       RowBox[{"Symbol", "[", "]"}]}], "]"}], ",", 
     RowBox[{"Last", "[", 
      RowBox[{"\<\"Circle Hard\"\>", ",", 
       RowBox[{"Symbol", "[", "]"}]}], "]"}], ",", 
     RowBox[{"Last", "[", 
      RowBox[{"\<\"Circle Soft\"\>", ",", 
       RowBox[{"Symbol", "[", "]"}]}], "]"}], ",", 
     RowBox[{"Last", "[", 
      RowBox[{"\<\"Two Circle Hard\"\>", ",", 
       RowBox[{"Symbol", "[", "]"}]}], "]"}], ",", 
     RowBox[{"Last", "[", 
      RowBox[{"\<\"Two Circle Soft\"\>", ",", 
       RowBox[{"Symbol", "[", "]"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Output",
 CellChangeTimes->{3.672643895714095*^9, 3.672644192409871*^9, 
  3.672644357718397*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["BDT", "Subsection",
 CellChangeTimes->{3.6703753521105223`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["BDTBestResultTable", "Input"]], "Input",
 CellChangeTimes->{{3.670329435346888*^9, 3.670329462426306*^9}, {
  3.670375347747806*^9, 3.670375353463567*^9}}],

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"Data Set\"\>", ",", "\<\"Number of Trees\"\>", 
       ",", "\<\"Efficiency\"\>"}], "}"}], ",", 
     RowBox[{"Last", "[", 
      RowBox[{"\<\"Linear Hard\"\>", ",", 
       RowBox[{"Symbol", "[", "]"}]}], "]"}], ",", 
     RowBox[{"Last", "[", 
      RowBox[{"\<\"Linear Soft\"\>", ",", 
       RowBox[{"Symbol", "[", "]"}]}], "]"}], ",", 
     RowBox[{"Last", "[", 
      RowBox[{"\<\"Circle Hard\"\>", ",", 
       RowBox[{"Symbol", "[", "]"}]}], "]"}], ",", 
     RowBox[{"Last", "[", 
      RowBox[{"\<\"Circle Soft\"\>", ",", 
       RowBox[{"Symbol", "[", "]"}]}], "]"}], ",", 
     RowBox[{"Last", "[", 
      RowBox[{"\<\"Two Circle Hard\"\>", ",", 
       RowBox[{"Symbol", "[", "]"}]}], "]"}], ",", 
     RowBox[{"Last", "[", 
      RowBox[{"\<\"Two Circle Soft\"\>", ",", 
       RowBox[{"Symbol", "[", "]"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.6703753726391706`*^9, 3.670375733846438*^9, 3.670375933844726*^9, 
   3.670677642971601*^9, 3.670931215254068*^9, 3.670931273947188*^9, 
   3.670931358968813*^9, 3.670931446057865*^9, {3.670931531928829*^9, 
   3.670931579433199*^9}, 3.6709317267276382`*^9, 3.670931855719101*^9, 
   3.6709320026316843`*^9, 3.670932043324032*^9, {3.670932081570415*^9, 
   3.670932092409368*^9}, 3.6709321393638573`*^9, 3.670932184230281*^9, 
   3.6709323215379953`*^9, {3.67093248643813*^9, 3.670932552733473*^9}, 
   3.670932672125279*^9, 3.670932764893486*^9, {3.670933197675866*^9, 
   3.670933225183955*^9}, {3.670933695704897*^9, 3.670933705668044*^9}, 
   3.670939379411886*^9, 3.6709394171340427`*^9, 3.6709397012637253`*^9, {
   3.670939906888541*^9, 3.670939922118813*^9}, 3.67154097575218*^9, 
   3.671541966352971*^9, 3.671542054218308*^9, 3.6725702260568666`*^9, 
   3.672571592800446*^9, 3.672643895740931*^9, 3.6726441924264097`*^9, 
   3.6726443577487926`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plots", "Section",
 CellChangeTimes->{{3.670375747077813*^9, 3.670375747772895*^9}}],

Cell[CellGroupData[{

Cell["SVM", "Subsection",
 CellChangeTimes->{{3.6703757513644447`*^9, 3.6703757520203257`*^9}}],

Cell[CellGroupData[{

Cell["c-\[Gamma]-Efficiency", "Subsubsection",
 CellChangeTimes->{{3.6703758536214743`*^9, 3.670375862404554*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{"SVMLinearHardCGEPlot", "\[IndentingNewLine]", 
 RowBox[{"SVMLinearSoftCGEPlot", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", "SVMCircleHardCGEPlot", "\
\[IndentingNewLine]", 
 RowBox[{"SVMCircleSoftCGEPlot", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", "SVMTwoCircleHardCGEPlot", \
"\[IndentingNewLine]", "SVMTwoCircleSoftCGEPlot"}], "Input",
 CellChangeTimes->{{3.670375767185611*^9, 3.6703758069507027`*^9}, 
   3.6703758653175297`*^9, {3.672570253287875*^9, 3.6725702833291273`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJztnHl4FGW2xjtJk3RDEzrdnU4GhQEFFLgMQYZNYaoA2VFBNllUjELEYXEF
RAgNYZHdsBpAEBcQcZARQXREWnAbZIzKMiIgMIoLosRIMDRIpqFSdb7znX7H
f+59nvvc5/rPPPPzeOp873nrq6pU16mbO+bWYckul+veKi5XSvx/L6z/6dOb
cnsZrsv/lBgF0d1rOm09bXBeDrjLTMzdgHsA9wHuBzwAeAjwMODZDg8VNIs9
d9XtQgfOywF3gTxuwD2A+wD3Ax4APAR4GHDSodfq5l+9980IoQPn5YC7QB43
4B7AfYD7AQ8AHgI8DDjp0KBGvcgizzihA+flgLtAHjfgHsB9gPsBDwAeAjwM
OOnwWGhjl+MTpgkdOC8H3AXyuAH3AO4D3A94APAQ4GHASYdTP91x5boWC4UO
nJcD7gJ53IB7APcB7gc8AHgI8DDgpMPCjk/ffDjnaaED5+WAu0AeN+AewH2A
+wEPAB4CPAw46VASaDJ02+6XHB3c/dObvPKUzssBd4E8bsA9gPsA9wMeADwE
eBhw0mF50aV/Xnd0GHTPDUdvmadz0oFzl5mYuwH3AO4D3A94ANQfAjwMOOlw
78axX/p3vSf8wHm5ow/nLjMxdwPuAdwHuB/wAOAhwMOAZzt8bN+uucF2+4Qf
OC8H3GVuevDewh8m6twNuAdwH+B+wAOAhwAPA57t8AONr2y7+eJxR4fUKUs6
zhmp83IjcbwL5HEDTn7g3Ae4H/AA4CHAw4CTH+z1637gvBxwF8jjBtwDuA9w
P+ABwEOAhwEnHZIG9b1y/0MXhA6clwPuAnncgHsAp32Scz/gAcBDgIcBz3b4
4hGfX39bT6+p68B5OeCkA+duwD3guD7A/YAHAA8BHgacdPiw5dXVhuaHhQ6c
lwNOOnDuBvk9gPsA9wMeADwEeBhw0sH6//UcHRLzcsBdII8bcA/gPsD9gAcA
DwEeBpx0aL/t1WbDPmgmdOCc/MA5+YFzN8jvAdwHuB/wAOAhwMOAkw7nUgq7
jV5tODrY1zvOSQfOSQfO3SC/B3Af4H7AA4CHAA8DTjrku09VL6/VU+jAOZ0X
nJMOnLtBfg/gPsD9gAcADwEeBlzfHwY6OvDrrM31/cHm+v2DzfX9web6/mBz
fX+wub4/2FzfH2yu7w821/cHm5MO2Uf/Prj9c+sr/32p83zNeTngMcDp+Z0/
3513+LyHPAuTh2/5Da481+9vbczes7WSJwHuBrwK4B7AvYD7AK8OuD8xj/jB
c1+Gw/Om9OzXYFbU4ibgyvPm9hMvT3t45U6j36V/9ktu+8Tmc3vs2dr+j7uM
0Ye2jjq0VXLbP4njJbd99Vt++O/y2//76v+Wr3T/IL8tyY7vXHXkdarVHW90
85m3CH6q97baVXJ6C7794UXZ7uitgs9fNjqQ0quv4HfG0ycf6yd4zpF6qUn3
DxC84ZAFO8tcvzPrVB/WrsmoNFPn7WvunjDo87PG+bTlHdYvIG7n0bkVfxHE
u0ydW8dNEce1/ZyYewS38lQD8XT9WvlOnU0Puho69QRdk/JGP0l8htf7+Lej
yoQ+VniJsy6ep9yw8/B6aoB6/KIe67i/ijxPzHhl1dKtGSJ+1zT3jWe2Jov6
/7NuAcGt/EGQPxXoJvW3z6/E+TNB/qogvw/kD4P8WQ5f+MNEo0X0Oqcvzt9n
xn/XoJmrjeA1L/2Hpryv5sfNFvlvqXdh+Nv3/2I8nX5wSqO5lP/I7y6M/Xbv
z0a9Fx788zvTKP99NS7MqNGqxFjf3tfvjkn6eul5h+evEPVb+c+L+q38VD/X
OR3o7Ae60X0j14041424nefaQP7modtSzO6ul4rnrqQ8p335N5z5Lsn8qKjT
6w2WUJ4tafm7Zl7hMvs0P/pMVKk/t0PyVRMGS//rfub1k/95/cR5/W6Rx6o/
TeSx6q8i8lj1u0WdVv3y/NLPF16/B9TvAfV7QP3VQP1eUL8H1C/PX/185PX7
QP0+UD/xl7scnxCKdnDOx4LUUUvaFJ42es+LX/COdXJ4tSbhLblx//z86U25
flc3hy/qs2PfnCK9/ixQf7Y47s5Pdnn/FT5rNNvpbTh8Fh338aT/WvyP9DPG
+hVDve2m03Fvbra49uuppUbdR177LjhF16HEKHyx24N5K3QdSoyiIxM7rZir
61BirPFvyi6epPexBuhjddBHqae1rotCT2tdF4Se1rpijp68L3S+874Q532R
+4OF/cAnfuATuV+FvDsG5hzOEHnGpe6oFTsj8xxK2XF8V3W/0Of4t8fdD1RL
MQ9tPjz2gyJa1zuu8O7haclmn3nNB6xW9FmX3X3BkJQk88Phs1uNLdT1oX2A
60Oc6yP3H4sHgD4BoI/cDy19gkAfmcfSJwD0SRPrsvRJFeuy9KkCzmsP0McD
9JH7m8VDQJ8Q0Efut5Y+mUAfmcfSJwT0qQb0qQr08QJ9fEAfH9DHB/QJA33C
QB+5n1v6ZAF9ZB5LnzDQpwbQJx3oUx2sKxusKxusi7j9XLb2+4Z/aVvxi5E0
0/PUJuW57J+Rrj3eiz/vpE+dtHbgCnou84bzvrtla5lxxaTSl5OL6Lns+g3T
Zx4sPGNcOz7v9Q1L6bnsz+Zz9e8e9bPxx4cO7+y7mJ7LVu7fuetU11Kj/eje
e34tpOeyj+47ftfYej8ZN414b//aBbof6O+f3A/EuR+I8zx+4Cs/8JUf6FZh
3N68/Zje83TdLhq9Wu8Z9sICXbdfjY7tBgypKNR1u2C07PCvW/sv1nU7bzTq
MqrbX5bqusWMWj3jz65Fum7njIzeBS0Hr6D1PnDm/qnbpmeI9ea6qg3bnJIh
1tvX93yXjVPkei0d6PrFn9+J8+d34vz5nTh/fifOn9+J8+d34ry/AdDfAOhv
QKx3b9ni/qsqUkz9vBh5uS8ppn5eVJmz+cw1h5JN/bxYdblfyaZ+XrSs8+nC
v25NMvXzovhyH5NM/bzI21KSc8NCl6mfF1Z/g6C/QdBfuV5LB7r+8v4S5/0l
zvtLnPeXOO8vcd5ft9g/LR4C/Q2B/oZAf9PEeq3+pon1Wv1NFeu1+psq1mv1
t4pYr9XfKmK9Vn/leq3+ZoL+ZoL+yvVaOnhAfz2gvx7QXw/orwf01wP66wH9
DYP+hkF/w6C/1UB/q4H+VgX9rQr66wX99YL+yvVa/c0C/c0C/ZXrtXTwgf76
QH99oL8+0F8f6K8P9Bc9z2aD/maD/sr7Fqu/NUB/a4D+poP+poP+Vgf9rQ76
6wN9KTE2tx9d9/REvS8lxtrO57I6T9b7En8u7jEt/akpel9KjLm9alQ5U6D3
pcSI9Ft+vvsMvS8lxkOD6peueVzvS4mRd+emb8tn63X6gX/8wD9+4B8/8I8f
+McP/CPvQ05O6N64uCJD1Gn1K0PUOfXdgbFFozJEndb9Uoaos6Z/xN9vOyTr
tPor69w8aPyTtbqh+6UA0DMA9AwAPQNAzwDQMwD0lNd9S88g0DMI9AwCPYNA
T1mnpaes09IT3Z+EgJ4hoGcI6BkCeoaAniGgp7zOWnpmAj0zgZ6ZQM9MoKes
09JT1mnpie4HwkDPMNAzDPQMAz3DQM8w0FNe1yw9s4CeWUDPLKBnFtBT1mnp
Keu09ETX32ygZzbQMxvomQ30zAZ6ZgM9ie/LPlh/+tuTKt/bljnv2d88Ne1E
7QnDxPv6J4Y8/UlZcd9KXuHwa64/8PVY312VPDnxdyJR9J1dGfh+MAY4HTe1
8+GvSjflVb43p/f79Wvc8vFT7QZWxqeB4yYn5hH0fSLl+WjuXTkLSgeK9/W/
f/7ga7fFeleuNwPk9wKeDjj4zlHJz75LgjoHE3MTfBcZyQTHpfzDVqyfMrpR
P1E/57Re9l2hEt9g7qx2g9cNE/GPLy0c/ujO/qJ+ngd8/6jo8+q+nVe/9Umu
OO5PM7tlLp89WOjQ4em3V969sI/QgX8XSfV88c3I3Q0DeaKe6deXBzuU3ynq
YXlM8D2mctwNhY/2mDboNqH/A4uafN29493iPOo8ec3EvIKHxXnUtOnWb0pH
jhTnEf/OMQY4iqfzKO907UdvuPiA4Cw+gr73TAPx5IeW7+fm//ruIyJPjR2t
v69dOlrkGZWzdtPctveIfvH86YCD70mVPg5odWzCJ+ZDos5lHXsNKJ94rzy/
xh9denr4XaK/XAeqc9y628c9/7f7RZ2s71HwvaoJvm9Vjluc+8YvDY6MEf7h
33vGACc/tM94f9gN7aaK+KGBarltOj8q4nke8gnzraI/862iP8sTQd/Pkh/S
r4ymNa6YLI7L83iBn4MgnvryxcI3+qcPKRD1LM8s7Xi04DFRD88DvttV1sv8
r/SX+V/pL9eB6n9uwd6H7609RayXXUdM8D0s8k8UfC9sgu+LlTx/Sg5dVfWR
2cKH/HtbxGOAk99c5W3zi1o9IeKHp3984sfxM0Q8uy9S+svzJwN90PfL1PdG
F1pEsx6aK/Kw80jxAzuP0HUf9VGp/+yZm256umWhqPNWT2nBhbGP/8b5EgT5
wXfWqE4lT+bZAXfUf2C+qJ+dR4p/2Hmk+If1Kwq+z1X48VmbX2oyY5nwFf+u
mTjzp6Inj4+BPOSrA3U97V49sFLEL6r3WM+G5xeJeJ6HfML8rOjP/Kzoz/JE
0Hfl1PfH3yw+/HKPov98P6/0i/s5COJJt0l9641quXKVqOf6AcsmboguEfXw
POB7dmW9zOeKf5jPFf9wHaj+pqe/912XsUKsl8Wb4Ht5JT/zeRR8N418q/iQ
+VbRk8eTrzivAJz6y/yp6Mz8qejM8kTQd/rUx/Ybhg/YPWmtOC7P4wU+DIJ4
0sH96PkjE1ttEPXcNy6lT58Bz4p6eB4wH0BZL/Ot0nfmW6XvXAeqv0mnJw9W
yXhBrJfFm2D+gJKf+TMKvkNX+PSX17X6+clXHF9dfk26TP8dPv2+t19Gi/3z
Tz4ndObx5KtC9vv2mHFp1w9t1OOp7+y7AEX//COffJz1zhqhP8sTQfMQ0kC8
F/gwCOJpvUtbjTiV0Xybc9wb54z85vx6PR7MVVDqZ/5U+sv8qfSXrwvUaYL5
DEoe5jfFD+w7/Sh9p8y/IygD8xnIP8xXim48PgbyVDg8qeWeI5M7vePEX/o5
4r2F8etd4MbVjbLedOKLf+nz5fMr9DzJzt+1yg/Me+P9ZS8L/Vl8BM2RoPe8
y7fX/ezH99928jc9Ui91yhI9D73Xm5Xx2VcTKjaLfvF4eq/U4sE1Q7tOe9ep
Z8HOsmuHLIj3ZfaPz/1t8VtOPZf/8yI9j9/xIfOn4ofITeNm//m6vwo/8PVS
nR+dOzvotdRdzrpi+fe9+fAiLd4EczCU/Ow7HcVvbB5ClOYkDBp5LOv1vH84
vko8R6LMsOth/ozrafuQx8dAHvrdeIPM+mtzUj8V8dt+KFr987kPRDzPk0zf
0av+VPzG4iNoXkeaw1/ckLJvxapiJ//073tvqz1dz+N14ouYP4PguOlO/Eev
tnQ/U3evU8+Jj686dC7/tOFtsn3wgZwPnXpOr3uvR6tZeh4wJyS+XoervlX8
wNcbdOInPRLsuuPkx866el1671ugxZtg3kg8v82LVd8qfmNzJ5T97cV+U2df
V/9zx1c1L5/Y+rwO8iHzZ1zPS39mbzxTj48ZJZW6cV5h2DqPaXzHwRdSjznx
tv8P9019t1aLA0584vkhyc75wnwb74tdP/NtvC/1Lw8W0fJE0LyUNIdn9Dd/
aFvrsDguz+N1OPdt0PEtj0934p9tvL3qxuTjop4b+71zzbVNPhP18DxgTkt8
vTZnPo/7J6HP4/45nbBfQSfP+P4Xb+mS+YWz3oR9N8EcmHh+mzOfx31o+9w6
Xonw5/AVhVVyjG8cH9rxfI5KmeG/rc2rH4zV/BzXOXF8DMyTIb+drZpW/NLk
U8LPg9c+ue/wW18KP/M85BPm83i/7DzM5/F+Jcyj7Es8P+1L32emrxpY8a3Y
J3ke2ie5n4MgnvbJx6YX5B0wfhT79rE6maNSJ58Q+zbPA+bnKPsk83/cP/Z5
yvwf988Vlec114H2z/ufmN2yYMdJsV4Wb4L5PMr+yXwe96Ht8+ia1SfHbDgj
9kPmW4Uz3yp68vgYyEPX2Skdjf1H+58T8eac2c9OmP+TiOd56LrM/Kz0hflZ
6QvLE0FzhKjvriaN5p9sc1Ycl+ehvnDfBkE86fb2R38fP+hETNQTCWd2Kbvy
Z1kPywPmFynrZT5XfMJ8rviE60D1m5fndfwi1sviTTAfScnP/Kzsh9s6ntq4
d2iyaf13ZWAOEnHm27ie9n0jj4+BPOSrMYM2Fr85M9XU4xuMiMy8v3WFiOd5
yA/Mz/G+LK+8n2d+jvfFvv9neSJojhP1vXuPqffU3ZVi6sfleeh+nvs26DzX
8Hh6TknOvXF61ZNppl5Pg7b9z02/6DL1engeMD8qSr+zYj6P+8R+vmM+j/vk
3crnQa4D/b7oyK3ZNcfUr2La6014XBPMp4rQ72qYn+M+tJ8veP30e4/ZjxQu
NQb4hT/5fCfizM+Kzjw+BvKQ33ps3VKjjyck4kMnu7QctrOaiOd5yCfM50q/
mM+VfrE8ynMrz0/PrbtbdA11XpghjsvzUL+4n4PguKTbnLEj5w3smOnU48Tf
t6XZg63TnXoS5wFzvZT1Mv8r/mH+V/zDdaD6q529WNjzHwGxXubbKJgPZoJ5
Yui4Sh4j+WzqhfRajg/tfYDP3SJ/Mj8rOvN48hvn5LeDw+9J2lNc14m3/cDj
6e8qzM9KX5iflb6wPBE034z6fs/l+5PfO8dNnIf6wn0bBPHAh2q/VB8q/eJ5
wFw1tF7kqyiYq2aCOWyoHiVPzuwuJ3ocsL8LLgPz1hCPAU5/9/P/YVTP35XW
d7i9/5cUv+VdvDFb6MDzJCfmETTnLQ3EU9/rDPn8yeu+uuY34tMBB3PhYP3B
xNwE8+KUfvH8aH4ane+c0/nLeQXgdJ4G1H4p62LxETRfLg3EewFPBxzMnVPq
uVrto6IbryeYmJtgTh3KE0Vz28oM+3mqZ+mp9pMHtnd0tq+bPJ76wnkF4NQX
xiNorl1aYq7oz3k64GDenaI/P24wMTfBHDxFZ54fzYUrc94XHLv62b15VbuJ
Onl8zLDvwzmnvnBOOjMeQXPz0hJzReemi98vabq4u9CBx6cDDtal6M/rCSbm
8LiZID+aR0fvgzgnnTknnTknnRkX+7kdr+/Pdjzp3Cn6ReTomgFivTxe389t
Dub4if3crkffzwf+xnH1/dzOTzqz97DK7wHYe1LlPSx/b0jvYdl7MSWev7ei
97NT1PdHynvV+er7HeW9Kn/vTO9B2Hs9RU/2/kt57uPz4mi9fP6b8nsG9t5Z
+V0B42mJeQTMhYuAOW/K+032HkpZL5+rRu9l3h2z9/SST3Y667U5m5+mvDdh
XHmv8T+iD9IB6va/V5+RzV9xff3NVaa9Lttv4RGDPB98UdO012XzUvU+U9mX
Oi8PJ7/yWh3TXq8d/yf1eUrZN+4KLdi97KWmlXno/TV7DlL8b/2dobFp98Xe
9/hzCu0nbermz7mtOEesi61X2WfYepV9pvfXdfPz32gi1sXWq+w/a/uuW+45
19K0/Wbfz2xrv6lv54Lmjm72/Um1n4pSXmrY1tHB+U5ffY5QdPv9F89s/25z
a6HD3aqeim7NPtww7po/tRB9nDphSYN5X7UT+nRkOpOeS/NWHds9+nqhA9NZ
0bOPqpuiz6lPW0ysMepGR5+/Verzgqqbst7D6v2Jcn18XdVTub74VD0VHdp2
HFT0z7P2d7Kk25VMT2W+Vm7GnV2+7CB0a6Lehyi6NVV1VvwzTdVZ0Wfu5vyt
qyNdhJ6LVZ2Rboo+eW8PnHZ7Q/u7pzJjWOV9xQ8Ff/C1+fxmx2/2ebogsj1p
R8f+jp723xluVu+3FT3rJj2Wkj+zj9CN60m6bZrSukq7D3sJ3bqq9xWKbqtV
nRXdPjNXTl11oq/QZ76qm6LPCFUHRZ8SVQdlXfNVHRSfXMHWS+vaqK5LqXOf
WqdSD5v7F0FzFOWcTLuPiedeVgAeA/MkY2IOpN3HjyMFIz5fpteJ5gjRecrz
g/mWiv58rg7th3yuDnGeR863tOtPPK+yIvF6lb5zHcA8PdQv5fzldYK5doqe
vE7Q96icd6TryecXlRkz9j6f1KhQPy7Sn647XP8Y4BTPjxsDXM6Z1ON5naC/
UTmHze67vf/wOonzeohz/eUcM70vLH8EzXtMS9yXCJrDJudA6vGsTsVvXLdM
UKcX1OMFxwX+jIL5IRE5X0vn/LjpYD+JgXmMMTCPkeYH8vgyY88vr8WyZ+nx
ZUaf2nfV7KD7UKmH64bqB3NNkT+VeL5e8iGvnziPp+s1jyfO10uc1aPUydcL
5iIq8dy3QbAvoflCcr6fHs/9g+YZkj78PA2C8zGYuH7lPOL9lfP69Hi+Xi9Y
F+CKDnxdaB8A57VSD+9jJvAnmNcXBfN/InKOqx7Pvq+PyHkvOmff1yucfV+P
9gfFn1xnMF8uguaHlBnvn96SfF+hPk8gfj9zxjwXXaTPEygzNp778HTWUq2e
qJz/pnNWT1TOS7Hz2/fnfC4B/T2QzyUgzucSEOfnnZxjpnOuDz1PcV5hPFG5
n3Dd6HmB60acr5c4Xy9xvl7i/HyR81XsOu19j9dDnNdDnNdDnNdDnOtPunFO
8awvcD+Rc8n0eKaDieaQ0D7J9SHO9SHO9Uk2cxJdpyJyTprOuZ6Un+tJnOsG
roPoPiQK5oco1xGuj5xTp8dz3eT8Oj2e74dgXl8EzOuLgHl96DoYRfNk0sA+
kwb6kpa4HoXzvqQBnb1ATy/QzQt08wLdvOC46eC46eC46Hok58v95+OC60tU
ztHS43k9YN6XwrkOYN6Xwtlxo3J+l87ZcaNyfpfO2XEVznUD88eUeH4+ov1c
zsvSOfe5nJelc+7zIPA5uD6i/TYi51Pp8dwPcm6VHs/WpXC2LlPOrdI5W5fC
uQ/lvCydcx9mAh9mAj9kJtZN2ce4b8H+hu4/Fc59C+ZlReUcKp3/GwdNK2o=

   "], {{
     {RGBColor[0, 1, 0], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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

          "]], Polygon3DBox[CompressedData["
1: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
          "]], 
         Polygon3DBox[CompressedData["
1:eJwt1XmwzlUcx/Hn3vvYlWXKUvYllxpU0tjSlUtZJqnQjkRRtElKtNJqXxqU
Fmk0oxo7RVmnUU2moVQiJtvYaaFQr+8854/3nM/38zv7+Z7zq9t/WM+h+ZlM
ZjBK4EA2k5mal8lMw5t4XvwNBtD34TGMFM9EA/qngkzmCI5iNa9P1FF+gS9R
CRXxLYb7VkF5voFq03WwGi/zfsAo+hk8i1HitViDdanfR5VH8A49B9PxnPgw
JkQ7ZT3Ux1e4i3c3+mG4eCfGxXh4DaPF83A5fa/yP2vIKP9QnsR8+mrf/oqY
fpt+CzPxgnglbqVvwY14WFzB2nbSO7AlxuFtwlJ6CT7AS2lN0bYXbkt7Vhbr
TeEO8e14XNxQfyfokziLibxtGEk/FfOIPRP/Y44rtG0lbomBvO6oTHdUFvne
ASfS/r2LuXhR3ANV6GJlJ3U6o5ZxN/A2YjNejX3BR/R8vJ/afp/O7ek4n5Qb
n6Mb3R090r78jrGx9sipNOc4yxkpx47iGDZiYMq1vuncduE37MZ43hjlfuzL
5vJ1RsqDD3EFPUB5yhpOo451HOA15DXBpfgT1SV9NZTFJPFBTFJvMmal892m
/Y+YlXK9r7Ku/n6OvMd3aV9a8PbSb0QuxRzwC0bEGSlrow7axgUzXh7KpXH7
8drTLehWaI12vAJePk7pY0LsCa+juBjdMJ13bbRFEWrxJvPOmu9nhumg3TUY
wtuT7vSUmG/K+4rarKPXYjnG8fZquwdz0z4epw+lfZkY60t7f5O2LY13FZpi
auQQrxFdiGbJq4aqOB3vgbavKLdnc/cv7uHoyBvxIG1v1qYnuqa1lYi7bx1t
1WmDweIu6tXzfQrdle6GpfQSLMP16j2kfC/2hm6P6/CgeGE2l4+Rl51TvdXp
jbgTvdP7UqzPi41RA/XTWCXjLTKXrup0wbBop14H34vQGtN4C9J7MUhZgGw2
l4ORi8vpnr7lxzlre4Q+itPpfJvxSumnJM6ke96cd4g+iF14PZt7Z+O9nZ3e
rWNxp7HY/BqJL8FO8Qbf+9NPKMuhPPL0t4ZXi26EwrgL6i7Vtgm/cbyVvHz1
atI1sABjI4fTO3Qc+zCetyKt6RFlKZSOM1evKqpjf6r3tzGWGaO5uBn68w7z
FvLqi+vFWyk+x69k/ZXxcRr3HH+Vek3Fl+FQQe6s43yLcAOGissYrzTKYkXK
517xptLltakdb0FB7m1for9Cfl3cE3PXZhP9NbamN7sTr6F5NEDNdLfOaPsv
1qe9LaPsHPlBF/Cr4yLkRb4bowX/ynjLxHMiB+lFkXt4UtzbGL3QB21SDi1M
eRxrWoTF2Iot2dw/cky6M5txf+Ra5Hfqr7F+CtEEu1O+fILZebn/1ry83L/n
vHhnzW9I3CuMSGtbyWsnbo0HeJ9iWLzf6Jju0fY0h/g//4oduMB4q/Jy//EL
6Sr4H0/oByM=
          "]]}],
       Lighting->Automatic]}, {}, 
     {GrayLevel[1], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtlGdwlUUUhm+++1EzSJ8RCBGGjhCKlAik0EuCQwiQ6CDCBQYZSsACiEhT
ei8WqqBU6VhAEKQ3pTelKUUIJUbAACG058y+P955n7t3v7O755zdsqG09v29
QCDwBQqiH/lRA/8eD6Ei8Hv426gk/Bn+KSoPz8U/QBHwRLwTehkeifdDeeCe
mmNx0vBUVAIerTmFNf4hKgYPxQdo3Da2E1WFV4rrwHvwX1FD+BQ+A1WCv8Gn
oIrwInwQyg/3wQeifHBvcVF4MP4uqg8fwD/S+Pv4BBQJT8f/QHW1rnEc/Dfe
xA8EkuF8Qcf34QS8MboLt8bPaJ/H8R2oFvyz5YlvOsDhQXfeUvBYfB6qDC/F
h6NyVht8JgqHh+m8pZXzjprzOT4OVYAX4G+hMPgT1aukcj5ea43BR6gWo/At
qIH2uRW9Bu/y3Hq2bl/8EHod/g1frrqsxW+j1nAWfkf5uYhfU24tx5aT9nDe
oKtRhM47DRWHP1b8pvB1/ASKhS/gJ1X33fY/34fg6ngk6gi/hEehVPgf5pxH
jeDT+FOrE/wmnks5L4DnRm3gB4z/j1rC/+LfqZesf9bo7DM1brXbhv+u/GzH
j6JmcDp+TDk8ov4pph4bonpN0rcx8J+eq02Yamd90hy+hc/R/fpSdakJb8K/
FW/Gf1AtDuP71J+r8PUoWjWK5oxd4abk/mvP3WuLsxhV0Z2arz6fjH+FouCN
nptfQXc8hjg58Bu+67fq8AY7H+Nt4YPwY8/V1+5CHPPawR78kPEEOMf6VPup
ildBKXDRoBvvBBfG86umxvv55lV4nefeDcIG3vHcHIuZDReCE+EncIrn3rDO
2k8r+D98iefehIV4puf25gddfzZWb1xWD9j8n3QH7T25oTj38L9QPXg1fgnF
w1fwR4pzVd/WVm/c9VyPZSu+1f0sfh8lwXnYw1T4FXiW5sfrbbF9tlA/rFEe
7I3aq962OAWVtyJBdy+e2tl9V69uyrP1f6Jq1Irf3eFnFoN56XAL38Wsrd62
nsm2nPhuTjPdxxjf9edNz921kOJYzOdwEv9X1rrV8LCgexMsbytQGXi2+jNK
/RPPN5lwB9/1Uorubw+7qwH3/i9Wfuwd7qLxbp7rsQw42XdrJestPae8ZeC/
qM+X4d1RXriX1k1SD1h9Y3Uf7U3OglP5/wXd59Ih
          "]], 
         Polygon3DBox[CompressedData["
1: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

          "]], 
         Polygon3DBox[{{742, 67, 235, 232, 1084}, {777, 82, 242, 243, 1090}, {
          813, 812, 1103, 253, 835}, {772, 80, 238, 239, 1088}, {779, 83, 244,
           245, 792}, {766, 98, 254, 255, 840}, {810, 96, 250, 251, 829}, {
          776, 775, 1098, 241, 1089}}]}],
       Lighting->{{"Ambient", 
          GrayLevel[0.8]}}]}, {}, {}}, {
     {GrayLevel[0], 
      Line3DBox[{602, 2, 603, 604, 3, 607, 4, 608, 609, 5, 612, 6, 613, 7, 
       614, 615, 8, 617, 9, 618, 619, 10, 620, 11, 55, 66, 77, 88, 99, 280, 
       1105, 255, 254, 1116, 253, 1103, 252, 1102, 251, 250, 1113, 249, 248, 
       247, 246, 1112, 245, 244, 1099, 243, 242, 1097, 241, 1098, 240, 1108, 
       239, 238, 1107, 237, 236, 234, 233, 1094, 232, 235, 67, 56, 45, 1, 
       602}], Line3DBox[CompressedData["
1:eJwt0TkvRFEYgOE7Y8bYZydKP8A2Yu8UKCxjbEE0opPMUCioqampCSpbR01N
bV//hmcSxZP3O+ck956b27JSKhRDQRBsssAEIRthCpEgqNAIUSoZsRfTKkbN
1TqrNTqntVrHvLleGxgzxzVBkhTj9tKaYdGc1SVt1Lw2aTPLkfKFgqAoW+yw
xwFHnDPk/EbX9E5P9JQzHqyjYXcnxlP5G3WSPFMUmGaGX+eD3vmjA9rPt7lP
v7RXe/g0d+uHdum75rSTN3OHvmq7tvFibtVnzXpPhjQpkiSI8+j82r2vuOTe
ekPXKXFrPawX5efpsR6yzy7blFj9/59/+o4sfQ==
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1069, 1285, 1284, 1283, 1282, 1158, 1278, 1277, 1276, 1053, 
       1233, 1232, 1144, 1183, 1038, 1187, 1186, 1132, 1200, 1022, 1004, 1184,
        1005, 980, 1177, 981, 952, 953, 924, 925, 897, 898, 870, 871, 842, 
       843, 816, 817, 790, 791, 767, 768, 1106}], 
      Line3DBox[{1070, 1301, 1160, 1294, 1293, 1292, 1291, 1290, 1288, 1055, 
       1146, 1231, 1230, 1229, 1040, 1203, 1134, 1207, 1205, 1023, 1123, 1180,
        1006, 985, 1179, 983, 957, 955, 929, 927, 902, 900, 875, 873, 847, 
       845, 821, 819, 795, 793, 771, 1086, 260}], 
      Line3DBox[{1072, 1315, 1314, 1313, 1162, 1310, 1309, 1308, 1307, 1057, 
       1252, 1149, 1240, 1239, 1042, 1211, 1210, 1136, 1212, 1025, 1125, 1189,
        1010, 991, 1181, 986, 964, 959, 936, 931, 909, 904, 882, 877, 854, 
       849, 827, 823, 801, 797, 1096}], 
      Line3DBox[{1073, 1165, 1326, 1325, 1324, 1323, 1322, 1320, 1318, 1058, 
       1152, 1251, 1250, 1248, 1043, 1215, 1139, 1219, 1217, 1027, 1127, 1193,
        1011, 1118, 1175, 989, 968, 962, 940, 934, 913, 907, 886, 880, 858, 
       852, 831, 825, 805, 799, 780, 1109}], 
      Line3DBox[{1075, 1342, 1341, 1167, 1337, 1336, 1335, 1334, 1333, 1060, 
       1267, 1155, 1259, 1258, 1045, 1222, 1141, 1224, 1223, 1029, 1130, 1196,
        1013, 1121, 1182, 992, 975, 965, 947, 937, 920, 910, 893, 883, 865, 
       855, 837, 828, 811, 802, 1111}], 
      Line3DBox[{226, 516, 515, 514, 513, 512, 511, 510, 215, 414, 413, 412, 
       204, 358, 357, 356, 193, 316, 182, 298, 171, 160, 149, 138, 127, 116, 
       105, 94, 269}], 
      Line3DBox[{1077, 1272, 1271, 1270, 1269, 1169, 1340, 1339, 1338, 1062, 
       1227, 1226, 1157, 1199, 1046, 1235, 1234, 1145, 1228, 1030, 1135, 1201,
        1015, 1122, 1185, 994, 982, 967, 954, 939, 926, 912, 899, 885, 872, 
       857, 844, 830, 818, 804, 1100}], 
      Line3DBox[{1078, 1355, 1171, 1349, 1348, 1347, 1346, 1345, 1343, 1063, 
       1054, 1275, 1274, 1273, 1047, 1245, 1148, 1238, 1236, 1031, 1137, 1208,
        1016, 1124, 1188, 997, 987, 970, 960, 942, 932, 915, 905, 888, 878, 
       860, 850, 833, 1092, 807, 272}], 
      Line3DBox[{1080, 1363, 1362, 1361, 1172, 1360, 1359, 1358, 1357, 1065, 
       1295, 1163, 1287, 1286, 1049, 1254, 1253, 1150, 1247, 1034, 1140, 1213,
        1018, 1126, 1192, 999, 993, 974, 966, 946, 938, 919, 911, 892, 884, 
       864, 856, 836, 1114}], 
      Line3DBox[{1081, 1076, 1372, 1371, 1370, 1369, 1368, 1366, 1364, 1066, 
       1061, 1306, 1305, 1303, 1050, 1263, 1154, 1257, 1255, 1035, 1142, 1220,
        1019, 1128, 1194, 1001, 995, 977, 972, 948, 944, 921, 917, 894, 890, 
       866, 862, 838, 1093, 1115}], 
      Line3DBox[{1083, 1384, 1383, 1174, 1382, 1381, 1380, 1379, 1378, 1068, 
       1327, 1168, 1317, 1316, 1052, 1268, 1156, 1266, 1265, 1037, 1143, 1225,
        1021, 1131, 1198, 1003, 1000, 979, 976, 951, 950, 869, 923, 841, 896, 
       815, 868, 789, 1117}], 
      Line3DBox[{1095, 794, 796, 820, 822, 846, 848, 874, 876, 901, 903, 928, 
       930, 956, 958, 984, 1120, 1178, 1007, 1008, 1190, 1024, 1206, 1133, 
       1202, 1204, 1041, 1039, 1241, 1242, 1243, 1056, 1289, 1159, 1296, 1297,
        1298, 1299, 1300, 1302, 1071}], 
      Line3DBox[{1101, 834, 851, 861, 879, 889, 906, 916, 933, 943, 961, 971, 
       988, 998, 1009, 1191, 1017, 1026, 1209, 1032, 1237, 1147, 1244, 1246, 
       1048, 1161, 1279, 1280, 1281, 1064, 1344, 1170, 1350, 1351, 1352, 1353,
        1354, 1356, 1079}], 
      Line3DBox[{1104, 839, 863, 867, 891, 895, 918, 922, 945, 949, 973, 978, 
       996, 1002, 1195, 1129, 1020, 1033, 1221, 1036, 1256, 1153, 1262, 1264, 
       1051, 1304, 1166, 1311, 1312, 1067, 1365, 1367, 1173, 1373, 1374, 1375,
        1376, 1377, 1082}], 
      Line3DBox[{1110, 800, 806, 826, 832, 853, 859, 881, 887, 908, 914, 935, 
       941, 963, 969, 990, 1176, 1119, 1012, 1014, 1197, 1028, 1218, 1138, 
       1214, 1216, 1044, 1249, 1151, 1260, 1261, 1059, 1319, 1321, 1164, 1328,
        1329, 1330, 1331, 1332, 1074}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{301, 1177, 290, 291, 1179, 292, 1178, 293, 1181, 294, 295, 
       1175, 1176, 289, 296, 1182, 297, 298, 1185, 303, 304, 1188, 306, 1191, 
       309, 1192, 310, 313, 1194, 1195, 314, 317, 1198, 318, 322}], 
      Line3DBox[{326, 1184, 300, 302, 1180, 305, 1190, 299, 1189, 307, 308, 
       1193, 311, 1197, 312, 1196, 315, 316, 1201, 330, 331, 1208, 338, 1209, 
       339, 1213, 346, 347, 1220, 354, 1221, 355, 1225, 362, 363}], 
      Line3DBox[{367, 1200, 323, 319, 1205, 1206, 327, 332, 1212, 335, 340, 
       1217, 1218, 343, 348, 1223, 351, 356, 1228, 370, 379, 1236, 1237, 382, 
       391, 1247, 394, 403, 1255, 1256, 406, 415, 1265, 418, 424}], 
      Line3DBox[{426, 1268, 420, 417, 1264, 1263, 408, 405, 1254, 396, 393, 
       1246, 1245, 384, 381, 1235, 372, 358, 1222, 353, 350, 1216, 1215, 345, 
       342, 1211, 337, 334, 1204, 1203, 329, 321, 1187, 325, 369}], 
      Line3DBox[{434, 1183, 364, 359, 1229, 373, 1241, 376, 1239, 385, 388, 
       1248, 1249, 397, 400, 1258, 409, 412, 1199, 421, 437, 1273, 447, 1279, 
       457, 1286, 467, 477, 1303, 1304, 487, 497, 1316, 507, 517}], 
      Line3DBox[{519, 1327, 509, 499, 1312, 489, 1306, 479, 1295, 469, 459, 
       1281, 449, 1275, 439, 1227, 423, 414, 1267, 411, 402, 1261, 399, 1251, 
       390, 1252, 387, 378, 1243, 375, 1231, 361, 1233, 366, 436}], 
      Line3DBox[{527, 1276, 427, 282, 1288, 1289, 440, 450, 1307, 460, 470, 
       1318, 1319, 480, 490, 1333, 500, 510, 1338, 520, 534, 1343, 1344, 541, 
       548, 1357, 555, 562, 1364, 1365, 569, 576, 1378, 583, 590}], 
      Line3DBox[{596, 1384, 589, 582, 1377, 575, 1372, 568, 1363, 561, 554, 
       1356, 1355, 547, 540, 1272, 526, 516, 1342, 506, 496, 1332, 486, 1326, 
       476, 1315, 466, 456, 1302, 1301, 446, 288, 1285, 433, 533}], 
      Line3DBox[{368, 324, 1186, 320, 1207, 328, 1202, 333, 336, 1210, 341, 
       1219, 344, 1214, 349, 1224, 352, 357, 371, 1234, 380, 1238, 383, 1244, 
       392, 395, 1253, 404, 1257, 407, 1262, 416, 1266, 419, 425}], 
      Line3DBox[{435, 365, 1232, 360, 1230, 374, 1242, 377, 1240, 386, 389, 
       1250, 398, 1260, 401, 1259, 410, 413, 422, 1226, 438, 1274, 448, 1280, 
       458, 1287, 468, 478, 1305, 488, 1311, 498, 1317, 508, 518}], 
      Line3DBox[{528, 1277, 428, 283, 1290, 441, 1296, 451, 1308, 461, 471, 
       1320, 1321, 481, 491, 1334, 501, 511, 1339, 521, 535, 1345, 542, 1350, 
       549, 1358, 556, 563, 1366, 1367, 570, 577, 1379, 584, 591}], 
      Line3DBox[{529, 1278, 429, 284, 1291, 442, 1297, 452, 1309, 462, 472, 
       1322, 482, 1328, 492, 1335, 502, 512, 1340, 522, 536, 1346, 543, 1351, 
       550, 1359, 557, 564, 1368, 571, 1373, 578, 1380, 585, 592}], 
      Line3DBox[{530, 430, 1282, 285, 1292, 443, 1298, 453, 1310, 463, 473, 
       1323, 483, 1329, 493, 1336, 503, 513, 523, 1269, 537, 1347, 544, 1352, 
       551, 1360, 558, 565, 1369, 572, 1374, 579, 1381, 586, 593}], 
      Line3DBox[{531, 431, 1283, 286, 1293, 444, 1299, 454, 464, 1313, 474, 
       1324, 484, 1330, 494, 1337, 504, 514, 524, 1270, 538, 1348, 545, 1353, 
       552, 559, 1361, 566, 1370, 573, 1375, 580, 1382, 587, 594}], 
      Line3DBox[{532, 432, 1284, 287, 1294, 445, 1300, 455, 465, 1314, 475, 
       1325, 485, 1331, 495, 505, 1341, 515, 525, 1271, 539, 1349, 546, 1354, 
       553, 560, 1362, 567, 1371, 574, 1376, 581, 588, 1383, 595}]}, {}, {}}},
   
   VertexNormals->CompressedData["
1:eJztnHk8llvX+JFSqRRRkjJkqsyEqJ15zJQx85SpIlOmDElSIYTmQdJAhigK
1zZEIQkVSpRZ5M6QIdPv2s5z7kPv7+6tns55znle/dXney97r7X22nuvfV37
WqyWTto2FGRkZHbzycjmkZH69wnM8Tk+x+f4HJ/jc/x/cmfhs+m5i18Qf09m
bVf4bNULDD7fFq47+Rhcj5CKfNXlCR+AwcYpV8LfTv9fxY/plMn1yfoA6dtX
6JrrbeCzhEC6sikCeO3KL5MQfRUovw/cM27iCAN7ZXlYxggg7EuKScVSDGzR
Pc5THqsLMxPCxA0eE8CTm5dlQGYhsR+RihLJFTd/nAte2x136iUEOQue2xzf
4wxrVuziN8z/8/3v19x9/3qOKxBef1met14XDGgYPm3D/dCyyr/HZlsEuKBv
6nm0Vhc45LewL8Z51J1zl/rpo8C9+QZCVHXygNuMxyF7kgCKDPLcWcNOE/u5
0EV3zhDnxSQ4Kflwb29Lkaor4DJP8lrM0hzumNwhcQr3P9/+0+uV1qSDD5Oh
bRZFuvAu09K2tI8EcJNl8tmbg/cB7aLBSr5EeZgclfrM8h0BTD5ZwvgqLpvY
/kL+kP1rXxPAkGI9z44r6UQuV/lJJaKHAIxaJt12fT4CakxZ5Ai4vdf6lmuf
wu21oPde9GxBAGC+Q362s1YeaAl90YI4nxqz3jESGQgsjOkd1tTpghdp7YNp
OD/ofY/lZdwhYvsVj8tlS3H+NM1W95q/C6iQGwn2rpOHDVQBHB9wXuJTwNDe
bk+Uv3HI8MhnnL8iwYt+EV+mOe8Aa7os/J13X1x2eWqKdLyFWphzFLFtgW8Z
joTJ4frfu0jngOSr4tXJs7Isie2UbT179AvOTS6QtY1W7oPkFVOX5Ot04eqU
JPAJ59aq7DWLilwh1q+7RRnnx69JP0TxZr/y6PH9Cc7EduTMjqT14nwPCW5F
gpNqhxQ/+bFnaZTAHiJXqnBXH8H5m5NxJpeyXGCAncNCXlxPplT7bZ04ryRh
bzUJ7uuGPesdNIAV1vUK2rjf3ie/YZz4hp/v3YyriVihBn2ODkjsxuWhTW7R
JC4vetByjH+pLrH9t3teyv1Krjg8zh6zwpjIV8/n7Bn/hp6/iu9b758RULUT
Ln43MCKPz3dbmgkC8hvPzjO+JlMGkDPcMN0Y97+PRVf62C+0dzMJLjztBzUi
Nz+2SPJb8+JH+Vjdx2PXHu2AbUMXCQq4vY+dvoQgu2B4nH+juByc3BqOIV4f
ushu7C/w/49ymQWdmPAwO9E/rn7Fo8g/RkxVlyv6eYnc33i8D/FVS94cTaoX
g4FxTedM8XE03iw1heK/cWTMUQ/bAm1r1vAp4vZS936683e0lxQH034QJtpb
OErfgey9UCW393Q2GxRY7N1rgu+PSsHiQYiH3tf2j54cwVr3xdTgHD6xPHEM
8ZC03am+bguAtvqLTsSrTEWO/cp4+7N5R9SywMrXXCDjUe1z0zobkCIifRit
n0K92y7f4uICPFkDly1wP2y9rRWA7KqUPJF0yI0B3PPZ1IjiIVOhimVyhr0v
ItItUDw0Mcs/+yfFg3MNyydRaUbwwfz1qT24XRVWKtN2hfHtuiZpO45lK171
06qzgctWjh9H/gkqOuBoaNuDkVt9SbbE5UdALttMP9T8Q/2w0uLTo2H+BfB0
4eYtOuo+cEgzxKYK7S+5QWNvBSkgrbCBlwBuFyP9ZMVMu8S44o+Y63JIfd3+
PzUeoP9hLZnPw9gbsss7taI9IdvJ4B2vZ+jfR8bhh8cJUBZ5Mmvcu37j8Gt+
f4nPGzRfmgNLZ/G/2q45Psf/Sl57BMrsulVC/D36VWBRnB8BeKSVBbktaSBy
qriXgiZFPaDhK94b+22us7dCfpdJDaA1XaSoYBAARZdfyM7z7wXikpZ72M9m
guLHnz026ZyC6xcbtFq34udBM+f7dmuzwKnGWIHVrgFQIqcgS6mRAKjtcgcp
KR+Dt9gG9zpmZ2jULHzPwZsAyI2Co7a6PwUuRyKVclmdYfrQwNsOIQK46yzk
btrznKjPsuO33Owbev923FgpQ7kqqRTQp+m9VtnjCVUNbc/bGRIAL5e744bM
TEBx9ZyJjd8xeJr85Hg07p9jy3Zm+1ilgagHZWzJMZ6wJ3LF7iUEAniiLxTI
zvsQdNHaeIirOUPZw17qUy8IoP7D+XTVnfmA8wZrVthOZ0h+5sARiTwCcFuQ
wGYcWAQ27m8KVBU0h0KBBVEaVwggS/rimUL6YlDIaW5/CeeWPDfF6U4RwEsS
cUIqrkjJE4Kk8lkFKODn53ufxJiZQzrzXZVo31mb+m5NP+8Ullk4tPp2vwGk
kzSJRHlsiufupVfGRjHGTUwjXJxakKEMq59enx8fc99ZOogpJwbcU8mQgRdG
D95E+Q/9krXNg7wEjKdu7CVn9WoYnnNsAnFRbUZJ9dJWTJVfJPzwhDgAVH11
iAfHX7BUL32Bwc+r9R+vUgNO9WlbEU/J5TxSW1C/Pack1LBoGSM8FRw63U6r
YcsySQt+Yl5KI3nxE+JlCUL9aXqb4UFfbnNcHmQ/nZrmkEl+8fNiUdgVXMtz
jkML2m40ykX6pxe9II+8IQKdlyTquSjqwHvmq1UQ56SzGnyTKQzTBv0G7sWb
wIhr7l7onPjOxfHooZXC0MfDcwhxF5sv3r/y/LgjaCLQ52nHdm6ld1WWb9Wg
fVMSP9K/bjRDdoCbEgrRroq476oLuhgchJGeXPzXLi57wUn0g/bBN8NIPpHx
QswWmvnwqZcpmxmel9IHyP5Uvs0nOahTqjgf9DQ6T2hK8EM7ml2fvtWOJ8Ml
g+SkpcBYoLAJ6c8QX8eH5LuPk7We957cXuaQs0SkTwv65NXn/Tv7e4PN2bhl
NPLQ6A5r5D/pHHGBxzj0kDIHCHxP465sLwVWS3qWIP1zd6o9sXajBatbfM5J
RGhBtsu6Zcg/THceeFTdHMIC4bpjFmtt4MkIoUWj37DXYq+iCo8jJ4g6JP2y
R0Ya9FvevIPaj1H8zMR8mxWYb6K6XX1bHPrKrX6JuKD0+oH11YxAsYfjQNOQ
DvSTbpVH/U7a3/ZUdGKH5+Xtb9OtVANe6VMiSL6W0atZwWolWIRFJASZ6cNT
o7QNaH2oEa668ZhnfPtmwf4I10vm0IVmSSpaTwqKDn86KTGK9Xne69wQZgPF
uqbyRn5ivMTX8U7Uxa8EtBSeeDzrQt4L61mRnuVCOl+6npCDuFKKN+Y4N1/l
PZ03ct+SY/SsbMeuylVFoXOHLJY/zd2CXfsMS1OxA9rdTYfIzKE0zJ9Cet41
v+J94MpbrCXeJU+e1ghe3cfCjuziWxVT/OZaNya+/EZkBLsefGVVTf/vxC2p
PJ8UJ3U+4n2euapSlw16KMEvM+N/Uewd/fcMWvA6+eCbmXpSLz/ZSdViBsP9
t1L9Fc+7/lv5IbmJR0Eak1hgQL273XFreFqZ0Q7NxyzrJ7a7N5FB8+UeLMZc
VrBUTFEOPd9juBza1s9HDhUkQwo0HlnAh/IrVvzM+e6Tvve2RiYyKDGsp5aW
tA9urNbf3o+3I+7Uu2UBOwW0MJNqI0y6QP3JTS5dOH8gT6Di3UgJ+xit/Rdw
H4QJ4yt8G3F+hy5p/pMVXOBL+6DF9TAr4Ny/exLpL1DyPvjVFCs47HnDeXC+
LHjoc/AKiithUValwjeMIEp530kDeh1YmErt8CvPZQVSEQESAQOYxu1zORvc
DCBbZM8tNO+itzFyJrKNYkG3LaQ3bzWCZC+C1yC++FJrPm3xJFZ0NPuhMJkp
lDic7YPiOQyzpi681IatO/XQq+SKJsxo8+5GerbnZHgcfN6AlYiOcEnyKEDG
MNFgZJfLngy2lyVPseBaB/Vq1i2QocPi/d95H2FKo1rC2WcAD15si5z5XH0l
p8vKD5c0IQVdfvfMcbm2vz/Y6OwO2LppXc7Ud6wnpPg/5blE+oLe8es7Acy9
VlA4097sxoKC6xyaUO2h/NhM/wSeNn7+/qABNHDaeetb7ynm+Bz/K/kFp+sS
CoIU0MymOlDTxhxuMLB+Ov0+iL+ej1qdHIrHs1BK0NlAUcEVNGjddrq++UGl
AxlkjFqzi7XAHt5cExWP3nteFa+BXDRT2NvuXUqLnPZD3VUdR/tw3lmWoZOq
NIG1C6WZeoYfgKqiy3N7cH70bjjYcngMa2noKnZsc4X1YUtlOnC+O3k4PDdn
FLv54kqJqZQHPC7ftPo9eq+UPxLXGrUc6JmM+xsb2UBea/dGlNedrN+RHWI2
sX2Ulkn3mYQzPKNrcIKAzoMqd3PYhBqx5lqsvKfYHfbmPjdt/hPm3emzCTc6
bl/ZfmtsamrmOjDvYhLDufk8YP1lsaGZfHybaIocfg6tOjZSN5MvfBbC3Zgj
A0KyZW7O5F2C0oOMo0pAkI/BeiZnPxaTqbtFA7zvclkyk7M87kp/8kAblHcb
XP0znmd27Z+2F/va3hcXpu2FX9vb8pu98Gt7xyqm7YVf2/vmN3vh1/bS/2Yv
/Npext/shX+WvYnsZNSFFuYwxSJ01n40SLuneIuIGVzYoCE0M781cHR36kow
genp4pEzeYRV6MoL9MYwolm2eybPWDaRqX50Nwzdf2DHzH2hxX+TFvmwAQzR
LTg1k+8oc+rKsNWHXnHCDX/GPpL6MX4xsrfxK3ttDofeEcXtlWHRnGWvU4rH
jg7cXi5hiVn26rnaPTuD2+t2Tm6Wvf2tD/RVcHtp9Fxm2cuyqqRhbMgAvrcp
nGVvAXOnyR3c3rpSkT/F3jVRci/e/3/iuV6tRD8Sj+eh67Pj+UOkRL8kHs+M
CbPjeZ6H/IVaPJ4bPs+O51aThxIr8HjmPz87npfLlZWr4PHMetp1VjwvGLLg
LMTj+cM7wz8lnuf4HJ/jfx2/J80RMsm3ACpfDz2xQt0HXux02IPe29rXpd94
+oASNhu/kgcfvOE694LsanSupAx9dE5uHhQ72Tq296g35LeQWPAC575DU2/t
KsnhsfGyO+fYvKFfcrX6S5yfa3Qc3LKbDK46eMXoCeYF8/TCol7hPPy17PLF
ZRMYR7HP/KHdXvCymX1VLc6fXe8VSmz6gn1JdU1iH/aE9SV7qOvn1pk5Psfn
+Byf43N8js/xOT7H5/gcn+NzfI7P8Tk+x+f4HP/H8QLZukQ3AQwY63ssrM1z
hcfuhbFhJQSQ5rN26eLnFWCDxng6magTrHThd0hY9+PPgWvGKZXf6t8Fi2xr
qmsDvOHiCQHv4g///OfJ5moSAs+1y4i/nxvrTGzT/OfbteSE3GOfsXvE3411
1NZi7wmgnSNG8Ul1HGBbGUmWR7kbriBPfFA8QQByjCVGviFnwKtcmkNUO+2h
UEucxIUJ0n4oIuO7qbc1GRTe2Be2ZZstHHQMaAwcIADudv3ms7Y5oEXwjGcw
ZggpOQ/4f3hOABXlVGZ3OhKA2EXKhH0T8iDr5K4HG0cJYOuhtjzlpw8B1Xjr
tm0bNaFDRp7QRDUBuOYtk6NqzAcLHdoWmMfJw46bCfsjsknr86P1Ini6MlZu
prgH1uaV3L/TIgrIqEaBaStpeVL9RsqrdsQM5QNVavUwnwBrGBu6PycriwDq
2O+fGTOKJ/5dr4O0Rs4XAhjRp28UtMgjcm+vxbFNpQSwL1JCLUjhIcDiM668
NQyAbTLOvF4vfl0cRs134giV/6NuQ0AwvKD78de177uwxH1vqjHxd5cOrlJ0
H8DWu1bN2vIEKPJRnkqv1QUu0SOJMjiXNCUIx0uEgOMuQapidbqAEJCgeBDn
N82vjLXU3wMfpG6v6DlqDS3oXZromvF4MKvwD5I6BWryFHwT1+4CV+wyCUOT
BLBCpmUJ9eNIYGOnENYZpQTEHVMNinCe8kHXmGV5MLiauVpqolYehHWZXUL1
KB6O3rFIrDkFukWv9S+ukwcbOOabt+Lybm2sVCe0ooE1j5nmwjpRkMVFc/34
JGn/PPqq/sbFf9XfKCHBy8Ip8rfphYHG0ztMhPB+JwbWGHNP/c/6Hr/Lk+pX
cHTlYNTDC2DKxXA4xEcHFtyPef1onACeJ3buzKc/TPy7/UGmkinoflTDoZA9
spFE/lZc7PNLvP1okQVPrm68DpSCT84rn28Ka+OYL4+NEADDuceG6pRpwFY+
WnHpBn3IdVxGto9AWp+hM/OTDUszwGOZlZkHVTXhhtMZnoc6CEBeKjGuRTAY
aFurTZSrS8K6pt2HI3B9jFNSy97l3Afih0Tu7euTgXJGTlNXmwjA8bPzo/c0
2eCDR/u4ZCIHZDkTcD/nDel+NSvtjArW74O/kyE5TojuLZcWWS86sdAN2GDn
Ugg7JUHZ7omcdpwXESQ/7ngXCLJeOMi2L1QHR4Seb03FOfVuAf9uqVgQcbO4
bwT3p7mPdQkN7p8n5gbpZ+wDAKWJUs3YTlXAkpr0MQfd2+91WBRtHggmD5zN
ivHWAYy+so13cb792uHnPhOmQDCdfHFCHQekzOEUR/FfwOvELBLtB85NxlnF
Qi3Qpeql/wjnfu6fm/v4AkDsxxM0THg8XFLJWYbh/G14ScOL0GggbxuLBRSL
wpSm24yHcX0Swx+X8LKngLAkdsFq6l0wyWe3WVkfAURRJqdViviCiq0EVp86
ehje6iH3DG8nrejB6zR5d5C4kivS2HIH9GPLcmvB+Yh/5sWFUtZEv0bekj6H
7vup5osErXB0Bh8dKq+exccrnu/ACKrvwaEclLlX7QYYVx1N504ShZkf+LyC
hvF4I1EXxd3LZZTBwwYGUl88VOqtA6mcJDcO47y1SXaer6o1yN5r3nRcXRXS
aS57he71VZFop5gEj1IR8pynEE7kL9mevV2D4irDVYr61l0i5165SVr0A+n6
LSEvqFf5fDGBMr6YrD2uzzqh5kJ0D+pH68Ck3xFwZPK+QOSjjOc7XuDzEQxz
DrxM0SfGZxTdukp0r2lkjMX33TEzuDXgzGvNRepQQ55SCvUbenHNUrekTZCR
7P0zXdz/+285FaP7QvxawgwDN7YR209TXViKuDOm3ZJPqQoneJVrhfHxbc+3
XoB44cVEK9UH5pAvIdVIHo+HHfrWl1H7X9eZKSdRd+V3vl/r88Z6WTsIdDzl
FOrk4XzeEN0hNC5X54v3+/4hL2ZedBPJizeo8hICLIl61sq6JyK+sWGjfN4C
J3hIn55PAdWB2S69Gt3b3EDTUKhw0gXW5ZcGKOH8Ypl+PKoP40SiX4/zq3oj
4lyg931/CmN8vNyqP91G3yPMEyKc7QzZRtRHsNpv2j+2JOrVGNOd5a7NMoOc
qiaqRtFKkHnFiDfyz/L6vXpxFs6wcYeRiwzzLpiVxlzxEec2P1g/R8vZKKSr
2Z7I1+6KDkFxQuXztPCjqB7RP0ZZqbTo3hep+jxSBKovN4cMiHzrqerp+3I/
Wp9H+pC/DVfiH/V5Sk6uHEfz0YGuNP26zR/xea48evre3cjAmtDjufZQ90r2
DTY8roIY9loh/fs+8cYJOtnCPQIjlPKWAvD4mhO7h78RVzWk4moJ+fmsLBki
XxljP32PzlI5xizf3JzIIxWWTn83eiQmM4lPyAyefPLEXbtOFMYajq1E62pS
keXCjWJ/yPdtkmxF8pE8XZtjnPcT+UTN7WB0P/kah+pmrVe6UPm8N58Ssyxk
2/T0MbJXP8bXjjAoDkuZ9lZo4+v2iYcXq5A+L/ccMCMMKsGVZwOLUb/rujwU
ED/L5U6zeakofMDvUCWL+2Gb39EaxAevfOrO6bD5w58PEgLQ+tZIG0Id6qgN
e6XTIJJ/eq3n/M/c9/vR+jxe289MFuTtJvJlVR0iyN7snH3kO884ErmNJe2a
wW+0Q1V5ufgoz07YeWFVtl20AVxy2LFy/BvypPi8eN3JpKcmRJ4qOhHyM9+L
hT3nNiE/pgef6nLky+PxSV4tWfCf/M7iR/1w62CMWGAVM1xgGiKtgMcD82fY
jeLn0+2G1awmCnAbG1usPe7nRLVJzm/ZtVCA3kYyXRue9Fpv9yXJGEZrHN37
rfpOpPx22vujANgjA9UZNtWguknjPfFeqJ03k+xOyuEqsP9R5lbE3zKNMP/K
+lE/yiMzI3xWWGlA6UgVzzHcXr9FCTVIHxES8nwkuASJfTnvauAXNE9/58w2
GclIflvZg8sV/UuJ/Enx+qlvfc+VlJag4aupQpS/vrtF+2e+/5KbypRY4/HH
99dUg8wjqJ1dX9SuVfRPYL9zl77H0/pMLX+6LuGRAHy9bOlhRUtNOBg7+R7p
L+62REgAX69+l4/U29mK5BnFNtEen2HvfYvf7H3XT+jYKCwN9xUkdqFxp32l
cQT5+SWLTGGlkSyM8mAqR5zp42lnxI8qONh5pUvBw4cL9D3UjWDzeFszmtet
FKKjDIoS8KRf7Lp6PA9cmHpNBLUvu05eTmCpPLHfYQPRb35nzf5l6Y4ifH32
G5NmRd+LXdIwuIH6rWDgSj1AIQObr2o3IH289fgP/cx3ZG2X5ZkElnL84Qdd
uul6XM5yqeBJtAaRuy/MXvAz46jBbTzKP8P/XPq/+f9H2yHFL4PsW9F1AsT2
l9vI9qL240VLul1FNhJ59Rb5z9/qN9lBjM9TUBDe4oytM8X3uxPv7lYi+fJ7
9bTX8rbAB89i3mnjedHi+ZouaBzvZVtVyg/zwO5iITPjOg4wbzvFdL8Lmjlo
yNXEoK0ORQyKh+7G/YM/s85vUMruOtEuDF1j6SbG8fl+3WFzOmrH7nG5lD7G
AAu4Qx4p4uuY2rKmh6jfS2TjK3eoc0OZA0so0Hfc8x3DGefu1f/vPEnscJnn
4iHsvqM+Z5uoPmim5mpD66FwbEhSUfJGaJJtHOSuLgmYAhWn6wlItnTyPklg
hja0fhJ4nICtb/IaEY+4GNx3W5USJoU72Svg43Lb6lAu4pRbqDxOhmduP7vL
7DPad7YptuZ+Kw5P80c12Xxo2V4+YdeI6rkZSiZP15cwbfVm/Xh9HjAwCxPW
xvM3t9VKCYi/+5xS7OvWvr1ZJ2zSBM/feuSDRr5nftHfsmxB8VOr9W19/m48
xpL+ZJ0DF1hdxanbjo+XeEbGdN6+uHzpXo3NGwBGvu2OLT4f2zX4+5Fd8sfW
l9c5MYK3rNwrK6AW3EnmXIjmRf6VqvxDbgsAhW3iBzRPBe400H9PHnVLS0Bn
Ap+PH5t6SmfO6xsG2QPIn1r/MH/+KC++Sdulyjq4XT+20a4EWkD+bSV0aN85
9ube9ZTRT5iA0Hn/ZlF9KPxeeHoe2X1y5DV4PYIlnKG+rcxsBVswWxV0DrIf
2Ga1bZCAlRM82hzwfC94wfA1JK9R/THY0LYBu9uVUOWJj4sErz7DzHG5QcL/
1//L/M+Swdu/MX0eTFHNi2PL3g8FXLt29H3DLo4b869XqIxhEa5Jmsq4P/2a
Gqf9WbTuwcVGwWrsVZ0ttSCeb4MRMcJM/9wzZu1G+dIK2ciBmfvF//U41yvt
5x4dfo/1rIv2KcLjmdZToW1mHPa3ervY1skD6fl3Z9X/KWA8x7AT9+fts6dm
+fP5gufTdRoZ3syuy0e5UWL9LjyvUJKPj5rJI0rmCZnheQjFmc3N/81+/lH+
SGfNpuaDeUDjNYPYrcFQmHY1dn7zk/+cf7rrOOjFRG4AKqdy1ZSAfdCIUzAm
ZJgAql15eFUt88BeR/tuE0tt+DHhkeDrUtJ6FvhWu+TkPgKWA2NGFr6u8CDN
stqUaPwc8Ul3R4bMM2DNpTLoFWQDvdlS2QtW/Tp7SdVtM1/b1/n+w30wuv9e
z6blrtDVcUsbZdOP99uRpXnh0JIS4P2yra9BQBl6ThSFnAgm3Q6pOnu/yq4f
5T/aL1drYO3FwnwA7TVFuWT3Q8U3bt32DwjAO1C5cGLZI/Cu18TSR9AcnuOf
vFl87sfry3HcM2dBeSDVa28hlAf6/ysPHCumwVAeWMjGPozywE//ygMtpm7f
mVq0BYpd3c2N8h/xgPOJP3MuCFamyyuLYQHUkvdjrfC8d7HSu7ffWpfOHti4
3LR2ObhW4jqsgK+HSgXu/d/Tb1NWriTad2zbZu8736vnj3LBR5OZlKLsYPUa
Lf+AOnq4htls2m8cx5JFMgtpwUQ8PGmL76e5t27Eo/Vf6oSDGt2Bu9tVBC9u
RPmMy6nw6XyGVPun9FOCUD5DiKCrRvkM21f5DCk9mQadO9A+e/+rfVYtIFQM
+Ue//a/xz6GdhRekhchhbk/PorHlByCLQ2j5x2/0u/umpXh27SS2ptLIzWKR
KczaGOn17+jZ3du7VAmPn0vbZ+cnpOSNdto8Rn7L057tt48Wh3iR3850/jV+
I8XfLrZw0H44hT1UTjZsTNoLX9mGcw3M0Kcl/2HiHvz88pHlxKxzXKtH26ia
pSYwuHjqu/xgGj2V443Hm3W34XfFW2gV+1KUb9h+lW9I1rPSovxESnF2fvK9
9v5T+HLu1Pa7UgJQzIfPdcNxQ1jVC6yQ3zyCjpO38ZLBxaqr9DdvE4EU9ze0
I/8cNOMsU1/xR736TtWn0+dNLvENtsxXRWH/AaXKPSe1oMnS5ynIbx+N37ba
WwnAurJod2MefsgTu/gdkj/fz7Gmur4Ne6PyyNkcX1eL13FM+783nzmynVEE
ph/jsjqeZwifnOfV/NY4aibEs1ELfMSofMSaevn2wqn63FgUVz4afPNO3F8I
MWo6xhtvdYAfmK/2rXEU5DjDfjR2HcjoXa8olysDB43ipveXcv0WvvtNo9tP
XDK3fDXPAiZklXt963lj/nx5Top9VGBIULgB1atkD9k0XW+z4KF21c2a4e0C
LOtHtifLwfGV82N+Jr/d762T7Pt2ZPs+007RlGhNmGK67OOfEZ//7nOSeY9r
Dz+/ygmOZ7OZuVzRBio+iy9+S88I7hyu9DYy0EZZQofegzANwOlz3Mbj2a62
y4YwJ9mqC2jfeTbqNL3vrG6mmG9s/AHrl5AuR+fobRvGp+XPLz+0nl2dDdCv
prVes28FrCU7Pf1c99F+Ph//DHrA0Z99NylSFyb0EzZP13PTjFpoMrYQ6HWx
KpnkG8KONdJ2P/Ne6YT6wPR+t3vngun9juNf+93HRL+jiL9eHjp9rgf/4k8P
fzYRqaIAnwec+Q/i/CwXxXetVyOmsmRK+Lh0a84el5CQKxpone9/N3udP7WI
uQ+N456vxtFqs6sakr/5frZ8Di2hGsmbfrWPGNAEbUHyUX/R/vuf4gyt/Fuv
FH7Byh53njCvtIABF6io0XxP9k3aVFU6jnFmULLr7DWHD/w+PJl+X3adkZqi
ahKzccqxjaA1hdV+9geRfzw5bqgl3iaHhZa7YCLmDMt7/b3Qe/lHoYXqIIUC
LjzV2c6y1BmKshq0Ef6D/vStYi7XSa7AHnfMe9XAoAcb6GlWo3lRWdfabaHo
jeUanlqVeVwT3tIy7Z1+n3hkfEF6Vi/mtnxJtPYDHUjN5aGN+A6MunZjYAd2
ijUleNdudWjql8A4HT/7uJ0TVN5he5mEo8hlZGFqqNy1v/Jc75WkDlDcnm2d
HbfM3ColKM6Lv4rzlPBhQSQf1zFbnlQelZfrOP0caZHs9+VpfzfO/ZzjA/LD
5a/WhxpflW7EY//Ln3f9p7gqMyFDMG0eNFcPlb6YtR+O+9hLo+ecSvRKolNb
KSAhRjBumLAPMmbdmUT8aoRG3dNiMujpwrRFm3sflCSny+r/heNSdnX5EuXi
CUwt/zxNu7AjdNWqdkL3QwzK3GuGo0awbr06+8SdtvCsRlIQuv/jOBIpe918
ANPIKMu3sbWCzCENzGhfVrGjGYw37sEsz1nqKlGYwVXJNtt/Zr8wuPuFV1dx
DPP30u+lCzeAZFWNCWh/TP1kjY2zV2Nx6/X8jXYKwPZQy+nnutUPvTnm0Q9h
vQPxDZEFmtC9c23H9H2YkfKotOZP2LkVzWfXfZCGMfF3U5H8kmRWrhzzDswu
JiOn5BgtfP/p8iTiTKtS6XlG6jGxEjqH1xFbgVxZ6/Q9H5ehAbO9OZmYyMsk
oYF3aoBhUyD/98wL3sAmMeEkNrC1K2xWXWW5LZ00nzgXwae1FrPuFXxxkT2c
tJ0fei6Bs+qiJ4ysiq1glIJpR68/m8nTpbCHbCpycJEC/dmZPO8cXUs8vRrg
vfJ860wutVzDzzREBfqrLdP8K+d1nCWdkom1Jjw9qjZrnaR8pbNu7DC+Ryar
Bs3kQQpY65mrepDiRs3UzLzIhO7gmS14nubS1fpTedrv/5vMX8aD6vIdOzG7
Lt+KyTUpU0MGUO7G7Lp8Wcu28afb6sMNq/69OnVH1CkS+28bQ9Xz3GUz5wVP
BFeckPkOeNji86z1duF6Wq4EJiNYJMPNOrPfTjDyYGPQVvgwcMWLmfJhg2eu
6540hG+3qbjOlKdt6WOlmtCHcSfD82fyU5MHL2Tv04MEvs8LZ42L0VF6h0Yd
2LHBb9a5SW+JZxiTxi4YsJ/nxPfsd27GMsvR+drsq/N1qf+W9Yhv+YofOX+E
C/H1X/Ht7rw8iK/5iperC25AnGvufcEcn+Nz/L+c/z+ZM0jn
    "]],
  Axes->True,
  AxesLabel->{
    FormBox["c", TraditionalForm], 
    FormBox["\[Gamma]", TraditionalForm], 
    FormBox["Efficiency", TraditionalForm]},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotLabel->FormBox[
   "\"SVM Linear Hard c-\[Gamma]-Efficiency\"", TraditionalForm],
  PlotRange->{{0.001, 100.}, {1., 6.}, {0.982, 0.991}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.670375935776239*^9, 3.67067764498669*^9, 3.670931215329771*^9, 
   3.670931273998657*^9, 3.670931359086358*^9, 3.6709314461428013`*^9, {
   3.67093153199514*^9, 3.670931579488904*^9}, 3.6709317267899227`*^9, 
   3.6709318557661467`*^9, 3.670932002698916*^9, 3.6709320433890257`*^9, {
   3.670932081622251*^9, 3.67093209248002*^9}, 3.670932139425377*^9, 
   3.6709321842883377`*^9, 3.670932321601253*^9, {3.670932486496838*^9, 
   3.670932552789813*^9}, 3.670932672186058*^9, 3.670932764947885*^9, {
   3.670933197725175*^9, 3.6709332252440434`*^9}, {3.670933695772834*^9, 
   3.670933705749578*^9}, 3.67093937948001*^9, 3.670939417182568*^9, 
   3.6709397013290977`*^9, {3.670939906950098*^9, 3.6709399221756077`*^9}, 
   3.6715409777913427`*^9, 3.671541966397128*^9, 3.6715420542690973`*^9, 
   3.6725702866804247`*^9, 3.672571592910342*^9, 3.6726438958410683`*^9, 
   3.672644192459403*^9, 3.672644357796599*^9}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJztfGdck0n0bgxIgkQISYixYce1oKgrlgVnrICionR7BSuKBRQVsbtgWbGi
KLbVxa5YsKCxKxZU7F3XrkRUcDGi3NkNb5nzZu7/0/1wf/f6ZX8+nj1zznOe
mXfmfTOnxqAxPYfKZTLZuLIymQ35b3H6pxtdBwUg2X9/8lHfgl3HErblIRov
YuAybB23ZeBKBq5i4GoGrmHgOgauZ+AGHtfNamLeXLOvhAcaL2LgMoYfWwau
ZOAqBq5m4BoGrmPgegYu8BCQ1uzFudfDJTzQeBEDlzH82DJwJQNXMXA1A9cw
cB0D1zNwgQc3p9oJS5WxEh5ovIiByxh+bBm4koGrGLiagWsYuI6B6xm4wMMU
3S6fZ3GzJTzQeBEDlzH82DJwJQNXMXA1A9cwcB0D1zNwgYcPn/pV2do8WcID
jRcxcBnDjy0DVzJwFQNXM3ANA9cxcD0DF3hIbr++20OP9TwPN91+f3blgAng
Ag80LmP4sWXgSgauYuBqBq5h4DoGrmfgAg/5GvcBmdk7eB5i0o6nfnthAngR
+j4ztB++BXEZDuvy4fWbGIjbMvwrGbiKgasZuIaB6xi4noELPKxO+ffPYQkP
NC7wQOMyHNA+v9q8sxC3xZyuaFyJ672usUm3BeIqPH3rkSG9V0BcjZt+rDoy
JhTiGpzXZlqrLxdh/DpGXnoGLvAwbFfM3+rT53geuLxovIifLzQu4/OicVsG
rmTgKgauZuAaBq5j4HoGbuDxmCDfQVrvm5L1gcaLkHV7GcOPoAcaVzJwFcOP
mmGvYeA6Bq5n4AYev92gilfGz2c8D5w+aVzggcYFHmjcloErGeOqGLiagWsY
uI6B6xm4gZ/XXP7cf7n4abyI54fGZdgmKdBt41yI2zJwJQMX1gcaVzNwDQMX
5gWN6xn5CjyU6RVU5db4Yv7fuThpvIiBCzzQuC0DV/Lx07iKgQvrA40LeqBx
HSMvPcOPsD4sG36/dZi/PYY80HgRethoTnrjSIgLPNC4LQMXeKBxFcNemBc0
rmHEr8Pc847G9QzcgLnn4CXPWg4D4vUSHmi8iIHL+Lxo3JbfV9C4koGr+DrS
uJqPn8Y1DHsdw16P135fUHGU7UeAG3h7y99r8zzQ847DBR5oXMY/32ncloEr
wfzlcBWYvxyu5utF4xoGrmPgwjpJ4wa+jm0z9zcZeqEJz8PBGwcbZvlAXJgX
NC7DDku7m2xaQtwWW7dXMsYV5gWNq3l+aFyYFzSuY+B6xrjC+vDNZolfVBri
eVgc82Z3518gXsTzQ+OCHmhcmBc0LjwvaFzFsFcz7DUMXMfnS+N6Rr4G3k+8
7YfyRVX9eR64vGi8CA2vVKnZXSXEZfil54zoJQaICzzQuJLXCY2rGPZqhr2G
Ya9j4HqGHwOPW/4ezvPA6ZzGi9Cq+BexO+7lAVyYFzRuy8CVmNMVjasY9mqG
vYaB68C6xOF6Bm7g8REvWr/p+yoNaeYYszd0FN4/XJ16c8+0qHSUrqhJ/nzm
8efzy2NZZBq/34Dn2TNL/m656O9PPH44q338xEXpkvP7z+uqKHXFHWhyn683
L44V8OAvo0/ZdBfOs/w56NWblw1idqC9w3YeuF1JJjk/Pjg7ed3ryXIeT1jx
0Ovlnb2o34Mz3T6cEXA3c1BE0+97JefiY4cSd6ShQyi09tCnb28L+Nhd+w59
6X1Icl62ezAzLyonE61MbVLF3VfAVyxd+Lr1g0zJOdpLGzaqtfthNK7V0N17
3ETvpetum9fDTzhXcrjn04anJ4QeRr43TGlXHQR8/9nu+0IXCudNDg8bvK7O
YYKXBJ3IcpVrJOfKbd99k2v7CXijOZeHnXU+ifotru2XXFsrwTldcXhU78th
STZn0NArykveC6U4pze+Xndzz00MPIt0Ns/bXfGT4pwO/yddsfTJ0htLt/9f
h/9v6xDqjaXP5QbbEMfqwnNwS2ZkRi55Drbod8RPhbvzuGekh3cFuQl96JHp
WtajB4+fc/l2rtf3PJQ1YanB1tiTx0POnAxYV5CHFq2M0tgEBPH4q3GJ95/l
5aH+xL38aTCPx9YIHFLndR7yeFTbrszYUB5XXKtsGvY0D9Xrs/hUoawirl5+
qLf7aAVWBzVMjRhn4vG2lbLjet3/imrMbub/93wB5/xw+wHa/icauOt+m0rL
oL0M52e2vhKy0ATGtZGMy+nZOq7EF/GC8B3ToB8HrPT3uGl7EtoL++fUM9X3
jJPV4+OZ8rb93N5dBXyuvf38N6ML0YrpaX1GScbN53mg/RQh/zmT286bCuNx
wo3++hkQ+xT6UeOwLY9jMp/DcX+g/f8kPprVR7D/Y+6+dSsOOuO4ttc6Xjgv
2J+ebduh4KBcEj/HG/TDzS/OD+1fK4nH4t8OH3sw+t7jJdC/Em99vN9DsQH6
1/F+aP8uuIVD3ta/fkD/5XCF5ukX+h2E/lX47xZeIT32Qv96nK917+P2Dfqv
gNW7XRt4Pjah5LypqLmxKV8Xj5k/lhUPMaHbk966NZG14nF17nvDxRATqkSm
qTsW9u35te6nLveF4xpw1r5+TzLuCf671y6OODn2HzT71sSEi4ME/48qFse8
yf2C2sf2nD+ok+B/hFPxXKcW5BxdsfEf3+vBfPPR43UpvximQf8lKHXE0klV
W0H/35Fr51TPFhj6L0Lr6/1ZEOADeXbEqjGeNX8cheOq8eS4d++bXoO8yfAh
dEfeojXkTYbvmt7Ej/CFvMlw0VqzeW2I4OcXTXzGgEwb3CW0bTV9hODnoyr+
t4K3ZXB2bMuBxf0EPwcU8afnVZZh31WNNz0PFeIc1E5eM663Mx8nHb8Gn5qg
VhjOwfht8T82F5v5DYPx2+IVudc/DRoD47fFv266v3tqDIxfgXPNTQN+WQbj
L4v3dalxs2AOjN8WJ6c6hZ2MhfFr+Tjp+HWM+JV4yI2Y+22Xw/iV+Kw8qsov
i2D8Sly32dB+jvNg/A78eY2O357H6fiF8yYdvwvu6VpljHEPjF+Pc1x2F+/b
DuNX4XEZTqnz58D4VTg/1+5xVDyMX4WjCn5UCya87fZ5FqcztuPnIx7idOsQ
Odf0WEgeeE878nit7bfUJ8i5+8uNroPUMj8et/u8xv+cAcZfgT/n0vEbcJk9
de8MWyOMe+r6afvn+q+o+rb1M+O7COPOL9Nw2RXHApSv3Z0xtbswbrcmy1wP
231GJ6ZlvYgLhDzko3JujQ2JHSEP+ehtTNXUkBaQh3x08bxD9Vr1YB2dcKRm
7SiFEdaxPN58c+zBuamwjir8fEUHmd1kmNdP1DN9QdbuDjCvYhQxt8OFTA+Y
lxlNHlx842QVWBcZPpYQo432hXWR4bTzXt0ntYR1keGZjjZJ03+B/Khx0dun
X6ufhPyo8aGkrJ+HN0N+1DjWfbVd4HzBj87+RLjHQ2c8rfXqRc82CX5i7U5U
NReQfWbSfM2u5YKfBzYnnp0ur8beD2NWxM0T8nr25plttIMN3lon+sWAAUJe
Z2T67AiFHBcvrnR8pK+Q11ZD58V9bMrgHubTK2M8ID/CewyaHwGn+RFwmh+N
JC8Oh3lxOJcXzY+WwY/Uj4UfDYMfBW66ffi1pzMhP3Z4fMveac/jIT9l8f6z
/lEv4iA/Snwhd3pctemQHyVu9c8gQ61YyI8Sb6/U6aDbGMiPDq9yemz4vhny
o8MVPG71erYW8qPDywMup55fAflx4dcHmh/h/RjNj4DT/Dhg03h5ct3xkJ9y
2LVcwYB6YyA/9rj7+peNG4yE/KgY+lEx9KNi6EeP1dN/miashPzo8ZJ+ip2L
1kF+9FjbRj3yrz8hPxWE73oUP8J7QpofAaf5cWLox5Ghn/K8fui8DIx5YWDM
CwOvZ+5ctuV9vZ1eJf+gelMv73soOpfdSfDtco6cd5Iv2NRLcRLOZfb6yLfd
Dxai77rf0oL1Jv5c1nr7nHn3lhSgoQPHuWiqmvhz2Ui8uc7g0V9Qzs70pKu1
TPy5LPXWqdMffD+jluanZZLqm/hz2dURzwbG1P6ENnYyTPJpAvWQj34tu2Xv
omZQD/koucv1Dr8jqId8lL+k+M6sLtCPmjHv1Ix5p+bnHc1bCVq4/010kgHy
9hMVF66r94eEtx9oZIvgZ8vsIG/F6P4kh5SUH3mAt+/I74jlnEvzZkaHv8cq
N73PA7x9Q794NzJufZ7H5xtdMHZm5hxnSb6DZA5DM2ycJfkGqf702TVDmq+F
Bxl2ntQ1epkBnt9lODzUUnf6/C7DGzxXHl5cwwTO7zL81uVY3/JuJnB+l+Gm
hRY90Od3GY67WXaLsrEJnN9l+HRG/c5zm8H6aiTzi8Ph/OJwbn5x+eYWLgtZ
V2KDZRcD3zyPEfId9V9dbPCYcuXWvx4t5Fs2KaOg7gM5ftzFGPphiJDvuv/q
JcddF8Y4feot5OtZ/Uby3oNl8LGrDc8X9hTyzfmvjmVwQ/Xf8WY/Id/IA/ke
vyXL8JoeKZ4l2ATqq8Ud8l9l3l0E66vFB7TZIQ/nwvpqcN0WOwuexMP62kry
5XCYL4fDfDkc5svhMF8Oh/lyOMzXgusk+XI4zJfDYb6W+ipwxSs36jWIhPVV
4PQpazKiBsD62uFW9Yd47wuH9bXDF+9a8qLrWxaHzysMaOUP61sWv2t+/P7U
jrC+tjjuxdwhxjawvi64asCQDddWw/q64GuyVo63F8H66vCsveWnPJgJ66vE
e/Iy0xtGwvoq8TDHZWV3D4L1VeLqjccMbNIP1leJ73bvnJURDuurxIvH1qno
GQzrq8Q+S2QTMwNgfZX4594H11r7w/rqccakuC5OK2F99XjFCTxPPw/WV48n
2ylOV42F9XXAq962GvZCMn8dcOO18s91x8L6lsPnAi5NGTkc1rcc7mNr4Yeu
rz3+fKjP4s+9YX3t8e8jLTzQ9VXiatVMGyd3g/WtwFifKzDWZz1jfVYx5q+K
MX9VjPmrYsxfFWP+qhjzV8WYvwbG89fAeP4aJPla6uvEmL9OjPnryJi/joz5
W54xf8sz5q+Kn790XfKR3a4eI8eHwrrko+OlfNJ1yUcxHxW1JnWDdclH7qU8
03XJRy88LPHQdclHqaX803XJR4HjJiTP8IJxqhnrg5qxPqgZ64OasT6oGeuD
mrE+qPn1gYvzXVznBjklzpJ5bamXs2Rezzwbbl462lkyry37JWfJvK6kHn4x
7IFaMq8t9VVL5nVGr0mrqvqp+XlN86mRxMnhME4Oh3FyOIyTw2GcHA7j5HAY
p4VPLYNPLYNPLYNPLYNPaZwWPqVxWviUxmmJX4cblqv+5qWETx1+Uf97+2Hj
IJ86nNrldtq70ZBPHQ4atff7qOGQTx12WLgg9OMQyKcOn94ZmRE9APKpw3FX
2zkV9IZ8uuAOjmn1GkVCPslzPNXin+bTBX+tFzdnzyDIpwvOOWQZl+ZTh//q
GPysaT/Ipw7PyLXEQ/Opw+EDPbwPhEM+9ZI4ORzGyeEwTg6HcXI4jJPDYZwc
DuO08FmBwWcFBp8VGHxWYPApjdPCpzROC5/SOC3xGxh8Ghh8Ghh8Ghh8Ghh8
Ghh8Gvg4bxru1Zlzclrpd9tC/rv8sQ+zX7rGDS3FzTz+R5/11wtzgkrxEh6v
2/r2qxjVwFJc+P5O3UMxsu7xFTLuJ5oZuDCuXaeHLz7vibTgCcJ3/DpO3a+t
9Q4vtVcwxpVbxxNY9x8FP1cXDPRY/LnUf4Lwvb7an/cOhZl7lObrzPBvz8Ad
GTjjHqXIP3Xvicmz1jqOGfcuE1wY4wr+h65JnxFVP1gSP40L+VL3FkX2bgt+
9+69dajEfv6KJRGTT4VI4qf9MO5XivjZf/NUrePXB0nG/TTPz2V1Ym8JD+3W
n0wdnBwo4YG+dynE8/j1qOx6mkhJPHNaF2nbFfWXxEP5wYz7nqJxty+Z3GV2
rzAJ/9FL3V91bj9YMo86Td8wNXLWBMk8atz44OvPo0ZJ5hF9j9LMwFn2wjyK
/Og6+bef0RKcsk9g3SdVMOwFPXieHxT/4+xEiR+nEy3fu36OkvgZ7bFlzwKv
IZJ60f4dGTjjvqqojqEtnsZdx+Mlca5sHxBaNHWYdH5NerLiY8RASX1pHoQ4
Y7f2jf3z6FhJnFTdjYz7sJhxf1Y0bs6gI/+4PRoj0Q99n9TMwAU9tHU+P/Q3
75kS+wEah0GtOk2W2NN+BJ1QuhXxT+lWxD/lJ4F1P1fQg2MVo6JByXTJuLQf
e4aetQx7oS6Pk4+EOPaZJYlntcvn9k9mTZHEQ/th3AsW5UvpX1RfSv+i+tI8
CPFvXpw7YZjrDEm+1HMEM+7bsvRjZNxHxoz7yyI/beS6muUmJkp0SN/nZeFm
Bi7oTVbkFZ/S4g+JfYTjtZemSXMl9tS+SFRf2r+cwQ/rfrRQ9/rFzY0Vxi+Q
+KHmkUgP1DxiPfdZdRTF/7Wga9f1nkskcfZUfp5VHDP/f5gvWoZ/xj1uVpwi
Py5fQ/vViV4kiZ+aRyL9UPNIpB+qXkbG/V8j6360oCtKhyLeaHtBPzQu6Od2
DaX3/tupEvultaf41/u+VGJP+xH0QOlWxDOlWxHPlJ8E1v10ob7zj+U83N0l
5X+/bxfVhdatlmEv8DYtqPZoz9R1knhah66cut24XBIP7YdxL16UL6VnkU4o
PYt0QvMgxN/443tVU+c1knwpe8y4dy/yT+nZyLh/LcKf/Z6xw33uSglv9L11
s+T32FA/NC7UkdKhiE9KhyI+KT8JrHv9Coa9PUNXWoa9kK/t5O+PprbYLhl3
RKxNYGDopv9hXEbfAFFelA5FdaR0KKojna8Qv3vHVffKOv8lyZeyx4y+BCL/
lN6MjPvpInzO7q0tvqzax69X6e7Hb9V5APsPCHiwc/Nbi95tlvBM25uR5gCB
s6CfEuS/7/DtjJkmlHyrJUq8fFBiX3R74ZHzK3dL7Gk/cnzq8Z67OdfzkOHJ
xd5tN6dL6hX/6Pq1Cmc2SOpF+Ulg9VUQ9PC7890XcSUZ/LjH7+8rcP0G/Qj1
ars9IjR72hZJfWl7gbcVLYZ/cG6Wycczb8B+v9V6kG8Co2+DKC9K5yKdUDoX
6YTOlxEnZvR/EPmhdCvSFdUHwCj8LiVyhn+w2+9GXleVL+W/6pUD+zAIeqP0
KeKNtjcjdUaWY8/r0E8J6tggyyf+vAmV8bz8aHrHM7z9l7yaTY4dNiGZpkNa
/QrHeHtj/1pFi09DP3LM6ZPSragulG5FdaH8kPo+aXOMCBr6V2DdoaOf5dsI
nlXjrun8SX7cn3OD233aCeyJ3vwaH23QeL0Jzaf0qWWM64i778/0VY0xoebj
NgzwnX2Wj4fv25Bo2nx02XE+Hqv9NEi+NU4fWOfyK8BJvl+D9qZtegD0LNJP
QtfYxJFN90r0Q/MgxH/129deh+xOS/Kl7DGjL4fI/8LxymR5xAGJPqn+DEbh
Hm6vUU8rHI68wuvQel+OQjTz+sewjKNAz4TnxqOqGT9NgPZm9Dbk45IneyFe
glxzTNkOf5mQm0udLR52N3h7jv/MvJS0L98u8PbW+2zIhfv1Yp2TelXKstSd
0jmpV0Hu3ojYl2CeJrD6igh62Lbd5uaadTmScWk/9gzckcev7ve03VgjVzIv
7N2zet/2uCSZF7QfRt8SkheHDxfrWaQHOi8tbz9totb3xLtrfPwFUTVHvNkN
/GNG/xPin8OviHUr0hvVB4PgnH62Bc9MbFrnPq8rTud0/5BCZJ82v5J5O9Cn
iE/a3szooyLoZ0yDfvf+snsqsX8YZHe2avPbEnvaj7AuUboldeF0TumW1IXT
OeUngdW/RcHjziE4z6vqQ8m4tB+hXrQ+tQx7R95+U4Oscrvkz/h4uDg7BJ+p
+4v7XT4eLi/aD6NvDMmXwymdE/1Y1TnRD6dzmgct72dSyM/uPi6PJflS9pjR
l4b453BK50SHnB/LePk8zt3bilizpKwHes3r0HqfGUG3lJ4Jz9b7wJgZfgS9
fS2nyNkx/QNvPyI2iGyMTKj3llU3Hx7/m7f/tSRoStXN0I+wLlE6F9WL0rmo
XpQfkR5o/4Ie3rs4rgsvecOPqz9spZ8PqZd1PWsZ4wq8TZkzK/I2MvHxTGtz
ZO28BSb0tLrLaLvpL/l4np6w6If2w+jnI8qX0r9IP5T+RfqheRDiH/tHoues
E+/4fKP/nLeg5ypgjxn9gkT+KZ2LnsvGDWnvxmwv4PV2rTgwb+IfsK9OIerf
v8ZDnAp0S/jk5hdtb0YD/iUyGeIlKDmqereU+SY0oz269STkG2/P3dPBSYmb
4hZ94u2t9xeS8/d6KD2TugT5mGxargN6JnXhdEX5SWD1NVIIuHv9Re9afZWM
S/uxx/uaW/RD61aL61vrX0R4435vf/LqxUm9Xpol8SToXXwKq3yRxkP5YfRT
IvlyOKVzohNu3lE6Jzqxyg+Jn+MT/9c/5B8+X6vjEv+79lnRA/HfaYdln0/p
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
   "], {{
     {RGBColor[0, 1, 0], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtl3m4j2Uax9/nvM9vMJki0xRdU+lCyqiZMZnSoFI01BwpKksk53SIw7Ed
RiFL9n3f5dgpW9YoeylbkS1lK02JrqlMmqHm873u+4/7+nyf+73f5332537L
t+7YKD8rSZLckCQpvAAPwc/hIByvogfD0dgr6D5wYkySL3heLZMkN1POwX8v
/BJ7HX0efo3NRR+B7YhfiP4MXQprjq7g+mrqeZbnKayDP8Ji+K+CLfCPQg/D
P0VtwXqi74a9efYsMe/Cf2JPorfDyTwbQsxYuAQbjp4KT2Nz0B+mFv8E8Tvh
KcpL8Z+DxfBlo4tDDcYz4Eb4sr6HLoSL1X/0m/AatRFdCpZWP9DXwuo864h+
PLX+qF8ZWMj3GsDNsDi2Dv8vxJTDmvq3umHd0c/DKqnVXxFOJ748E1WfMX+N
8kj8L8ITWGXqnMfzW9DN8N+ktlHegM6CT/P8ncT63JVnfdG94SGfo6Pehjbo
v8KMt+f38FdYQ80LfBebhF4N92Gz0LvgTuw19H64ERvlbfsYm43+AL6tPqDf
8Zgp6E2qg/bVol/P0a/1Xqfie+Hfiv4NXEV5PPp1OI3y1cTXJb47uh592gBn
YLfhb4x/FHoR/vXwHvim+hXMvxgehP2wTuhF8Ad4ipif4RTKlzVn1FND6xx/
bdjNxzN1/SAx66K1vzbffYH44ejp+H+K9m4d/Ln45+Hbz7sLYX/83bXH4IvY
avz/o19d0ZvRV8GCaPNVQm30dZLAO6nvc63/LIuvTT1r4ANwGf5aMC9af3/S
2KOzie1EG9qj1+C/on2M3oEuA9fzzp7ExkvragA6G/bhWRt8H8E5lMfgL9Je
oNwC/y7YUmOc2D58GHsP/Rj8U2p74TbYg7hH8W2BL2HNFRfNr9hNsDX8gPic
YN8V90db87fS/oYZm99K6Gx0Pnqt5ov6O6A3aX9F21/61sZoMdXRb8Ce2BZi
SkZrv9qwB/bFtuMvHW3er+Cv5+vqEfRSOJNvDCVmfGpa63CZr+f56E/gPVhL
9O3wPqyT9hpswPvlqCcHvqKxwN8W1sXy0A/A3/G8Ffp6OJq4FbA4bShBXz/U
+UC5kp+Z5VUn1gXdwnVbdB14I3EdtGeDtUf+h2B/zSW6Z2rnUo7v8c1+jq3w
mCHex1aaY3R3nRNYP/QA+CD2AromfBjrjG4K/4blomt4TAH6KVhf6xtdX2vB
z7Tc1PqS6/W0wQrRebCR7glvcw9sEHokfAkbjB6jb6qM7qQzPLX7qF9q99Ro
X5/5OkPRLWF7bKDfXwWp3WVDPUZj0ktnm+pCd4C1vA31vP5Cb3M7nzvdO829
7095v9p7H3NSG//HPEbt7OJ9edm1+tjV29bEx+pJjav7W7ju7fN1h4/5/bCx
zkR0R587nat74DZsAfpTWDu1tVQVTsLGoZfCET6ewzTPvp4nwgmp3Y8zUrtb
+/ven+DzrrEd5+OvuVie2vm/Dr7h9S/ymLGudW/qDg2wTLB98dtgZ8g0P/+H
p3aezINz9T1fh9O9DQPdP8zbqW/NQO/w9vf1uRvHGtur+w4uSO1+2eLtHOH9
Gqiznu+fgNPcPwsu9DbPhzN59mf2W9OM3VmL8Z+FB1K7p95K7W6a4Hu/vc+F
1sxKvY9+L7X7dKrfa++nlvOchGuwyegNvpby0WXhdu/XVl+HOjeUMxzDVqC/
h2tTu+tnw4+wIvRhuNvrXOfxlehjUTS/8pyD8GnfC63hXmwR+gxsS1xFzQn8
jvJGXS/oZ1Lbs4/A51I7Z5rB46nd73tcL0H/K7W8TrnH3Gj9nelzNFLzgf9y
tLsgz8+oYZoD/JdgydRyFZ1pg/G9r3kPdlb/A76l88PvFN3TJYLlIb+G/+Gd
VeiLqZ3hyl33wlbB7tBmsJtyQ/Tf4Xi/X8bAKsQdQ/8RtqO8G90D1sWWJ3av
z8EOo5foXeIOwMqsjUHoQegLcESwtTcaDolW9zmtI7hS9cMBlHvBo7C38o7E
3q8SbC7uCJaHFMBj0cZnKvo75TLB9rXmVfn2WViDNkxCn9QZDjtqnND5we76
hqzhAmKa+njqnr7O7xfdM2r/q/B0tLxR7fxBa5Zy4N17M5Y3ajz3wT7BcjDl
K5MpfwNvJ+bOYGugKvxLsPy5WrC1pH4vJvZCajnJv3W2UB6A/8to+7E/+iyc
FOz+HRksP1EdS5TvKO/A3xl+4XN9Cf6Y2v/FN/ArnQvob+Fl7D5i10Zr5zn0
rRn7HynyvTAG/0b8ZTJWp8Z+ge599TWxvE25xN1wPrw/WL6kHEvfVS6xwvOx
Gppjz9P03VXR5voA8RWV9wXLSer5WlWdyzVf0fLQZa7fJqYYrBmsL6pX/zXb
0KXg4Ghj8xXsHC3XClq/+D5G7w82zvMSy+G1Vg9qfdHHLtHywdVwKDYOfT7a
XCfM9V0Zy0UL8R+HjfAd51EDeB3lXejro43bJmLKEf8j/CSxtaJ1+LVyjYzt
qfPoCugJ6KPosuilcKfOWDgW/1Z4M/6yvP8p/tXa08HGQf9FOs+3aa8TM9v3
5oxg/wJNtBZhBWwHOpOxc0Y59c/wFuo8k9g/QFaW7d9Lwc72apSbeX6u8+f7
aHt2rOYHFgXLh7X38oLlis8HW1fKz/8LK1PH0cT+wSYG+0eeBUcoR4QXo/Vx
C/qGjPn1/Ap8KMvGrSasnmXnz11ZNi+ax8qwOOXT6GthBd77LLHxUq6u/X1A
50OwtaH7rD5xZ3Vf+Hz1xHdG+SblI/hLZtn/hfbowmj/mxrDbdHm6Ai6NO3c
F6xfmjOtt1Hw22j52w3oJtHyWOU5j/pe1v49qTUTbJ00VjuD/Udon5/yPXUY
ZgfL1XWm/yHY3aq7Zzd2An0o2H+Bzuzd0XLgleiSGZtr9aUq3Onnp/bwxWD/
U9rn+h+8hr7+Am8KtgeXwf8DFU4yXQ==
          "]], Polygon3DBox[CompressedData["
1:eJw1mnngl1MWxt/3e99vWUKyTfuior0o2lclkqWFJJUlKi2i7GUZIruShrEn
WSJJEkIqWSIkEg1S2RmMLczM8+k8/nh+v3Pu9t713HOe+6178vh+40pZlt2i
P4X+L8yz7HFhb+n7CEeWs6yB/tcX+ko+KmXZ31XueuEeyW2E87JImyp5FzXy
ouSL1ca/JFdUncckzxcqSN5PaeuUf7X0byUfpbSGpfgG3+ot/Fd5n6hMO+Uv
UpuzJF8rPCz5GOU3VtlGwtGSb1XaNfRfeEjy3qrzsuQz1MZ7ko9QmX1Vtp7Q
R3JTpa1X/jPKXye5hvC69EulbyxijIyVOtS9Sm1eofwbhSslz04h/1O4V/LO
qvOC5OGq/1YR/d9BdSsKh0ruJzQpRZ/p+02qc5XKzxBmST4jxVzeKjwreavw
kOSmau8BtVdf+hDppwuNJTdQ2lrJtZRfRe2VhZWSVwiF5EJljlb+jtKPVNna
whvSX5dembmV/oDkN5VWT/Ivwi3SZwo/S/6PcIfk1cqvLrlrim+fJfSU3Ehp
72ZRh7rNlDZc+l7SB0qvI6yR/on0uvreQdI/lv6x9GbS6xbx7TnSt0nOlVZb
c1OLTSi5JNQpRRp5jf29b1W+i/SW0jdIP0j5Q6W3kP6+9P2lH+f6VSRvUloH
5R2s/p0qeTx1JO+htJWSZ6u934v4Jt+uKfyviPlkb7BH6hcxp8ztciGVo81P
s+gj32qqNodJHy10ltybNc1iTrpI3ijMlbyf6s9R3e+lz5feTfpT9F36HOm3
Ce9KXppCvsH74TXhriz2xDrJvwuLJHdU/SdV/yvp86S3lv4oe1/6ndIfFN6Q
/LHwgORGyp+r/N+E2/NYI9bqthRn61L2uOT32OOSHxW+kPxNCpm0zyRPES7J
4szdkGINf/O6s7borO19wq+SG3l+9pDen7lL0bcm0u+R/oH0+6W3kj67iDW5
X/JLWawVe/A1yTfnsTf/FO7KY0+wN55IcfbvEV6S3EtrsqvWZhehp+R5Kc4a
c/K45Io+HycIlSQ/n+Is04fnJL8l3JuFzVmVog3aqiQcInm8cCS2UBjHfhC+
V3/+LbSXfJ7+nyuMEkbbBmGLxrCnJP9XbS5W20dJf7GINPLGCu9LHqj/A4Rj
hH7CBqVN0P+zhA8k7+vzP9b6d8INkm+kD5Kreb5Olv5qETYJ23SS8LbkHYXn
lT9I+mueX846fX1T8ifCRZInC5skf1jEeM6zfUzC09gj6Wsl/014JYs61MXm
Y/svET4u4ht863jhdckrihgf41yJvdF8PK76B0i/X/r+msO19FXYD/um/z2U
f6RQQXId7IXQWmXbCDUlv6r0V4QanGXhtTzSyKP86jzSyJum/1cJVwhThYpq
4zm1fTR7TvLXRZThfvoG+6s6n+Zhc5qwf4XzpV8gbMaWpdh7nMFPJDdU+beY
S6GB+/oid2EWfa7711lRer1ytP+N8r8W9nXaV7bPlGUOmAvapO3dmUP2p/Tv
i9hnI4VThFNto5bo/9O+D2p4fe+WvoSzqj4+Ib2t9IXSD9P/3sJEYRJ1lPas
8s+mDckP6/9DnFXhXrdJ29hIbCX78W3Oainu90eUPi+PMzzXd8p0/Z/h+4Lz
Pdv24Y8i2qVv3Dl3ekyM7R/Cj5IrCcuyGOO7vp+wBdxXP7H/bZ86SX9C+jtF
9Jd+c7/nwhLlD5P+RhF9pK97lsI3+Vz1H1Z+c+rgDyi9uu0HduRX5S9Ufgvl
zy8ir5rtAWXmFTF/zOMjvk8qK31331/7+Hxwlp/Dfqm9J6V3ZQ6LsK+P4OtI
f1z6nkX4Lz3d3o/KXyD9cNahCDuAPVgsPJXHGBjLXsIO5bjDditFH+hLzSL8
myXeG9z5b2Hf8/AF6CN9reL7jO+vUv6Tyn+wCP+Bu+JW25cDVWYLe19oVQ60
FA4oR15b4UvlfSEcXA4bia08QhgreYTQXXI34VTf7+9lsbew7ZShbB9hjOSu
StvK+KWfIf1MfNBS2GBs8WlCj1K0SdunUEdyF+FkycfTR8kthUGScXKf0r/j
9L1Vkk9UWkfldRCGSB7MWEpRh7r0kb7SJm0fKwykjup2KsLnaFEK+4AvQt5+
pfARKNOqCJ8FX2VYOcbAWA4TRkseKRwquZdwuuROwo/q2w9CR8n98TFK4UPi
S7Ytwjf+j/I7l6MMZbmDuIvKyl+q/B7Sn5fcTmm56n6AjS1iffDF8MlmFTF/
jH+L9PbSu0v/XfnbhG7l8Ll+zWONWKtR0nuXos/0nTEwFtLIow51fxO6er6a
K6+ZMKAc98Wramuw7T9jYCyMmbFThrKMub/nrJP738rr1Ub6ZvytItaMtWsv
nCC5qtvHxn/JfVcO3xcfeAbnV/rLrL1QrRw2HFt+obBF8s5KW0N5YSfWUudv
qOruLn248psX4W9ShrK1imj7OumfF3EHcRfxDb7VVPgI+y80YS3U3lEqX1H6
4CL6SF+5c7h7mnl9qEPdFuxZfFPpzcuR/y75WfjWzAlz84vSGpcDyD8LjSTv
io2WXE/YBduk8svx3zijzIf6c3wWPnI1ybupzCLlbZR+YBExw3t52ABswR7S
n5X+jvSGRYyHu5k2MskHYVOV/5nQphw2AFtAGnmkkbdVaC15L+E5yUuFPdkf
wjLJLwj7lAPIzwt7l8PPwd+5No85x+YtyCPGxBYyRsZaV6hUjvHUz2MOmIuq
wvt5rCHntYf0P/LY8+x9vsG36BN9Y4zEXMRajJ0zxdk6RFhWxB4hPljp/XBM
iljjAnyKFDaordavne3HaNu/HrZnB3j9DrG9G86claIOdUkjr6ftJ3aE2Icy
w23fGts+DPbZaO3z1twx0f6Ol7F/oJHjUepS9kCft2b+Rk/bI2w36OXzjr0d
ZXvY3fYL/zhJLkrhe3PvcP+U8Qd8D1a2XNE2jPi6gc83QG5o+4AN7GJ7O9J9
YfzYgM5O6+r7g75gA7Bd2DBsA3PczvYA2z3C9oF8bB1p7W3vR3iumc8WviOw
IQd6DrEtQzxHbdw++4DYu7b3K0Cu4/0C6nj/7e08ys/3HuVM4QuyJ9mb3Pnt
8/Bh8AWwV8SaK2x/2M9wMk94/1b3eWGPYmsq/2XfhN397dr+1gKfAfichT7/
VbwmrAU8RQ3vd84Y/jI2can3P9/q5PP7pe+bdt6b3I8HWD7Yc0daR5//L2zP
O/i8f+77DJ8d24VPjm++KQ+uABuzPg8fmDR8bnzjmj7/2IRaPp91bc+wDZxh
7l7KV7W9qOfzji0hZiuVYo+yV+GUNmUxdriapvY/KEPZhSniROLoV/DNUsSQ
pJF3l3Cdyv8DH8lliM9vziJ/jnCT5NuFucTeKf4vE14Uqgrj+J76d7q+fYX0
y4lBhduFp1K0zTcek3y3+SH4NfIXON4l/r7Pdf7pft3tti5zfdLvcHw/y+3d
7z7+1Te+T9tweJdKvlm4WvLFfDNF2iVul7IjhXOz+Abpo5x2icve4fkhfyZj
ScFzzfNcwjfA2cHVweetNF9BjP6o08gjrl/kMTE25nox3IEwXWXvcHnOBGdj
kc/T9BQc2yx/m/FM8/rcmYIzhAuE34OPA8j1bZvgIOGD4J/gJvHx8DWwpfgy
Zdu6bb4z2FfsnV/t88Bd/ml/Br8G/wnu6jv7Q4X3ImW3OY08+AN8J+4gfDl8
Ou4m0sj73vfTfI1hZhZrxHjgK+Gu6DN9r2DbS9+41+CP7s6izpIUfMtc70/4
jlu83jO9n+Aj4Z4uz4LfxQZhW7Ax2Ka+mo8d8vBhUop5Z/7/pm9WLQXn+afn
gfMF50rMRFwFn9qsCG6NGOqwcqSRxxgYC2nkUYe6xMnYh022DfDH+B4v5RFf
w7lstb+x3dYo//I8Yh5iH3yy6+wvbC3Cx5uSB7+x2fnUoSy+XEO3T5ktjvfh
Nojh9iL+4g7lXhUmlIMjgUeAT4D/qFCED46f8IKwaxGcOLzIR0VwKHApxOQ1
nHZZHj4ZZeEciJWJmb92G33y4Cho+0R8jjw4LLisEdKrSh8jvY/kk8pxT3Jf
DvN939L3G74ANqemyo/NwhbBwcHFwQmMLMLHrSz9xMy+L/3Pg4OuLL1Birzd
lDasiJh2aRG8O7EuPi08DT4hviH+C7Hch44/htmHwXehr/jT7AnW/XDhWJUd
WIr4jjhvAH5CKWJC4sg1RXBPcFC7FRHTE9uvwB4VEVMM9HoRa8Cp4dvj46+3
DncGh3Z5ERwaOhwcXBucAdwBdwJ3w1p/byX20e0Tu8BnwWXBmY3Ig3Or7vpw
I3AkcBHwb3Azy7J4KxjoMfX1GJcXEYsSk+7g/hDjw6ns6/0AF7X9zaSIPXc0
tqsUe5G56VeKOWaOeFO5Mo89zFkhZsdnfsP+OzqxPPzKd96PvH3A18H1ERMP
zYMzIVaGo9zOVUq9sAhOEW4RPvFlya+wJ/OIuao6nzRkuMhztQfOES4SJqeI
NwZnYT+IFzjDb3p89Be+i9iJGAoucB1jyYPPg8Mj9llnGR8CToxYjjrUJeaB
S4NTIxbayLjy4NDWWv4gDz6NNHym9fY/8KWI0d7xN4i/mGfmmxiXuJ26G/Lo
M23gE+MbE//CTcDRwNXAof2Qoo117jexGzHcT3nEZ8R28CYfuF/EQwCZfhMr
ETMROxIPEkvBtWzwGKi7fxFzRxp5bTxm6lCXOtQlpiT230n93LEU8SRxJXwQ
XCN9au67iPsKfmeLbSy2dpXnmjPMWd65FNzCvUXYEGzHqCI4K7gr4iO4MTiz
FrZf4yUvLuLtgjeMP1K8YXTJgxPb/rZRBI93lnC2cF8Rbxe8YYwu4o2AtwI4
sQ0p+Cf6ynsAb1OAOWEuWnm+GSucVz233cn7m29gc+qWIh7EFnEfczdzn3ex
/wjXt972gPHB9cGRwZXBocKlwqlPsC3smweHh03kDa9ZHhwjb3sLiuD64Px+
ScE5Nvf4xxTxRsRbEZz4RynebBrn8WbCW85jnk84yZ9TxA/tbD/OtD2Ga+T9
4FnPIeOEBy0VwTl2tT06X3I34bMs7jTsCW9S3ZX/WBZvVZN9dvGpptuHxffC
B8N/PJt8yVfiQ0quleJthfupQgqbi+2FM+ctBA73HNsTuF3KlIWarlulCFuL
zcXW82YBr40NxZZyx15he4N9xwfBlmBTaIf3z+Q2aZv3vxHOh9/gzufu507/
1PZ9nORnsnjbODzF+905wlDJxwoDhfHCmUJ//mMLs0gf4LSBLnu8MEg4WTjF
8zM5i/fTISns4RTJZwsnST5OmJDFHJJ/mv3rMf4+ZYbbhlKX9enm+29SERw6
PDt8O9w6/PZ832/cH3Dk8Orw63DnTVK8I/Ou2833eX2nkVfX63ea0NBlRmZx
55PPG8KDefhX+C/tU5SlTp0U9wf3Gf7MlCLeVPr7fPDWwhtglTw4Nd4GO6V4
Xx7i7w1Q/p55vBnytkqbtYV2Kb5V0/cHa0o6HNb1edz/cFvXp3hfn+z9yH7i
zYR3hR+Er4SbfF9zP/Fee6jXjLWr5rvrS5flTZs+0Zdm3qM13Sf6xnk6Mo83
Pbh93kwOzYOD5S2FN8ZK0nfOw19brbQT8vjNwE7IjMdrzFr3FY4QTmXfen+w
d5ij7s7Hd6uuNgZxn6d4A8GuYTv5vcJU788xknt4/dhvffDdhImSR1k/xXt1
ojApxZt1Z89Jb68P6zvB36e/tEWbvVKs4VC31zZFWk+PibL0qXMeb9709eIU
b82cL743NgVXdoX7S18mZfHGPNH7nrVkTbFDVT1+4tXR7j9tcWZZP2IRuA5+
u0JMMtjzRxvDPS7e6vnGIO/vru5zL/eHueOMw9896fuK9ZpYxJohk8Zdhk24
yPPD+ef3MOdnEePTP+Jj+kqfWc9hnn/i63Ep6mNbJtBPy3yfNSTtwhRzMcnl
r0lha/nmWa5DuaudN8J7Z6S/fX6Kb/HN073+rN8U6/ye5SZ/j9+3HOL5Geb1
ZP+wtqxxqxQxwYlef3Ts3wTbi47eu9gubNipPjNNvae6+ByP8Px28HwwNr7Z
z98f5f6i0ybl+vtb7d1GB+exHrxp88682mf8tjzuEM4+MdXyzDaJc53idw2c
GfYj/snBecQ/vPURY+GrcMdy1/4vxd3KHbvA5429fF8WbX2d4i6/V9iUwgfC
F+KddVuKNN6Fv3JZfl/wptPI4zcbrW0/xhXhDxyYx3syb5P8PoRv8c1vU9y/
cEnLhRUpOBK4En77sMp4yd/gW6+niP/xPz5M0SZt32P9pxS+BD4WvhZ3Pnf/
HH+PN8Az7c/g7+DftrR/wtskb/YH2N6NLcJfaWT/ZIvy16f4TQlzznzhDzW1
/3dGEb854XckcEJwQ/A7M3zeZ6Sw5+z36db5vQbcBXuW31/xe7TLszhzU73f
2dtwPvBX3KfYB2zOBZIvS8FNnWsdn2aaz8Nk51MWzmym53o7l5fFnGO/prjP
N/rcTXV/rk3BUcFVPS08k+L3PLd6v/D7nndS7BX2zGcuQz4c32KfYdqkresM
ZDg7uDvsAecZzmZaCv7mGtvLaS7DXDFn1IVzu9nzAR+GD4kvCef2agqfjxiH
N1Z8QfjHWd7Pq1P4rOwd9hC/P/pXCl8cH5D9B/8JV8pvjdak8M8b5jFfcE3w
lTNd/4UU/BX9gTOFj+I3an3tx+G7wQfS9gPu3+YUvxkixiDW4M6Y6DW42PPH
XL8trPX8zs6CQ13tPGTSKMP7DLYHG3SQ9ydrwxqsdRtve8+Sxzcb5PH7q80+
T5ydWzwe0h7yeNb4TLJPNnqu1nhuPnXZ/wPvoArR
          "]], 
         Polygon3DBox[CompressedData["
1:eJwt1XnQz1UUx/Hfw8+SPSKaikf2BwllaULJTlR6Esoyrcgy2iRZ2yiVJUJo
UWnKRMUQFUpR0ZRpMaHRUKEUIWXpdeZ3/3jP/ZzzPfd+zz13yx884rrhRTKZ
zFAUw6lsJvNSXibzIhbiKXZPH6oLqoG6eIHvJF7xfQlex3T2T5hAT8QUPMo+
itn0c1iUxstgteYKdmuMZN/hHx2N3QFtsIjvN0zz/Uk8jcfZXcV1QTfUFLeA
r4De5ftOfINZfP8WzWRO4B36cr6T9AF6Pw5iBt8T2iOYSz+PBfEv9nHMpKdq
66E+/sDU6BPzwmPs01hGv4XXUg0O46807ny+adoG8vudLqCb4BL0wXl83bTd
5dYD6+mr+TqgBx5gX6jvenoGXZ2ugTL0BvXryX8NxkSe/JvpLdieavAt7qTv
wv2YzG4lrrS6lYpFxzy+Nnz7fZ9Dt0BLrMW1fL0ix+jPPiPH09hAF/KV1J6L
KvgOY/gqa7djDb0aS2Pt2J9hED0Q/fAQ++vkG4zbMJ79FYaknG9Nvtby+5M+
hL2xl/i+xE10X9yMcewv8Hn61j/94wwuMM/zUQ7z2b2NVyft4xvoQlSgP1aS
AfrdgodTzv3T2JuxBT+mPT4e96WaNtO/KZpjX8qvMGoT801nqyv7Yt+P8R1H
Xqr9pmyuxlHr3niQ/RE+zOb2Q/dU+/b6HqaP4FTs18g31aAPrk99O4krYezi
OJnijlqzv/EqfSnfMXoPPS7mGXs57edV6ayM0p6FUnFW4txgGX1Z5E6XjtzM
qR27Le5hH0vnfBaeTWerRMxDXEt2C4xgZ7GOrym7CQ4b7xRW8TVnN8MwMWeb
x1Z6G37AbL7/xK0U15jdCEPjfMT6oqj4jXwz47ymOh/FAczlKxJ7Ut8r2W0w
mr0bu9K9NZnvEe1SrKRXRR0wid3PeK3VsxWaYiHfP3J513gFYhrEvmRv47+d
nhD5oyL66lugT0M0S33zxfbXt6zYMgF7kLiBGIy26f5bg9FRX3SO/cZejcV5
ufv5jXS2auqTj4twMM13bdo7cYeswweoFPvNf0fwD8dE9g4Mi1piZJpvR+Nk
5VAM5dOZqcRXEedgXaxx3F/0p/QmrE2+vRhLT9HWRp2osfntxJK4p3wbEuuF
9+XSkX0V7mWPNF5n/+uCXliczd3j74lrKKZ23At8+9J6xfvyC35FmagBXw0s
xzOxRtncG/Uy5qW7OHxxL8c9fyLGR2l9P+GrRTdCY4ziu1EOheiZcok9lIet
aZ3La0uKq+x7FaxI/z2Uzb0pczA9L/duVRP3M70H36f9vDGbu0fHasuiXOSb
arQ7ndk4u1VjbSM/bMjLvQVd+YepSzV21bzc/bI8ndHh2dw9Hff1EawQV5e/
DnawB8S/6Ap0LdTGm9nc29MendJeizrH2xtv8KR0PobKpb25tqbboh3eTvfK
3dpiKB53mrj64uohP73T/wNa0As9
          "]]}],
       Lighting->Automatic]}, 
     {GrayLevel[1], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtlXeQTlcYhz/3u0YbMcuq2RCixuhEXXVXj7J6lOHTR+8SJYKEhOgkonfR
S/TeJXqX6N1iWXWtaM875/fHb57H59x77nnPe85mD/WI6e4FAoFJJEhW8Y8i
cA/sS8Lw3vA7khLvAfuRFHg3+C0Jx4fCDiQt3h82I1/g02EvkgzvrGfT4YM0
pgC+Ac4iOfEZ8AeSRM8OI6nwnrArKYkfhQfIl/hKuJOUwc/CNiQLPhruI2Xx
CxpfHD8MR2mu2fAbkgkfCVuQzPhPcIT8R43Pot//1TttrkukhN5pXgG/BceS
T/GfYQ0/EGiAp6a4EaQhnibo3hONP4LDVas/4DSt19Y9UPXsoxqGyYeohgPg
ryQrPgWOIbnweXAq+Qwfp3207/kFtlJtrcb7tdc74GCNHw9Pkyj8AXysdV2H
cbYe/BWszrpi8FSsJbnWFQb/5v/K4f/B5dqjdXAtya+9S8G4mngCfl77cgie
I+XxazYPY0J4MZiJfI0fszrhjfC0sDhpit/n95ekGh4PJ5P0+Pfwqr7nInxP
KuMt4T31kvXUTFIQ3+i5/s+DL4RLSGF8u3rMfBvcTErjJ1X/cPXzCRKJX4YL
tBfWY7tIMfygxpjvhWfUt6c0vpDeP1XfsBj+ox5bDbdozCb4FymFH1dtrWes
dxaRfDoXE0mE9n2u+mSCfs+tNb6Hbci7gOu3CPXMbdXzqc4F2x1oC+tQ87b4
B3wSyYb/BleQz/HfYXPP3SWtPdcPRXWfWM0rqf4dSXK8CwyRpHh7zRup/jmi
nlmvvautHphD8uJ/wk561u6orZrLanuTfIWvgc9gfVsLWaq1z4evSS38rY0h
FXV+q7HYqjqbWzWX7YUXdGfZzm+snQH8ObyhZ+/AaJ6Nw5v7rj9DqlXBoKtz
UT1bXn1i89pZeKO9y6az/L/nzpfdG3lJYzw9zEES8RDvr0Ji8dq+++YneF1Y
mDFv8Xa+O0cf8A74Fc+t64nn7qWXeIzv6mL1iSef6HzZXOa19G123p/j9WCi
9vGunSffnQXrw6q+u9Me4rvVh8u0lurqpfCg28d3eDqtKwMsRJrgGYOut+08
2t8FW6PdRVHwhee+M6XuhCY6+9aTSbjUmvnujk2wnvbdftXQHn0EoXLTYA==

          "]], Polygon3DBox[CompressedData["
1:eJxFlne00GMcxn9976V1cG6FtETo4igqKw3SVDkqKzfj3lJ29haSkcieFbKK
MrNXqaysCtllNDUklWjwfM73Occfz/k97+/d3+/zPu+7S9XQvudEURTThVLh
ahWGCXcKdwm3CKOE8cKjQi81WqF2nYXDxa/Rv+3Fmwr3ir8p7Cu+u/CY+HYl
RXG0eA8hxHcUdhBaCC1dPk51vYR64q2FqiL/Ub9JY/QUP1aoq/LmyH9w2r8i
3kJ1Bwuvib8rtBJvLjwr3klrXCq+nDWLP69/B4jvLXwcOQdraeW579e/+4RJ
wmThX2Gg2h4vtFH94yrvIb6fx/9D6CbeV9govo3a9BPv7vKrkWtkba8Tq5Lc
C3vaVvworWmt+3cX/0dtjhA/xvWPqPyw8JTwtFBT/2oIZUKdkswJ62lYZK7+
jJy7n+O9WOVFwgbhb2ODY0gsyVlTx+MF/yMXhxXZ9lOht3gnYYvHOtTrZ5y/
hPWRa2Jtd4vvTC6FW71n9j5bmCOMFho5P/eI3yDsJL6bcKP4M8KexFp4T/xL
4ZAiNfWO+NvCW8IMYWaklohnZZF5nKJ/LwqzIvP7SeTeyPlZ4iOE+uLNhOEe
g7G+Fr4RbhIaWL/o/rrIdg8KY4TrPcZw17Gntmi1yL1+ELl29jDNOSN3UyPL
Iz3HKJ+taa57331vF25zzsn9Q5GxaenzNMZlYsb8HN6ajvdl1uwkx2CK99TO
ep3psRuLlxc5B/Heq8icPSE+ThhrzaLdB4RqqttH6O/4Mxaamyj+cuT5a+Z6
4gTnH+NwXsg1Ob9D/MnIuRs7/2PcZ6znxj/Ya1vn+yrhSq+b2FwiXOx/1OFX
+E8t4fJIEIdhrvtQ2L/IPaIn1jzBGmIv11oP+hQnRXoe3ocH4AWfRXoL+3kp
8ryN9xgTvZY63g9rKpcGN4pvQrPiXXWmuwgVwoDSzAtrYU1o9ObI2JQJF3qP
TfC6Ivd3RSRv4vOEHtBmA58X+jd0PojvaOeXNV0auYZK+ydrG+n2WwlVkZ7Y
2f6JV7Zy+y14sMq1VO4jvkboU5qaaOnzOs4a43zhIZMd93rWE3E8W6jh/VwU
6c/oB01+FOlheNmuQjNhUOQ9xP4qxc+PjM3WwmnOCXORc3I1UCjxeRhgvaI/
ckpuhwiDnSe0c26kVujP3XWGUN3xot3JkVqg/wnWCd6DB83wGOyFPQ1xfthv
Te8PL+Su487DE0+M9NJe9k/8FM79Vt8ejtfj+fgnHoVX0WeJ+CAFY7P9jVwO
5I4osg/xQlOrxLsUqbVKYYPnb+SYEtuq0uw7mOBWyzu2R0n6HnvrKvwo/nsk
J+drxRcIHYrc00rxMx2zwY7tqZE5I1fo6fTIXJGz88Qv8Pmo7vIpjjGxrYj0
U3JHDivcvsx+gX65X4hNR2GV52AuPBQtL42MJfvhfq7w2CM8NvcLWiq1Pr4T
2hf5RkB/+BfedpDP90+Rc+Hh88R/8P5bC5+LT4/s297l5ZGxx6++iMRc4TfX
zbZ/cMb4P8f/5rpt7ZK8+3lDrIu8rw4Ur13kfYx/kyNyMz/yjuCu+CpyffPM
F3jt8+P/PK42uvm8zXe8eMv0tv76KjDri3wv9CjNN1Vdv9F4m632WGhhnedg
LrSwyv+owyfYywrrB019K/5r5HsBv/s+0o/bOJ+Un4uso83Pkfd9W+uZ/ot9
fjgTv0S+3+hDW8r9teZG1fKNdmRJ3rXlztdUr3GlzyVawk/wPjwQv8Xn8So8
mXuTN8Msz8Fc3FfNrZc3It83eDH3O/cldwF+jEdMsD6Yu9zth0be0dxJ3E34
LW/RZUW+n/GHTkXmfIn1hrZ4wy2zhtASdwjnm/cEc7MG3ge89zibHdwefbez
nhY6/h3tL2usndZuj254v3a3nhc6psR2kWPPe7Sn80P//wC+GW6E
          "]], 
         Polygon3DBox[{{748, 69, 238, 239, 1095}, {819, 818, 1111, 255, 
          841}, {783, 83, 246, 247, 796}, {1103, 240, 81, 70, 1095}, {767, 98,
           256, 257, 846}, {785, 84, 248, 249, 802}, {789, 85, 250, 251, 
          808}, {746, 68, 236, 237, 1093}, {779, 778, 1105, 243, 1096}, {718, 
          56, 234, 232, 1090}, {781, 82, 244, 245, 1097}}]}],
       Lighting->{{"Ambient", 
          GrayLevel[0.8]}}]}, {}, {}, {}}, {
     {GrayLevel[0], 
      Line3DBox[{606, 2, 607, 608, 3, 611, 4, 612, 613, 5, 616, 6, 617, 7, 
       618, 619, 8, 621, 9, 622, 623, 10, 624, 11, 55, 66, 77, 88, 99, 284, 
       1113, 257, 256, 1126, 255, 1111, 254, 253, 1124, 252, 251, 250, 1123, 
       1122, 249, 248, 1121, 247, 246, 1106, 245, 244, 1104, 243, 1105, 242, 
       241, 240, 1103, 239, 238, 1116, 1115, 237, 236, 1100, 233, 235, 232, 
       234, 56, 45, 1, 606}], Line3DBox[CompressedData["
1:eJwt0TkvBGEAx+Gx1rHWvSei8BHEHXckCokt1i1xRIhut0BBTU1NTYXQIKGm
pnafX8NTbPHk939ninmTaVnJZ3NFQRDskGGEYg/ClFDKfDgIyrSccTtDxK5g
wY5qJVUsOlfrktZoLct2ndYzYcc0zqQ9RcJOkmLaOa0NrNmNOqtN2sy6HdKc
e26zyz6HHHPBqPe3mtd7PdUzznl0joTcnSjPzlmdYJIppplhlj/vh33zV4d0
kB97QL+1X/v4snv1U3v0Q7u1i3e7U9+0Q9t5tdv0RRt8J02KJAnixHjy/sa9
r7niwXlLN9ngznlML7VVT/SIA/YK/zXPKnOFf/wPqoAvAA==
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1075, 1295, 1294, 1293, 1292, 1168, 1288, 1287, 1286, 1059, 
       1243, 1242, 1154, 1193, 1044, 1197, 1196, 1142, 1210, 1028, 1010, 1194,
        1011, 986, 1187, 987, 958, 959, 930, 931, 903, 904, 876, 877, 848, 
       849, 822, 823, 794, 795, 768, 769, 1114}], 
      Line3DBox[{1076, 1311, 1170, 1304, 1303, 1302, 1301, 1300, 1298, 1061, 
       1156, 1241, 1240, 1239, 1046, 1213, 1144, 1217, 1215, 1029, 1133, 1190,
        1012, 991, 1189, 989, 963, 961, 935, 933, 908, 906, 881, 879, 853, 
       851, 827, 825, 799, 797, 773, 771, 1101}], 
      Line3DBox[{1078, 1325, 1324, 1323, 1172, 1320, 1319, 1318, 1317, 1063, 
       1262, 1159, 1250, 1249, 1048, 1221, 1220, 1146, 1222, 1031, 1135, 1199,
        1016, 997, 1191, 992, 970, 965, 942, 937, 915, 910, 888, 883, 860, 
       855, 834, 829, 806, 801, 780, 775, 1117}], 
      Line3DBox[{1079, 1175, 1336, 1335, 1334, 1333, 1332, 1330, 1328, 1064, 
       1162, 1261, 1260, 1258, 1049, 1225, 1149, 1229, 1227, 1033, 1137, 1203,
        1017, 1128, 1185, 995, 974, 968, 946, 940, 919, 913, 892, 886, 864, 
       858, 837, 832, 810, 804, 784, 1118}], 
      Line3DBox[{1081, 1352, 1351, 1177, 1347, 1346, 1345, 1344, 1343, 1066, 
       1277, 1165, 1269, 1268, 1051, 1232, 1151, 1234, 1233, 1035, 1140, 1206,
        1019, 1131, 1192, 998, 981, 971, 953, 943, 926, 916, 899, 889, 871, 
       861, 843, 835, 817, 807, 1120}], 
      Line3DBox[{226, 520, 519, 518, 517, 516, 515, 514, 215, 418, 417, 416, 
       204, 362, 361, 360, 193, 320, 182, 302, 171, 160, 149, 138, 127, 116, 
       105, 94, 273}], 
      Line3DBox[{1083, 1282, 1281, 1280, 1279, 1179, 1350, 1349, 1348, 1068, 
       1237, 1236, 1167, 1209, 1052, 1245, 1244, 1155, 1238, 1036, 1145, 1211,
        1021, 1132, 1195, 1000, 988, 973, 960, 945, 932, 918, 905, 891, 878, 
       863, 850, 836, 824, 809, 1107}], 
      Line3DBox[{1084, 1365, 1181, 1359, 1358, 1357, 1356, 1355, 1353, 1069, 
       1060, 1285, 1284, 1283, 1053, 1255, 1158, 1248, 1246, 1037, 1147, 1218,
        1022, 1134, 1198, 1003, 993, 976, 966, 948, 938, 921, 911, 894, 884, 
       866, 856, 839, 830, 812, 1108}], 
      Line3DBox[{1086, 1373, 1372, 1371, 1182, 1370, 1369, 1368, 1367, 1071, 
       1305, 1173, 1297, 1296, 1055, 1264, 1263, 1160, 1257, 1040, 1150, 1223,
        1024, 1136, 1202, 1005, 999, 980, 972, 952, 944, 925, 917, 898, 890, 
       870, 862, 842, 1098, 1110}], 
      Line3DBox[{1087, 1082, 1382, 1381, 1380, 1379, 1378, 1376, 1374, 1072, 
       1067, 1316, 1315, 1313, 1056, 1273, 1164, 1267, 1265, 1041, 1152, 1230,
        1025, 1138, 1204, 1007, 1001, 983, 978, 954, 950, 927, 923, 900, 896, 
       872, 868, 844, 1099, 1125}], 
      Line3DBox[{1089, 1394, 1393, 1184, 1392, 1391, 1390, 1389, 1388, 1074, 
       1337, 1178, 1327, 1326, 1058, 1278, 1166, 1276, 1275, 1043, 1153, 1235,
        1027, 1141, 1208, 1009, 1006, 985, 982, 957, 956, 875, 929, 847, 902, 
       821, 874, 793, 1127}], 
      Line3DBox[{1102, 772, 774, 798, 800, 826, 828, 852, 854, 880, 882, 907, 
       909, 934, 936, 962, 964, 990, 1130, 1188, 1013, 1014, 1200, 1030, 1216,
        1143, 1212, 1214, 1047, 1045, 1251, 1252, 1253, 1062, 1299, 1169, 
       1306, 1307, 1308, 1309, 1310, 1312, 1077}], 
      Line3DBox[{1109, 813, 831, 840, 857, 867, 885, 895, 912, 922, 939, 949, 
       967, 977, 994, 1004, 1015, 1201, 1023, 1032, 1219, 1038, 1247, 1157, 
       1254, 1256, 1054, 1171, 1289, 1290, 1291, 1070, 1354, 1180, 1360, 1361,
        1362, 1363, 1364, 1366, 1085}], 
      Line3DBox[{1112, 845, 869, 873, 897, 901, 924, 928, 951, 955, 979, 984, 
       1002, 1008, 1205, 1139, 1026, 1039, 1231, 1042, 1266, 1163, 1272, 1274,
        1057, 1314, 1176, 1321, 1322, 1073, 1375, 1377, 1183, 1383, 1384, 
       1385, 1386, 1387, 1088}], 
      Line3DBox[{1119, 805, 811, 833, 838, 859, 865, 887, 893, 914, 920, 941, 
       947, 969, 975, 996, 1186, 1129, 1018, 1020, 1207, 1034, 1228, 1148, 
       1224, 1226, 1050, 1259, 1161, 1270, 1271, 1065, 1329, 1331, 1174, 1338,
        1339, 1340, 1341, 1342, 1080}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{305, 1187, 294, 295, 1189, 296, 1188, 297, 1191, 298, 299, 
       1185, 1186, 293, 300, 1192, 301, 302, 1195, 307, 308, 1198, 310, 1201, 
       313, 1202, 314, 317, 1204, 1205, 318, 321, 1208, 322, 326}], 
      Line3DBox[{330, 1194, 304, 306, 1190, 309, 1200, 303, 1199, 311, 312, 
       1203, 315, 1207, 316, 1206, 319, 320, 1211, 334, 335, 1218, 342, 1219, 
       343, 1223, 350, 351, 1230, 358, 1231, 359, 1235, 366, 367}], 
      Line3DBox[{371, 1210, 327, 323, 1215, 1216, 331, 336, 1222, 339, 344, 
       1227, 1228, 347, 352, 1233, 355, 360, 1238, 374, 383, 1246, 1247, 386, 
       395, 1257, 398, 407, 1265, 1266, 410, 419, 1275, 422, 428}], 
      Line3DBox[{430, 1278, 424, 421, 1274, 1273, 412, 409, 1264, 400, 397, 
       1256, 1255, 388, 385, 1245, 376, 362, 1232, 357, 354, 1226, 1225, 349, 
       346, 1221, 341, 338, 1214, 1213, 333, 325, 1197, 329, 373}], 
      Line3DBox[{438, 1193, 368, 363, 1239, 377, 1251, 380, 1249, 389, 392, 
       1258, 1259, 401, 404, 1268, 413, 416, 1209, 425, 441, 1283, 451, 1289, 
       461, 1296, 471, 481, 1313, 1314, 491, 501, 1326, 511, 521}], 
      Line3DBox[{523, 1337, 513, 503, 1322, 493, 1316, 483, 1305, 473, 463, 
       1291, 453, 1285, 443, 1237, 427, 418, 1277, 415, 406, 1271, 403, 1261, 
       394, 1262, 391, 382, 1253, 379, 1241, 365, 1243, 370, 440}], 
      Line3DBox[{531, 1286, 431, 286, 1298, 1299, 444, 454, 1317, 464, 474, 
       1328, 1329, 484, 494, 1343, 504, 514, 1348, 524, 538, 1353, 1354, 545, 
       552, 1367, 559, 566, 1374, 1375, 573, 580, 1388, 587, 594}], 
      Line3DBox[{600, 1394, 593, 586, 1387, 579, 1382, 572, 1373, 565, 558, 
       1366, 1365, 551, 544, 1282, 530, 520, 1352, 510, 500, 1342, 490, 1336, 
       480, 1325, 470, 460, 1312, 1311, 450, 292, 1295, 437, 537}], 
      Line3DBox[{372, 328, 1196, 324, 1217, 332, 1212, 337, 340, 1220, 345, 
       1229, 348, 1224, 353, 1234, 356, 361, 375, 1244, 384, 1248, 387, 1254, 
       396, 399, 1263, 408, 1267, 411, 1272, 420, 1276, 423, 429}], 
      Line3DBox[{439, 369, 1242, 364, 1240, 378, 1252, 381, 1250, 390, 393, 
       1260, 402, 1270, 405, 1269, 414, 417, 426, 1236, 442, 1284, 452, 1290, 
       462, 1297, 472, 482, 1315, 492, 1321, 502, 1327, 512, 522}], 
      Line3DBox[{532, 1287, 432, 287, 1300, 445, 1306, 455, 1318, 465, 475, 
       1330, 1331, 485, 495, 1344, 505, 515, 1349, 525, 539, 1355, 546, 1360, 
       553, 1368, 560, 567, 1376, 1377, 574, 581, 1389, 588, 595}], 
      Line3DBox[{533, 1288, 433, 288, 1301, 446, 1307, 456, 1319, 466, 476, 
       1332, 486, 1338, 496, 1345, 506, 516, 1350, 526, 540, 1356, 547, 1361, 
       554, 1369, 561, 568, 1378, 575, 1383, 582, 1390, 589, 596}], 
      Line3DBox[{534, 434, 1292, 289, 1302, 447, 1308, 457, 1320, 467, 477, 
       1333, 487, 1339, 497, 1346, 507, 517, 527, 1279, 541, 1357, 548, 1362, 
       555, 1370, 562, 569, 1379, 576, 1384, 583, 1391, 590, 597}], 
      Line3DBox[{535, 435, 1293, 290, 1303, 448, 1309, 458, 468, 1323, 478, 
       1334, 488, 1340, 498, 1347, 508, 518, 528, 1280, 542, 1358, 549, 1363, 
       556, 563, 1371, 570, 1380, 577, 1385, 584, 1392, 591, 598}], 
      Line3DBox[{536, 436, 1294, 291, 1304, 449, 1310, 459, 469, 1324, 479, 
       1335, 489, 1341, 499, 509, 1351, 519, 529, 1281, 543, 1359, 550, 1364, 
       557, 564, 1372, 571, 1381, 578, 1386, 585, 592, 1393, 599}]}, {}, {}}},
   
   VertexNormals->CompressedData["
1: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
BMFy+dXhkVlXyNQO4cT+8FGAtJSnKgDHh9uEIuedgPd0Mgn7z+ylwqfz+Xzw
ZDwnXWzyKGR2fw3F4962nq6qu5UX5pjPn7aYsYTzvrbkcTTZtF/rYBsnKPPe
YI2aN4ZgPpYq8nmQt/3LX1lsIPS2Z91iRhtyp7b6Ynn2Hg/ZlODMAjJj1eyW
M/JwuFOKvE8uGXEldKpLELIZX5PlvBb7HzlfZ9BO7H3KDwsfpshyFr7uJsu5
SOMl5pnMC78o58hyLlQeJ/vtL8avQVqvOIH31whZTnpzAYTllI4pV6sO2gUX
c0hkOd0urJPlPNvwp2kfPxPwnLKlsCTk1HHf6Ifl4Tzhb2Z4aydsalThwHJO
fBbrJO9rWV86oqb7f94zQc//c89k5m3hSdY+xn+4nnUwmWfaVt4cj2D4h9/e
fo/MQ0zfvnrJSv8Pf9/WSeZpfUXfZFx2/sPrnlKT72+kzNTu/nll+z88pkiG
zC0tP51IaaT+hzM9tV7/n8k5/Rc5r/xFzuC/yJn4Fzlj/yKnwV/k/Nu57b/8
X/4v/5f/y//l//J/+b/8X/4v/5f/y//l//L/9/l6nL2oVGEnmk/R/qgTnwv0
C5fk2b+OgdKUo/Y1sV6UduZJ28FvpdDwsFXDKW74r/18Lzzu4dbYjxJUN/g2
uhbA+I9tjj5ug7D32E2qH8mDKDHv2diBczkwcPG7wYOCfnC2mJCNudWIPp58
+9lPLBkuxnXTUeiTQKkrUiHyWj+q2BbhXuWUBc7nJPNNMgehLuHTtuWoIVS3
1eiYD8VdsNHmmfE799/3Tv9vnLlHaX028zt62e1v89Y2Dw7kP9+vxTz+39b/
mQ3DCv0BgyhKMfPIaaFiOHu1rePK4//vf//hiHNnVL3dD7QlVbT0YFYKtLKk
vGLwHYMKyS5nbo4IKLzlMDA+fRI0jGRlC/H+6qlNCT3Nh1G4PZtFHsE3enhG
df5P9pHMl05sNRe9j1zvZfT9iYkBh9Q3NSyzJIgubHF+vbcB1ZecjMmgugAa
Jae5r2SSYM8rhz7DMxloPMRGart4BLj01zSsrpFAWPXw1tzIl+imXbTxW/U0
4Flhf+ySQ4JbXFwsH22+oF9caUvT0plQwYVWFc0m/st2uHioHZYPdyMXw7gG
ddMceJGV0im4dwwOiw+9Gk/9jZJXuYK7NG6Bwh/evLztIyCxbFGce+gDWrC/
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
83d7wmcS7LWcIOp+Gf9Db8r+f+hN/R8TdYHK
    "]],
  Axes->True,
  AxesLabel->{
    FormBox["c", TraditionalForm], 
    FormBox["\[Gamma]", TraditionalForm], 
    FormBox["Efficiency", TraditionalForm]},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotLabel->FormBox[
   "\"SVM Linear Soft c-\[Gamma]-Efficiency\"", TraditionalForm],
  PlotRange->{{0.001, 100.}, {1., 6.}, {0.9270633397314999, 0.969289827255}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.670375935776239*^9, 3.67067764498669*^9, 3.670931215329771*^9, 
   3.670931273998657*^9, 3.670931359086358*^9, 3.6709314461428013`*^9, {
   3.67093153199514*^9, 3.670931579488904*^9}, 3.6709317267899227`*^9, 
   3.6709318557661467`*^9, 3.670932002698916*^9, 3.6709320433890257`*^9, {
   3.670932081622251*^9, 3.67093209248002*^9}, 3.670932139425377*^9, 
   3.6709321842883377`*^9, 3.670932321601253*^9, {3.670932486496838*^9, 
   3.670932552789813*^9}, 3.670932672186058*^9, 3.670932764947885*^9, {
   3.670933197725175*^9, 3.6709332252440434`*^9}, {3.670933695772834*^9, 
   3.670933705749578*^9}, 3.67093937948001*^9, 3.670939417182568*^9, 
   3.6709397013290977`*^9, {3.670939906950098*^9, 3.6709399221756077`*^9}, 
   3.6715409777913427`*^9, 3.671541966397128*^9, 3.6715420542690973`*^9, 
   3.6725702866804247`*^9, 3.672571592910342*^9, 3.6726438958410683`*^9, 
   3.672644192459403*^9, 3.672644357831779*^9}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
XuQ3oe8sXqiHHxfUI+RJm97y57b5+u+nFXv08zf898oGjzynMQA47W+JfxrY
7r4rVQyu97Fo7+e2nPWpig48D12/wvcVNQxuXL/EeC+aGxkL4skPFZ4++sYj
Z6v9Tjz5gXMwZxKuyxmZC33k+amPPD/1kc8XKgZzkwKABwEnnR1iH4V1sXgv
mlcZG5kL+nNOOnMO5lgK9Twk9lHQjdfjjJxH0J8fF+QR9Odzn0j/dlcuNRvf
o5miM48PAI7iqS+Me9GczFgQbwOc9OcczM8U9OfHdUbmgs48P+nM85POfO4W
6Xz6oVUHskq3Vurk8aQz50HASWfGvWjOWCyIJ51r5XxdVCunjaIDjyf9OQfr
EvTn9Tgjc3hc0p/nJ/3DefV5aMWe5Dl330PKc9JIZ86DgMv7eQ9FZx4v7896
POn8uO+k99TK7sZ6l7N9VY+X93Odg7mgyn6u1yPv5z0UnXl+eT/X85POiew9
Er1HTRff5wjvP9n7FuH9J3+fTO8risX3b6H16u9JLrL3XU7ju4bR4nuq0Lqa
l3D2/iHE9fcq7P1DaL3NI80VD6130dC71/cCz3Hx+S7ES6eEHr8my/Mn6f32
AvAeewF4j/0A0JPPkyQ9K4jxwvtnNk9S/Hlcjfuca4fqnN6LVvx4wKqNXnpf
p3M2B9KH5kPSe7l9Tf/2w2c5vyjv33qu776k4aECQ2edryib+mzusZvKc+7/
tJ5IN6Tzv7ue/6r7LnRd+2ff/6D3PFfE++3QcfX3Sy2WuM0fbamgyfFNxedK
YZ981jUnb9G6Wsa69Ocv9jwo7J/8uYz2yYYVs2c8tTdNk9fFnqOF/ZM9Rwv7
Z8dzFbOzt9VU6mfrEvbVNV3eWWK9WU/ReWuzjV1aTKqj9CXu8uLoddUbK31k
z02CPg+efGv7L7kNSuLputZH1E3Qp/Z3a0dUa1pXk/s4cfSCqrPONlH0SWfP
QaTnwqxlp/MGParowHQW9Ows6iboc2l/3bEJAx9T9HlX1C20Xv15/7h43yXo
84mop3DdtIt6Cjo0Ts9Y/ON1/fss0q0s01OYa5eZ1KvlT80V3WqK91eCbrVE
nQX/TBZ1FvSZmZu9ebm3paJnjqgz0k3wQ9bOHpP/XF3/3o3ul36b9Cd7w6NP
KH6b490etSO9m6LnE+JzhKBnxagx0dnTOiu6cT1Jt40TGpRq8t2Tim6txPsl
Qbflos6Cboe1pROX/dxF0We2qFtIny0l+vQXdRD0KRJ1ENY1W9RB8MkDbL20
rvXiuoQ6D4p1CvWg9wn/7Hs89h1fKP7OzQsjXmsrf98Xqw1dNi7vwMsyLwZz
a4OAB8A82ACYH2vWZnTtUsVTSa4TzQGj853nB/NphT7y7yIpD/8ukjjPo86n
1evfUqfw8aQhcj3ByPUI/uE6gHmYXjC3VtgHeJ3kK56H9OR1Ap8I+wbTX9CT
f38K+gL1DwL9A4BTPD9uAHB1Tqwcz+sE/fWpcxT1vkeukzivB80lVucQyn1h
+b1oXmts5ON60RxFdY6rHM/qFPzGdSO/8TptoB4bOC7wp+BD9n204Cv2fTTy
p3A/wPcT8gP//po4//4axReD+OLIPhTq4bqh+sFcYuRPrzrPU/Yhr98M9tsg
WG8QrBecd0KdfL1grqkQz33rjLwuL5oPps7nlOO5f9A8UnNk3wr18PPRGbl+
4Tzi/aXziOUX4vl6bWBdgAs68HWhfQCc10I9vI8Uz/1J9zPcD3Rec/3VOcxy
PJvPIJwvbD6DwNl8BoGz+QwC5zqD+ZAC5/Wj+T/FYO5TMZj7RHM1WT0+dX6j
zFk9PnXekZ5fv8/ncy2I87kWxPlcC+L8vFPnEMqc60P7KufqXE05nutGnK+X
OF8vcb5etP+r85HkOnk9QVBPENQTBPUQ5/qr8z/leNYXuJ8I7yvEfgnxTAeB
837RPsn1Ic71Uedkypyfd1QnP++Icz0pD9eTONcNXAeFfYyfd8SZDsJ1hOuj
zpmU47lu6vxJOZ7vh2DephfM2/SCeZvoOii+T2B9jAV9jI1cj8B5X2JBX8A8
IuF6wfW0Ad1sQDcb0M0Gjkv3b/y4dB3hx6V4rr86H/IfHxdcX3zqHDw5ntcD
5vV5wbw+L5jXJ3B2XJ86f0/m7Lg+df6ezNlxBc51A/MDhXh+PqL9XJ13J3Pu
c3Xency5z52R60TXR7TfCvseq1+I536geLYuIZ6tS+BsXQJn6xI4W5fw803u
Q6qH+xDs5wLnPiTO/UCcny+0j3Hfgv1N2Oe5b4lz3xLnviXO/Un8PwH1RG7Z

   "], {{
     {RGBColor[0, 1, 0], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtlntMl2UUx9+X93nRDEHLINLSagqoZVtQsKxFWqupq8g23TKba2ttpbVa
WwbBKrC8hFhxkaupBJqmkgIqSXjPK6KpIIompFlZWpm6tM/ZOX+c3/f7fJ/r
Oe95zvO7c9qMjOkRnucdwAKsgZ8CcC8Y7zzvEd/z2sF3GTQM3oj9S99ixlwD
b6HvG/itYDx9JfDbwBb6PoE3gQvpS0frAB8Dv/a03Y/2Sngs2It2Jry3r2su
hXugj62WNcEfsGTOkR16Xg/rFqK3g4exz8QH8Cg2D77NeBH8BFiCvQdfCFax
znj26QbvwxrQE8Au+kagHwFHs89p9DHgOF/P+SR4OVAfT4E7ZT79OXaeKvSL
YK7tVQZeNf1PcCxj2+EPg3/TroSfB2ewzgDWzgbfxIrRT6JPh8+Bb4ZPpH8V
/BnwXub/BE8B38GGog2J0Fglw9vASqyRMUlgKdpeeAVYR7tAYh/q992IXgBu
xa6gT0aPgtehDwZT0L7ydN07aI8FT4LlTuNxCnyAvY8yZhT4EnYMPhnMwDrg
48BJWA98KjiEOY8z9wS4HN/6w7Pgj4JrPM25t2gPBD8Ab8fGwLvAt7EllhsB
tshi3oFVwH8HzwZ6Zkf/Wjkrcwfj12757uxfAG+B/4z+FHyNxSTW9B54eqix
WgCPgzfCa+F3wxNZ44jkJLgBfZ18E/Qdcla0UaHuW4YeD1/Ged5n/BLwOfSr
6BPRO32Nm5xjJ31xYD79OfCZlqsNtGvQ72L8g+I//DoY6TRWA8Unp+d5Xvxl
zmx4M9hEexPjU8UX2nno3wYaT/m+g5yOaWbM6FC/7wr0m536tRZ9JPpqcKun
56jD9nvq8y75Zvg7mzEXWPdL9CvgX1gtvI9TvdjuoPgu+T8J3I7FMPdVi9sg
yWX4L4wrZ8wZsBr9BfY5B/5h3/ccOAWt3tM+0WvgvWzNaNaZyjp74FPgVcZf
hC+Cr4RnMi+wb7oMnhRqnOX7JlqeTGB8EXwavJv1X3HKn0UvDPXuS77PDLWG
vMzci5LP2GbGp8p3M/2C01ilM35OqPWq3HxZSv8WT3NF6pvc6Vw5c6B3v9nq
ZxL9Q8H9tMskZ8Cnfa29UsveoC8W/FRqJ31Z6FXg677WgddkrNXkTYHm/Hy0
GPaqpf0x+kawzepqJ1gq+QG/R74VY3Pg/cBfA713/4A3+prbUb76LvtcsjPM
Ql8faBxapF6BebQjGZPr9DzZ6NXgCqdxSHPqi9TwHeinzd9uyS+n9e+M5bmc
pybQ2nUZPQNfvjNfZN98tD2e3uEypzkzzGkOSD4/BK7CPqI/krn5FrfFgfI+
6LPo/97el0OBrr/A3pp5vvol8+V9ybX7JffXoX3o1C+5s9dsr1x4FHs1O63J
TzjN80T0ZKnH8h7BneSnxbAe3GXv8m5wu/lVDx6jPRwsZF6ar/cuFexvdfJ6
oLVa3rhEq5nL4TFO1yy12BZLHWfeQastwg+BrebvvkDrz3r4cLlrVmckl4R/
Di9C7+30fb9J7qLT/wlSE0p8vReSc1329smbGERoPZHvF231ZwCYRXuDp3c1
kzEJYB72m73px8H/sPvRDjD+IHwu+hbzRWpC6DRn5MwjwBuc1qhLgca/lblp
ocZcYnnWamkbPAV9pNR7rMnXuyBv0I9gZaD/VcoDzSt5E487fTcl9odlT3Cb
5IOvtXe+fbvztPdJzMEE/OqU913eWNOlHoX2bkp9lDrwhf3PkbtQDY9g/Qqr
5+vAvr7eo2hf/0vMtf8/ccxvhfcF/wde812V
          "]], 
         Polygon3DBox[CompressedData["
1:eJw1mHn00FMaxr+rQgtjlBaV0p6KVkkL2tRMWohsI8sZ54wlZIxWSxtS2rT8
2i3JxJiQooUacWZEsrZhFJpmRpYZgxnm+Zz38cdzvu+97733e5d3ee49acQN
g6/PkiQZnyZJoe9dZZJ0UcXpwp2SJwkThaukvLqIOnSdhTskLxYuljxcWCT5
buGMLMZgrIXChZKHCQvKAPIFwnzJv9aYnyTRhrazhYGSfynMkjxXGCT5PGGO
y+dKPqA+I4qoQ0cf+k4WzpS8S/ph0n/DvLW2LSo/LnmJ9JdkMefFXlsHyR8n
sUbW2zWLNbCWpcKlWfSh71/yJJmhtguFP+exZtZ+kVAhearQXXI3YUoZa2At
vxBmSr5I/7hQuF/ydOGA5P3MS1haRF1/td2dRNuH9I9xko/WGqao/ID0A7Jo
Q9vJqjtSurFqMz2POsaeUUbbu6TPpb9d+gnST1T5bmGi5El5zJm575F+OPMS
jlf7aSrfKHmqUCWNOTyi9ter/DOVjxUeV/kE9a8p9FJ9b+FY4RihhlBTaCDd
o2r7iFC/jPJiyds1Xh/pDwlj9f9mtPHcSsmjk5jjUu9Nc6GF8JlwnvR/kP6E
IuYwQfK9Scxth3C69E+r/F/pPlT5TJXXqHxiEWfC2WAj2EpboZXklkIbyacJ
rSWfIpwq+R6hRxZnytneJ/ST3Fe4V/IuzlPjv6Dxa0meprqzpduv8jUqP82e
J2Eza/LQY7+MwVhves7M9X/CW5I7abyVaj9P8kdCH5VXq1xP8gdez0aVG0j+
q/XPqbyoCJ/ENzsJE8qwrf7Sr0tiH98WOqj8R5WPkLxT6K7yUyqnkncL49S3
ueoWSK5TRNseKr8juaPG3CC5kdBf5Xkqn6/2Q4UHJXcswtfwua8k79OaHlT5
PuEtyV04H+EktW1Yhk2Nl65qGrZ2gXC+8DvpbhdaCGuYr9BMMkHqIX2eFI6X
vCIP258iPCb5MrWpqrnsUPlc4oMwS/JiYbf0/8xDfkz4WnJPtf9EYx8Qevif
bdT//STmwn73sj3Vl3yL9LWlf0/loUXYILb4sOfDmlaq/Z+SWOuBPGLFI8J+
yVvysNW5wk7JudqPUfvnVW7p8VjbwDRs/d9qs0zl3wuVVf5C5SWSVwnfS25d
hC1gEx/any6RvFZ1jSVXKsKWsKl3JR8U1kp+TXXnSP658ITkFUI1yU2LsCVs
Ctv7IQ8dbfBr4tWANOaIf9fS/CtU3qpyZ/t8Dce0A/ZX1rJe+uXEjiLWcpbq
9klupf7PsL9CS/JDHrEKn5mfh333TeP/zJU+Z3l9FZL35rGX7NHfJTfz/LE/
Yj/+3EDn1VjlK4s4E85mlMo/YovS73Y82qxye3xS5R1CO8lHkNMkvyR9e3xH
5VfTOP8BLu9Mow99zxD2St4jdCnDhrAl6tB1J8ZIPlXoJnm80F7zayeMKwPI
pwljyWXEKLVtI3Qtow99qTvT422RvFf/uJjYofLGNHwUX8Wmse3XHW9fyMNX
8IkX88jB5GJ8GF/uLGxKYwzGGix8K/kNte+n/v1U/jSNNZFfL1e5WhY+d5nz
G7mrhBOUYXOd0/C3So4vPdOwgepFxM9ujke1JX+jOS1PImb8I48xGKsgx0oe
KnyRRn4fUkT5e5W/E4ZIvlWoq7Z1hFFlABmfxXfHsH+S2wqjy9hj9po6dNcK
1Z1/yYfkAHIBOYJcwZlyttgMtsOe9BUGea9aC896v4g/nNGL2I/Pm/0eaD4D
F9qQx5lwFi8ZyG8L75D/HN/I8bfhy8531VUeo/LRwlHOIeQS1tDC+Yy1scbm
WdSN8Xpbej0/2Vsr5ztskdiLbTfLIgbjO/XZS+HWLPLZpCTyM/5JG9o2934y
h3ZpxCfmBmckF8Kp4Fbfqs9/8ogrP+LfwkeuQ3ez2s9PIsbfQvx1/sAmvpT8
rzzi9lFeO+BfxER0r+TBXeYJI6UrhEeTyHnkvqyIWEzO2+m9wzbhDOzhMPtr
R/MDuBq2dk4WvIq5znO8ZM6fO6d87bkxZvs0/sm/WCNrYU2s7y77d3vzyztt
f+3Ml++wfZ5m/g0/Gyx5iPk1NoPtDDJfXuL8iw/DVeG0Q+3P6OgzxPkZHTGW
WPuy5nNGETaOrQ82f70cPzZfh5NfKYwwX4YDX+U6ZHjxsjLa0295GbhG8tXW
XavxP02iDh38C27S2XzqBH1rOn4QR7Dxyth2ErYPR4UHVsC18/DnkWp3Uxa+
Xk/fE4Wb8W+fWUfzH/4FB2pr/2ZvseV6botNw+cfSMKm4WffOd/Ns73hw/hy
/lN8KyPWEHOITXCAJpJvdHwByCMdf9hfuHWtLGILY+SOZ8TOtfrH5CTWuyQP
n66WBifC14mfncxfqxRxZuSvp5wv4WRwsw2qW1gER1ljPgB3mWsOBPfZk0cO
Xe38Tm79lL1Nwl4PSi7NFxYJf8sD1ONH6JoUkXsvVf8v8S/N4Tn4pVCWwU+W
wmXgI5yfvhPh88SfLHyCf1WYD8F51jsfw4XIsdwFbs8i936WxxwPei6V7K9w
uMN55AjyPjyJ3AHf3Os6dMSQuhqvThqxhXky39uIb8IutZmTxJw/kXyn2tRO
w19pD0dqqvJvs+BON8HRVK4pvKr21TTHaZLvF44po44YNNJt4WBwae44cDNy
3uNJcGxyITkP7s0dglz4lfneXM+nhvkZHH6/x2Tsjxw73xNapBH/2G9yOPdN
cgy5pkoZ+885VJX8YBHrvUfYlsf/WDtzyp1/2Uu45pHsne0JG3zLuQ4u8Xka
Oa+6+dwy9+9nf4Gzw93ZP7jmdP+/QxFcij1j7/hHZfPC44zVjvfovjMfWG1+
OtT56VXb24/OJXBT7p5wvI+TuMPB/eA8cLvd5vdbzcHh3txHdpk/wslfk/ym
MNP2/67kQ74vzHIZe0RHmx2SN+exl3Pc/5D1K22fL+dx9yGHvS95kzBV8mzv
/+fm85wh/vmB88s0t39d2C68kcf/tjte4T/UcS/mbned+v9QRJs37DOfeY07
7RP7HAN+ugfx7yu0T7/K4g1guGM0sZw3GWL3qjzuVXAUuMow50M4GFzwcBq2
AMfkHnWqY2wD7/8m7w/x7Mk8zmC3+TF3L+5/vC1MtX6sxj8mDY7D3Z4z5qxf
SSPW8B6ywnNibsSMUb5vPUEsyYPfwpkezuNOf6JjflufP+dxnPqMK+JNYlEa
bxK8TXAnGOX7Sqci7qpbGSuNO2sf2/+jbs+eX+f7z+oi7hy/SeNMuIsQIy/1
/WFlEXdi7ibcUdoWEf+fFZ4T1jnPjXY+WpwHp2WP2W+4Lj7Hfh82391ge2IP
2Q94JnyzsdbbJIv9I+aRo/AddJuFk7Nos8XclLZNhdaSTzH/32S5le8TG815
d/i+08V8GHmn7zfcQfYlccfhbsKdiLPjDLkr9XI82JbG/Qps8/nSljeFhux1
FvcXODPz2+Lx2jrnY2PYGhyB3DnZ580dabP3AO7NmXF2vD81KiMGEQuJ6cQm
7jgNNVajLO4+6Kc7nhM7mQNzoQ1tqwsz0njj4K0DENOqWUf8IFZggxvzuA9z
V4YDEp/GF2F72OANRbydzUxjT9gbOCZcs1cWb3gAuXcW74dwhMW2mbXmRBWu
Q7fefGKm//+64xl16xyviHX41zN5jMnYfbJ4q+Rf/J/3sW6uQ8d7F++rvFmd
lcUbF29ZvIH1zKIOHW9eB5J440IPhxnvfMP/znZb3le7ekzG5j2Mt1yATH/e
epsLq9LwOXJPC9f1da6BA8GFeB9q5bkxny7+B9wXbst76QDvYy+vjTc93qx4
myVnkjvZV3yPGItP8r65UGMvEGqUwVnhrryB8zYIN77CsROO3Nv5hj70hT/y
FvVCGndD4swij0ebPp4Tc+GdkXsadynurHUtc7+q7brniU1pcHjeTdY5dmz3
WXNnnO14yl2SNxlsdX4abzW8R1V4fbxf/x+eYgHB
          "]], 
         Polygon3DBox[CompressedData["
1:eJwt1FdszlEYx/GXvq1EBDFbitiUthJtKSJqC2LUjpEIQWIFsdcFIoRqb+yk
9gqh9gqxWutCjCsEF8SdcYUEn5Oei+97fs/vPGf+n/O2nrlo7MKaiURiIFIx
1s8YFON3jUTiYTKR6ERX0BdwEteid4q+Tnems5CG1SZbg836zuurw9tJ78Cm
6HWN813EFdzkNUOF9fPFeaghzpC3l96Hg7jMywrr4S+W8Xpo/0V9VluIXkga
W8WrxFXc4vXEA2ssEM/HGXGuvC72m4VMVPHa8FqjbTxjOO9PzArn1+ajAPtS
nDXcGz+JjeImxpSGs+lvSqejhG7CW6ytkvM4pXru47wTOB3vcTAGobu+F7y7
9FbUpkuMOYKjqB/vtARlca1P/L32kiFOxxLeI94OXmNxIyzifcUK51yJa/Fe
Npqvh7gAuXjMm8xL0in4FeugDy+XzsEd3Obl4Z41pomn4ri4t7yX9Ah6PCZg
Ay/bXDnIxxNeF9w0dpzc0TgsPiRvtv5ZmIbnvN28cXQxRuAZryM64Ef8Lt20
RfLe0u/wBffCNw/f0Zh2uBv33B5XrdtfXBTqSzwjnjcV9VDJm8fLoNNRN3qr
eauwBt3iXS2nl9BL0SLW0EcMNPeBuM+w34O+x1rr1uKnYYt4mLHf6W/4HPec
wDFNTXEmlonL5U0w90RMj/fSCdflDZczNLwRcWqofbwONcrbo81Ec7zBAF4L
batYf8fCHuPb6h1qxnzrxGtxTtwQDfA+nqdlsrrGw5sMb3MXKuK7vGHsqPDd
US6uJ69uanW9lsa8UtyW10/cFxlhL7jEKxT3RB3xNmMKnbMXivCUtz/8N9Ez
6TmYi/Vhf8Ys1N53nw9QKm8XyjAy1suHePb92mzkYJP+vFiLm+kteBXvLS3e
Wbi77fyh8oagX9zLFN4fecX0pPBewpy8W+H/LNxn/F/7D3uLmwU=
          "]]}],
       Lighting->Automatic]}, 
     {GrayLevel[1], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtlnmcj1UUxu+87xTRNkyLZUJ2MmMpY4bIMtkNI3vGliWzNYgmlWb4kF2E
Mm1UtCCkfV+0aN/TXiqSpCTJ1vc4zx/PPN95f/c9713OPffWGV2UUxiFEHag
GK3jzzT8Nrwh6gan4E1QL/gAjc+Bs+E0vA0aBmfjndFweIDezYEz8HqoJ9zI
4qGr4LF4S9QXbm7PUBFcil+OBsFnKWZ/xUlF3eFaeAs0FO6JV0Htrf9qY+3b
6nk3tT8TdYRn0v+OGktjPCEhhFVwwLfz/yLwdnwnOgEvSQyhpvUJPi92tj63
wo8Hb39MMj6KJvHbKDwXvwaNh/PwduhKOEfz1k9xLkMD4S54puaqAX6B/QZX
UpxieI7aDIA74RehIXB3/FyUBSfjI1Cu1uI7xpwGf4P/jFrBe/GnUC34efwK
9c3WcaD6Y/GvRRPgIvwT2jWEt+N/o85wkp63gHfh/yj+bvxsfusDN1PMkZqT
3/itCfwxfhh1gavy/Eu4DXwQL0PV4PV4bc1V69j7OU7z+RO/NYd/wMfx/9Xw
ZLyHtVMO2PMR8CB8tAluqvmxcRXj//F+JvwvPlHxJ1g8m3fLGZsbrelIxc9V
zN5oLDwe/5b3M+BDeB/ti16xz8mlys/hyu0sfLByoxDfgmbCM/Bn0SF4Abm3
Hi6DN9lz4qTAW/FVKMlyFZ+B6sIvipvBX+Hvan5+xO9FleDl+D0oGb4fvw9V
he/CN6P68Bv4aXyvNfxZ5HnYQzn5ltq8hu9Hl8Cf4p+jyvBz+GP2DvxM5P/b
87X4Nt4/Ynuccb2uNk/gr6J68Mv43agKfAd+Mzoffhifg6rDG/FZ0cntGtbh
5dZXeBm+ElWAF4uTFKdcY1yNL1D8OyOfT8vndyIfV5py6UnUQHm+Qd+1PHxQ
8/wSvgXVgB/FH1KuPoIvY4wF8I34QpQPX49PZMyTtH/z4Sm2vnB91aUz8A3o
OngFHsU+t/uImaj6Ux3P4919cEliOFmws1SXLOZ+eDpebvvW6hGeovpmdc7y
qhQuoM1N6mdXy//gOXY4eMy22BG++2vw/N8dvD8dVIvKbDzaa9O174r1fIq+
uxodhOfzrcpw1+DniPXtADyP5xVV307XXE0Nfu7YXO2FZ+NLYz+Plmu/Z6pv
KzVXY2I/s2xcG9WfyZrbEu33UVZzgtfPPcHrc57WxfpmezPB4mm9brBxxL5e
82KfqzGqG2/z7caqXWu0Hx+P/OyYpf1bR+OtEXvO277ejN+idVkSe93OVm20
86538LP1FLgdfCLyb9XSPrLxFmq9rFaUaOxWSy9WnqzTvrA60C/2M6ID/p7y
+U2rQ7Gfy+n4K/yfCn9tMVQz28de2zNUh6tp3Svga7RGt9pYrK+2vviQ2M/9
/rHXJdsXm/Cn7a4AP2D7OPaz+0LlsK3RfPhDnQVfqIY0hf/C/4h8HmxdbD/W
VMzvUcvg58ta1ZYV+CL1x+phvvJzauxnSqrqod0B0uGlcEHs59Gw2O8eVsPt
TmJnxODgd489kZ9rO20vRL4vjkd+rtmZZWef9aeRaojFTVf/t+n5+1YjVT/r
xj4u6/8u1clk1aW+sZ9TQ/Gjkd9nTo39HLStPhf/U/OzQ3XS5mSrapTVT6vJ
c5Xb02K/a9kdye4GpZHf72ZHfpfrFPwutBBVtDXFP0K14RfwX5TnH0R+F1oc
/F50TPn2O/4/kGQm6A==
          "]], Polygon3DBox[CompressedData["
1:eJwtl3W8VVUQhbdnXwmxEwkFgzAAQZB6IgoqKiolrYAK+kgJ4VmUQTfYgWIX
FmJ3K3Z3AwaCBfb6nPXH+t055+yYPbNm7bl1B43sOqJIKdXdLKWSfn/Qw4H6
bSh8I/s14VXh6yKe3xfeE34S1gs75pQ6amxr4Q89rxXWCP8I/xbxbpOwQ46x
v8tupbEdUrzfWMS7TR7LvDb6drhQ0vgsHCy7mfCb995HdvMUPjwvPCe8IqwS
Ngj76lsLYYHsj4RGKfb8RPav3p93H8j+2GP49qnwrdBU3+oLb8meJlwk3CHc
KWyXw3fW+EXPjwqPCK8Lbzgm+PW28I7wsFAnhU/veo2asjdPsfaLQj3ZB3i/
x4Q9ZVcXbpQ9o4i81EjhxxJhC9k7CTfI/lxo7Ph/5Xhi847z7C9/j3O8t5X9
puO3u/CS7OuLWIs1r/FZ+MYYzsS7q4VlHvuoz8OcB2SvdrzKnJ+/hb+EStqr
co4xK70uc68QttfY2sK15hTc+r4I7hEPYl9LuN8cauv4wK1LyYG/XyV7sbDI
Pl7j76xfWbhY9hPCXrJ3FW6WvUK4T3hGeFa4ULhAmCRMFm4tYqxc//95lbn1
hfClcFsRuSAnU4rIEbnSTzrfPOH73sJd3v9x4UnhKa/BWcj5KvtCLBqk8OlO
r8Hcu4WXi/jGmIdkLxSqyN5BuNx8bin7MPPxQ3Ke4t0HroeDZFcz/771/sR0
nezNcuSuqZ+fdWyoeWr/accPPr0g+xafF47eJPuSIrgMpy/zvAau16/NzyaO
xwvmSzOf9zOfr773/8zxZw/WvtnxIvZoylrnaJLH3OoxNznGTzg/5A+fb5d9
XRE8u8+5Z9yern9yslTYUXZVx3O+ME+YJcwuQkPQkvbC1jl4iv9o0l/mHnNZ
Aw7C+XYpNJRa+LMIPWvi+vyxCO2ivr4roh4bejzP1CxahCZutA/4Qt1caVzh
M3G2uUKlFDVxsfPfyPmZaM5xTjQOrUOjqGt0FC1Hz+DOsdYH1odbcIy97y2i
1uqbf2gOtY8GoG2VrM+d0KwcGoFWUPPU/oNF6AnxuYfYa8xRKWK0aw6Ow3U0
HC1H/3QV/c/hiX5Xz/xi7MwiNBEtnGZuEFtiDEcaas0GwiFC+xy1XVhP4c1B
etdV9hFCXdn1hKNlHyLsJnsL5+8oPzOmjtAix9zmwoGcmXFC7RxrsWZ92a2E
brKP9POWOdZmj71k/ywfOss+FA7o+VQguw9zZDcRGgsHCE2FNkJ3x7eR7F18
3x6PBsqu6f2p581l751jH2JALHbP4Us3z2/qtY8WjjH6ej2+kZ89fMbm9uU4
+8e8ZkKXFPdzLe9xjOuDvUcKp8nuL/SWvUSYIHu4sFD2OcIw2eOFBf6+WLhN
uN3AXi7cJVwizEVbhRdlV0h418keIwwtRb6ILzVVyL5Q736QPVool70ox17s
OVv2WcJQ2Wf6ebowTZgnzBfO1pz1+jaWObJPZk/ZI6gv+8p6U1L4SfxrmCNw
hf1Ye7Jwo+w7cowd7+f53mupcK1wrmNCLBYaC7wPsUFfqW1qfI71uq35W838
I79lfm5nbh5PnuBijlzAzzJyKfRLkcOWzie57+vnNubvidSA+QFXOgvHCj2F
k1Jwku+s2Zaa8l7wv6vzf5j3Y+3BzLFP+NaH9+YptXFCipo9NIfNu9aye+Tw
pZvX20bolaKGDs9R48zrQF0Ik4VRKWrqFL/rmcxRci8MSRGD7t6vh+wB+CB7
ahG1yZ2J3qMPaEEP+3NajrNwJuKBhlV3zVA79Ktlrv/tZXfKUTvU0H6yt8pR
K9wpVXP0iPSKVXI8U6/U+sGezzu+bem59EP0yPTG1Dv3TSX7gC/02PTaOwk7
2+7g/Xn3tu8faqaKc0puh/hsaFwL57TMue/jeHa2D/iCxlDvTcwfNGln+1Ry
TdS0D+zb2GNPFAY638SbGp+aQiOofXpA7ljuVu7PAR5P/U7IoZenyB7p/BLf
3ineoZ/0u9xlvR1v8tne+Udvx+eof/I93HyCH4NADn1mbE/zaw/nA76jie3M
FzjR3DymHsrxMUftMZZ38HycMFaYIczMUe/DvV8Fdim0As1AD9DPEZ7DXPoF
eoN21jfqDO7C4V6uoQHmJ7XF/YA2cx8m74lWosnjnNsu5j85Rp/YfyN6KF+O
sH8TrHdn5jjbuBQ6WcPrswaat8z9E3f8SvcU/Nepk6LXQO84GzFHa+kn6QXp
kenPlhdxt3PH0+9PNB/mpND7Ea5X9Hys64XaYQ/+a6HP+Mqcu3P0W63NR86P
HsCVDZyhFPcKevyHMKkUPRG9Lf0ivdK+OXJDDM5z3tibO+UsjZ+aQ1/WkLNS
3CdwE46ONr8H+Lw8D8zBYbhbYf4RU2JJPM7PsSZrjRfGON7wZ7C/n5FCc8pz
4HTP4Rt3bC/HaaRreIjHlNumdvGZd+g3enq613/N/eduKXp/+j3+a/Af6irn
g7u3wvGdXsR/I3ps/v/AmU0pYgqXZpWCS3DqIeKn51/Mn8vN999k/+7vy91f
csdd5t67sven7+3rGqO2qNduroFePju6f4Lj3y9Hjlf7vOSeeHJW7vMp+JfD
5t3ZOWK+NkWMieecHL6Wezz1wN1/svlQ4Vye41q+yPyAo6PIVY5aG+P1uW8G
e/1RPsMwcwAu0B8Te3LA//GOPhNn6Z+jL6Ze6HH5H7rC4+nR6f8Hmq/oFePh
L75yRw7yGv3MwYH2j7PDgZNy3K/9rQ88L3X/zx706/8B9Wb6aw==
          "]], 
         Polygon3DBox[{{903, 113, 235, 236, 1130}, {908, 115, 239, 240, 
          1132}, {1168, 256, 154, 143, 995}, {1153, 252, 142, 131, 965}, {912,
           117, 244, 245, 929}, {945, 944, 1152, 251, 965}, {907, 906, 1146, 
          238, 1131}, {910, 116, 241, 243, 923}, {930, 929, 1163, 246, 
          1133}, {920, 142, 254, 255, 995}}]}],
       Lighting->{{"Ambient", 
          GrayLevel[0.8]}}]}, 
     {GrayLevel[1], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtk09IVFEUxu+b3gu0ArGlaE1aOwlpl4YLIUxQK9E0IVPB/ANaCkobFVpE
4M4M2pT/QtQsBFNw0TQkaSoqlZohphUqYmAmMuEI/Q7nLj5+3/vmvPvuPfeM
v6TmerXPGJONjqCnrjHJjjFf4QFBH9kJ/EVHfTnFwzy383zOM6YbX4DfgR/g
J2qa4V00ha+Dr/mtCUZS3wK/kLfBEfIOGOvpd9+Qx8NZ5Cf3wxq+l4Cfs+s0
wiXYhfLwy/ASeog/yTo9+BL8HnyJavE+8hTYb/RsCeRX4AbMgsPkmfAWOu3o
eR6gcfIb8C11kzDN03dln2fgIHpEHkH+zK75E9bDIDX34DV0CuWi+2jC6Blu
o4/4UliOJvFVsBq9w1fAGVf3c97VPUzhM/jWZUf7c4fevCAvxP+GPp7XePc4
DPL8g7yQ+k04T74C35PvwUryMfwqeZHcHTrGew3kQ/jH1ER7esbP0h9bE0lN
Hfmo9Jeas57eo6x/FXaTLeAHHF1H7jmOmjIYIC92dG9rMN/2TfIk2IcqyQ9h
r/UhmRFX72fd3rv0csvm0qsLrs7hTfJtmGP7LH2ReZBv7tv1pcf/4Df4nZpf
Mo92JuWOZWZkZg17i+Ksi9ijMGzPtQs77Ww/h6/QNL7f0X6G5D55NyBzjE/H
P7H322r7/xeWejq3MgOprt6j7P+Pq+/KvGd7+l+T78TYnktfEz3tj8xIGP4H
gz2Hbg==
          "]], Polygon3DBox[CompressedData["
1:eJw1lllsl0UUxb/5+312ARMLxQcFtIr6ojHqm6IIKJpqoZQAGqDSVtlqC4VE
UBLXB0R9sqj4oqA8CW6Jy6OY4AaFEoUuRGkLRBFp3XBjUc8v9/hw/v8739y5
M3PvmTNT07yyob2UZdn7Qi7cpp8v9f9syrKqIsvOqL1E9lLhnOwH9e1H2SeF
JUUAexgf2b/LZ5n9T+XRbkkRk9j44DsiLCtiDuZ6Thgje65wWPZB+c+S/0Nq
/6H2n0Kb7GnCci14hXC77Po8fI+rf7HazcIPsk8IDxQxhrF/Ce1FfKOPPbCX
c/o/K/wq/Ca0socUczL3CuFUim/0zdZ8PZpvm9pXq71W/w8LHcJq4QL1b1f/
FuHMebEH1rdZfROL2OMm2Z3Ob536v85iT+xtlPCE+r7St015tNer/ahQKXu6
vu1R3+tqT1K7wv3EeE99jcJgFvldpL5xwvPOb7Xssc439bhFvg3eDzlYWcQc
j6dYA3Nfr/6Ps+AAXDgtrMKXnOaxni71r1M7k/884aDsHmE+9fJ6GXPaXGgW
7qdeQioid5/I58Y8YqxJMYbYx2QfFfqFQ64r9R0QBm1T+8P+Nlp5HCUkoSQ0
KcYRxbpI9jrFPqr2jBR7etX7+VuYmsdaO+Tzj/r/pZ5FADvT+DVF5IhcwZtV
RQCbMYydqRgHssg5uScH5KJXuNf8PpAiR+RqgrBV9hZhfBE1pbZvCFfKvkR4
zflgfd8Kc9RuEL7JY/xmn5eP8hizQ+3t5gc1p/bUnNq/rP+XzD94OM17v9hz
kesjQp9zznzz9f+54k+WXaU8XCicL5SVIv4z6t/o/fbJ5+YUZ4CzwJk87jo1
O19lHk8uFxQxH/Mu9Pmq97gma80J13rIPvgeM7+rFWesUCFU2h4jlPvb94pV
K98PtJ5Jskfy4B38Oyn7O6FO9ofqvyKPsVXeGzHI2YYUe6z2mtAKzgxrLRVx
7jvM5WF9WyD7C/Xfam61qr07izyvLYKfo83H6/TtMvU3ojl5xGj3+SI2GrPN
fLiqCA0lFhqLtvIN7my1Hr2gb5fKni38lEe+0Fs0mlzPMj/hIFzsV/sxr5f6
kgNyRc7IDXxGo9Cm6UVwFA7BuQmu903O7yt57JlYj+hbmc8Lte7NQmsWC0NZ
nE30mDNT7nzDjTuELvieQt+ner9wFo5Sc7Rt2FzgfFa4VsTaL/9uoUa4PA9N
2ZlFTsntDGFvijmYizWxtnfVvtZ73J0iR+ydMztk/nGW7/b6iHGP9W7A+kM+
68mxsFBjF+UxZtDahC/fBrLQsnrH67Ee1BaBPV4ffXcJ3bL3CXcWoUGV5vZq
z7Wfs55iTtbUa/1l/M/6dl8KjnWa/8Ou0xT773X8uiJy8Jb5TW4YA6fgErFY
8yFrw8wi0G+9YDx33IvOH1zjW5/1j7ngBNzgPisv4n5Gq9FX7lv8WUu341Oj
VvpKUTveD9zn3M+8PVqtz+gvdzUcRqt2peA2Pvhyf3Pfw4uaFHcAdwEaOi+F
xqF13Hvcf58Kn6V4o8A37tRdebR5S7CGpdZrtLbL9xVxiPeU8HSK+3mj9YP9
XiOfibKfRNfy2BN7aytFfaf4/YVGjTjvnGX0/hfZ7+j/7RRz7jAn9pmPxOLM
8DYiZ+SONxj3bYv1YrLP5xzvFz37/93UUoQmoU2c0SbfC5w9zvx493OXjiuF
ljE/a+cRCVfPaszyFGfuhjzeMLxNeKPwnuAbbwreEviSE7iw3rlCA5tS3M9o
I2viXYbmslY0o+T7vc3xdlqv0HpyOjeFBpJrak7tecPx9iv3fbXB+sQbrNP6
jLaiL9wtnNFG3w+13s/WPDgKV+Ec3OOOezMLDUQL/wPafXId
          "]], 
         Polygon3DBox[CompressedData["
1:eJwt0l9ojlEcB/Bn65WaO9kNUsMoJeHO30JitdkmYiuzl2yo95VdDBfEjcQl
2W4wm2RNKKZcWMvsgsIFodzgQjH/sjR/Jp/TfhefPd/zfc553rPnORX5Yn2h
NMuyBUyizJ8jJVl2mKPcyGXZWt0a1vFYd19XJb+Qn/Mouhm66czkkq5ft4gB
z11v3OKHnhjPcr/D+Dxnua3bp/snj/ODB7pdujy7GY2uXS73nGmUMaxrSxuX
S5gS3WpWMdm9k9aulMvlU/ItuZoaSnVF3QHa6NNN1Z2Wz3Au9veXP4ynvequ
RW6RW9lPr3HB2jF5SG5iJ2OxJt3/xW9GY+0emrmam/gAh+R2DsZefrJDbiIf
8xrNG5E/8ZZB3Xfq5c00csV4vnld8l25ljo+sFF3wXUxS1jKoJ+v0VfTZfyN
r/HcBl2P60huYh9pP9uj+8hx+QRb6Y55DbGHz3zhNUO6hxyLczXP/rrly1yM
8zKHfntZYbycTuPZVPA+9j7XtTLW9nCde7qFupvp2endRZfW3vG8Zek7ORvP
jDeYlw59MY31A+ks6J5G3iTX8ibeaR1b4n/bpn8pv+JdvPv0fdMZKrA3zsZ/
oyZzmQ==
          "]]}],
       Lighting->{{"Ambient", 
          GrayLevel[0.8]}}]}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0E0zQlEAx+FzVVQ+g4UPYM2adRamhbayrpUMNszQTEqu8bLwCZO3vKYI
z2Gmp9//3kXnTPMb9bVaEkIoczgVgk848tUkY7c0q8faJmd3dVpPdUZTPSNv
n2tBL/SSon2ls7rIMiXWqVJjJ54df49r5lwoiZcidfiP+c2ELw68+9R9HeuI
E/tDOzrUd9r2m77G+9sv+sSePdDHeLb9oLt6r02901v6bHtucGP32LKftc4m
FVZZYYmF/2v//Ze/Y78vIg==
       "]], Line3DBox[CompressedData["
1:eJwt0jlPFVEYgOFhVXYuO0oEEtkSpKE1obKlIBQUyg6yyCK7IBgFojZs2lFr
oQlgQiwQTUgAG6MihQ2JqCB/QhOfSSievN+ZMzP33gPFrQN1/VFBEGwwzyQx
LszGBkGsxjFnnifefIGLTFgn6GNN1CeapMk8NadoKvfNaZrOtDmiGcyYM/WB
Zmk2C+YcXdRczSOfSzxy7bIWEM2L8+9cb36n07qvW+GabQ6sc6O9h3yOrJu1
hVbaaKeDTs7sd/ucP9qltzk1d+qJdmg7v81tWuIzxjw3ygjDDHGXQUrt39MJ
xikLz0OnmKQ8PBOtCM9DX3vvdfNbrdUdHdPx8Lz5ZL2m62zw3TrdcxEyyCSL
bHL4Zb/F9/wZ/m5t4tjcqD/0lt7kqncNuL+fPu7QSw/dHLr3ufu+6b5799jl
o/Vs+LfhIVeodF+hrugzisyfw7P0nmLzF/NXuqxfeb7atX8xQfCXTesb1kX2
P5ir9Brvzcu6rQ3232iNvtRVls7/d/8DKzVOfQ==
       "]], 
      Line3DBox[{306, 222, 1115, 221, 551, 550, 549, 548, 547, 546, 545, 290, 
       1099, 291, 300, 301, 302, 303, 304, 305, 306}], 
      Line3DBox[{981, 147, 1173, 1174, 298, 984, 299, 160, 149, 1175, 148, 
       982, 981}]}, 
     {GrayLevel[0.2], Line3DBox[{981, 961, 956, 937, 931, 911, 1159}], 
      Line3DBox[{299, 160, 149, 138, 127, 269}], 
      Line3DBox[{984, 992, 1009, 1019}], 
      Line3DBox[{1020, 1233, 1034, 1012, 1006, 987, 1173}], 
      Line3DBox[{1056, 1247, 1055, 1036, 1239, 1031, 1008, 1003, 983, 978, 
       958, 954, 933, 928, 1144}], 
      Line3DBox[{1069, 1179, 1238, 1051, 1030, 1237, 1028, 1001, 999, 976, 
       974, 952, 950, 926, 924, 901, 1156}], 
      Line3DBox[{1099, 1334, 1335, 1336, 1213, 1340, 1341, 1342, 1343, 1115}],
       Line3DBox[{293, 630, 629, 628, 627, 626, 625, 624, 294, 633, 632, 631, 
       295, 636, 635, 634, 296, 637, 297, 638, 171}], 
      Line3DBox[{1123, 1330, 1329, 1328, 1327, 1224, 1398, 1397, 1396, 1108, 
       1285, 1284, 1212, 1257, 1092, 1293, 1292, 1200, 1286, 1076, 1190, 1259,
        1061, 1178, 1243, 1039, 1027, 1011, 998, 986, 973, 960, 949, 936, 
       1148}], Line3DBox[{1124, 1413, 1226, 1407, 1406, 1405, 1404, 1403, 
       1401, 1109, 1100, 1333, 1332, 1331, 1093, 1303, 1203, 1296, 1294, 1077,
        1192, 1266, 1062, 1180, 1246, 1042, 1032, 1014, 1004, 989, 979, 963, 
       1134, 939, 1149}], 
      Line3DBox[{1126, 1421, 1420, 1419, 1227, 1418, 1417, 1416, 1415, 1111, 
       1353, 1218, 1345, 1344, 1095, 1312, 1311, 1205, 1305, 1080, 1195, 1271,
        1064, 1181, 1250, 1044, 1038, 1018, 1010, 991, 985, 966, 1135, 1151}],
       Line3DBox[{1127, 1122, 1430, 1429, 1428, 1427, 1426, 1424, 1422, 1112, 
       1107, 1364, 1363, 1361, 1096, 1321, 1209, 1315, 1313, 1081, 1197, 1278,
        1065, 1183, 1252, 1046, 1040, 1022, 1016, 993, 1137, 968, 1136, 
       1166}], Line3DBox[{1129, 1442, 1441, 1229, 1440, 1439, 1438, 1437, 
       1436, 1114, 1385, 1223, 1375, 1374, 1098, 1326, 1211, 1324, 1323, 1083,
        1198, 1283, 1067, 1186, 1256, 1048, 1045, 1024, 1140, 1139, 1154}], 
      Line3DBox[{1150, 964, 980, 990, 1005, 1015, 1033, 1043, 1054, 1249, 
       1063, 1072, 1267, 1078, 1295, 1202, 1302, 1304, 1094, 1216, 1337, 1338,
        1339, 1110, 1402, 1225, 1408, 1409, 1410, 1411, 1412, 1414, 1125}], 
      Line3DBox[{1155, 896, 922, 921, 948, 947, 972, 971, 997, 996, 1026, 
       1235, 1025, 1050, 1242, 1049, 1169}], 
      Line3DBox[{1157, 902, 925, 927, 951, 953, 975, 977, 1000, 1002, 1029, 
       1176, 1236, 1052, 1053, 1248, 1070}], 
      Line3DBox[{1160, 932, 938, 957, 962, 982}], 
      Line3DBox[{1161, 934, 943, 959, 967, 1175}], 
      Line3DBox[{1167, 969, 1138, 994, 1017, 1023, 1041, 1047, 1253, 1184, 
       1066, 1079, 1279, 1082, 1314, 1208, 1320, 1322, 1097, 1362, 1221, 1369,
        1370, 1113, 1423, 1425, 1228, 1431, 1432, 1433, 1434, 1435, 1128}], 
      Line3DBox[{1174, 988, 1007, 1013, 1035, 1234, 1021}]}, 
     {GrayLevel[0.2], Line3DBox[{306, 1343, 451, 551}], 
      Line3DBox[{319, 1235, 308, 309, 1237, 310, 1236, 311, 1239, 312, 313, 
       1233, 1234, 307}], 
      Line3DBox[{340, 336, 1256, 335, 332, 1253, 1252, 331, 328, 1250, 327, 
       1249, 324, 1246, 322, 321, 1243, 638}], 
      Line3DBox[{344, 1242, 318, 320, 1238, 323, 1248, 317, 1247, 325}], 
      Line3DBox[{381, 380, 1283, 373, 1279, 372, 1278, 365, 364, 1271, 357, 
       1267, 356, 1266, 349, 348, 1259, 637}], 
      Line3DBox[{444, 1326, 438, 435, 1322, 1321, 426, 423, 1312, 414, 411, 
       1304, 1303, 402, 399, 1293, 390, 636}], 
      Line3DBox[{537, 1385, 527, 517, 1370, 507, 1364, 497, 1353, 487, 477, 
       1339, 467, 1333, 457, 1285, 441, 633}], 
      Line3DBox[{545, 1334, 445, 300}], 
      Line3DBox[{614, 1442, 607, 600, 1435, 593, 1430, 586, 1421, 579, 572, 
       1414, 1413, 565, 558, 1330, 544, 630}], 
      Line3DBox[{624, 1396, 538, 552, 1401, 1402, 559, 566, 1415, 573, 580, 
       1422, 1423, 587, 594, 1436, 601, 608}], 
      Line3DBox[{631, 1257, 439, 455, 1331, 465, 1337, 475, 1344, 485, 495, 
       1361, 1362, 505, 515, 1374, 525, 535}], 
      Line3DBox[{634, 1286, 388, 397, 1294, 1295, 400, 409, 1305, 412, 421, 
       1313, 1314, 424, 433, 1323, 436, 442}], 
      Line3DBox[{301, 446, 1335, 546}], Line3DBox[{302, 447, 1336, 547}], 
      Line3DBox[{303, 1340, 448, 548}], Line3DBox[{304, 1341, 449, 549}], 
      Line3DBox[{305, 1342, 450, 550}], 
      Line3DBox[{443, 437, 1324, 434, 1320, 425, 1315, 422, 1311, 413, 410, 
       1302, 401, 1296, 398, 1292, 389, 635}], 
      Line3DBox[{536, 526, 1375, 516, 1369, 506, 1363, 496, 486, 1345, 476, 
       1338, 466, 1332, 456, 1284, 440, 632}], 
      Line3DBox[{609, 602, 1437, 595, 588, 1425, 1424, 581, 574, 1416, 567, 
       1408, 560, 1403, 553, 539, 1397, 625}], 
      Line3DBox[{610, 603, 1438, 596, 1431, 589, 1426, 582, 575, 1417, 568, 
       1409, 561, 1404, 554, 540, 1398, 626}], 
      Line3DBox[{611, 604, 1439, 597, 1432, 590, 1427, 583, 576, 1418, 569, 
       1410, 562, 1405, 555, 1327, 541, 627}], 
      Line3DBox[{612, 605, 1440, 598, 1433, 591, 1428, 584, 1419, 577, 570, 
       1411, 563, 1406, 556, 1328, 542, 628}], 
      Line3DBox[{613, 1441, 606, 599, 1434, 592, 1429, 585, 1420, 578, 571, 
       1412, 564, 1407, 557, 1329, 543, 629}]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJztnHk8V9v3/ylug1SajGkgFKWBTGmXMhSVKJLIPCezCOGNhMyzQoaMCVGG
tBGVkqRBZB4b5E1E5t8+93Nv97x7PM795PPR5977/em/nu32e+3XXnuvtdc5
Z6/TOqugO4eKiiqOlopqLhXRnz4wy2f5LJ/ls3yWz/JZPstn+Sz/cb7zNHfG
xLHr8HdSezBqs8BXMjjGfrtvV08UPHrOoaqe1gYwXBx582qcDBoOMnqMrLoG
J2z7Oeay64Fos6WP9cfIQKAn6EmdXA50TDPJao7SBRsPPL/N10UGGn4acZIi
xTCWlNe3JkwXvGduX9ZdRAbva1fwJbYUwzMPwi+nt1qDm3fjTVXzyACuFvlA
NVUMb2vGWb88Ew7WshcuZssl/2X6aPucM8s3dYMcVMYNLyd1oYFzzVL/KTLI
08yh1lwYDM2KuA/1uTrDrD3ZmzZNksEWHcU0NcRHL1euakH8bE8RL8YVEpb/
4oX47z37vuGSN0VcSeOuRfmWMFjpFJQ/n0YPGPIyfGyaIIP5ceMMo0yx0I6R
z6HaxRksNy5YchPp/IA32c3xQzzMrdmX2z7HBjyxyHTNGEG67Zw/ZiiUBFlU
eSXWbI8GfKJmA9SD09fN9ZFWiwWjB7w4L2Dw2pxQyGkpaHkN2SPnylkkv+0S
DNpzdVX6HA8YAal2vEP2M20Y3+0k5A4TR76mKZGc4XnTMhlZpI908e5NhuIu
sLv+vnUZjQ1Uu+KlE4Z4f3xpr5NQyDcd5m56UCmO+nle84Ghzd0LHrs+70Qp
yRm8P3SSTIfaP6Yr6M/3NIJWxZsPs9F4gErxc8/PIy4fOTfupqoZvMIV7NyC
dGPT5b/VjfjJ0R3FPSa2MGPR3TZe6lBgWTF2dgTZ/yoqh6EnhQTV9lyd/9A5
FuxbMxWuNkaszw0GES+WBj14no7L/gsarxrnhhwn1H+zsi2pqvbkt/+3gtqK
fwJx19yYnkQNXdD8NaGyjUYPVtlfk+lHfJhscvS0sglQzWVK6UC83CCr+SPi
JNkp560NsqDEeHRPIdJtu0vj4kLMr66Lt3x6KQb4znmMibg6g+2ln9IxLuk8
5/qNRn3AsczGyM7VH3RY85C6kG4xAsf0+xH/3R7WUFvmYdR+vdbX02pPjgBH
7Z2JQa7eIMQ87uleTE/r9skNjfrwoIT4DT+SP2AWTzqN9eO/qG7OxeenoQjd
MdFAxAu05h79iPj+ES0/wQKVb/1rTTAbYeOlDbmTOekk/Y2PPB2znkJ8xMOl
OdaAC1TFLv7Sj+bdn80ptRXx5La2IyILT8D8k1/WrPTwhk+28Z7Yg7jw1Xq5
uz1K8Ir2de4cpEPSp5D7+VN/zEu1km6/PRqvdGGYIXny33MiP1/O2mt1B/mV
ivbC54W4/h02Vu4PxnRYLSeJ70f1Oy6WLnhmTYXKN79VhMz6mA7pa3OLT4co
f+Mdfs9fYDxx/0F2TsTFok6tvY3Nr+ynBGxczHQaKfseqUDNDyWfkM4wRCI5
vecH7CfiM6WDPYEOJ7/jeekK4WtH5b+Nd6fbw+bJKWLuzdhlPD4iD1nIO1sw
HXKY6zILpmZ+P38+TR2WEehwgUAHNQI+U/bPFJ+uDswEOjj9oD/8r8Y1XT5d
HZimuT98r4PvbmZrVm4mULmG1Qb1A1NHSqvw/YT9qz38X+tmvdKrWGSuByDV
XHnr8QPrLtrviC4Zxdn2kceP8O1NCXQ4+g/xh1n+f5Nfebvm1JpGW7iVJajL
BfnhI7+ijCfID9Mkzs3JKcr8Fo82xdRR2faiPHmafIz9ZEPF2hR4G2rbzkX5
2MFVRSENX8iAbj7PwPyyWPg6Vqr5iIs/8NaJKPYaJYOo3JSwDfmZ8LD0UGsd
zRy0Hyhfdkb9HBO2fB+6IB+6xLWOVkWFgybL0qMqr8mgxyU9oT2qDLaJrjPo
Mo8FjeGmvq/9yUBxaeiriKuVMJWGS7KAyRkcyFPj09+K4qylRgePVxU0cGfk
E2Z2BtdfTt7gXk4G9FSqgh6i1d/sf1cYem/vYC9I/K29z2/tk35rn0ra+UEw
shJukOp+v3hVLGC7fXJHLh8ZWJ16oXzRrQpO5etJcC1KAPX9SzoP0pNBR0v4
mROZpTB6QOBdwrFYIMPR7TIVj/Ii2hOtj0E6vFPM3K3o7A/cso8/sPqMzi/c
NKOKz7O/2XOxojn+9XsyWDBiZqNplwkjX5K0LR2dwQqqgLklSB/l1l4aDtF0
qFrU6h6TkQx0a6o9qT6QgX3FlWrD1bnwWoDQLr7ydLDEMtOLuRbp41jQ3oB0
Xl6pdr/rXCwok/ZgAaj9/Xqvx4ur/OCDR+H3R2ISgJC+XNIpdJ69oKP4hna7
O7x8J0DF/F4yoGPJXj6B5jGzeYOxs2AINFyw/ZwmOhck7X9uNI7OU7+UMUf+
0hEIJ7mMGBtQHOkSUj/jhc4RR3/zN9Xv/O1n+zkRT2Z4Nd7NxfNHXCpoG8Ly
8H8Xj4j65+y+fbjXJRY49rjmFeHORzPFOb7jdzq77n9otP32759k23UbkJ3U
jrISnE36gK2idNFdZL8AF8eHbMQZ3NIfPOVkAjsfKCcfdHeGuVolJdi48g1e
nqjPWgE+aXP4U7e6QqfEE+3XEae5lqresZsBHG+gV76zyx2yiPbv8kO8wCo0
9E0YHXDfoZlhHH4Rcgf7VFkhPiF4naMziwZMhOtLsw9egp9a+MKVEfcCF0Ka
wsZ2P7tk/KLqiA9UmfcqQgjxr6/sHzWHfdzd/fnOXMc0XziV5PliBeJRvJ3l
iceVoaBOUncDsoe5VP9uAnZuTR26z2cr8m28J9jO1WLz5c7gtMm5QPQbP6up
8gLjy00lU2xNlsA2m/vX7zRYwHbTC6XvEQfrMw9pGy+BjkHSZxgibOHRKt5t
jYgfv8F+3mJEGULJOe4T/ZdgH7O29XHEj7yPkdty8ASsGr1Qxy7vA63HvaQF
sfHqi9XKxCvCKaXq/StlHWBl8S82lTg/sVLku7bsgA+4tFpxROhP+LCVncQd
6+Pw3qIeLSzPr9lwiQbL890eDZ38iPjv/4+H1nwHdi5Q0ltuqaWs8K2/Ornw
m5N/0v73v785Tq7QawkEL1QZE6Nw6+73fE/mt3zP0n6gvhL1061zVtLSyAbC
wvYnTbh+dnNvFmLs0wIC5Wd0R7Fz2SEJ7t4BJejszPD5YZ43HOIYrRL/L84p
Qvkfb7HIOoDEtsjhp/9FPyt+y0tPfpeXft6/7c2iFF/wGQ5/XfFf9E+U357+
yXnd9+frmer/ojOQcBtU+uY/0klL+id+wnmzUpPkplsdAkYlWxg5/8QPZ/p3
Z4qLDm3kjhC2BqFaEfXtP0Gfn82HWhbSWxvZgAYNo/AWnP1E6+WvspOI1xS+
6qjI8wYcH4sbwQ+cN/8qO4m43g/Wzf5qO4n4wRukoMWpAYDkyz3wEGcnu/k6
AWX2CKB/hGHYc+IPLhSoksp5IBZs5T/xqv5P6sZ/Na8h2H+my4O9Mj3a7BTA
vFVxqfj4q5MTkhcm7AKan1x4m4vj6lU0xg1L/YHsLsnmib/xvM8Ut1X4/JYu
zwlIsJ2gLcfpsIbN4t6ZqLPAz6BPuw/Ht/FstT9nxAcsNmgNTP2N96XlBPvn
KgLOQsCXy+UJOzX7ATd5zrlzcJw/lZHK3sgTMEbVfzHCcbEdnOoaX5xBb1sz
c97fWB+i+jARJ6qjEuVXRHU2RwIe+syu5a5lMDh/5HyaGo63e+acep4QDtrH
2cJjcfvY1ZNaDE9fXQGaHerqxeP/vr596r+sf/7d+H8670R8pvbbmbLnZ3Nz
ThuVU95nAZR7Yonf3355qXzvvKQz2HuF61kRji9b27F6ebIn4FJjnWPwN17X
s/xffziHMsNWcdqB3KvPnN7g5sv11LUjLcVmYJHTButeHF+SIn1ZplADXNIQ
ih37B84vUfxinib/q+yfLr8Y/Sg4aOVl8OHNIIkPZ7+WVHvuog5PkErmYtXF
cQv/PBOnbDcQ6gG6g/+B4yWKv0Tx9J9y/iLiWgT2GxNwq3/4eImeR0+Xx1/V
HqN38wcBJmGCeH4rNlfeszkQ5LN0l+PrjTfGrnJMioaAxSOHhcXx7wmwB4iY
hoYBxV1dPi9wedfrzb+cqO2PAPU3n91Xx/F3XHb7hQ9dAUa5Io1NuHzMj+pM
mV9yNJgjqV6niHi20RhfyQYesNfTiKSyo+Le8tF/1fnPZOt9OWrCBXzNNnQ6
fVCAtzmOBWLntZLtY0Yt2ZyAO4PhwI4OLRggdv/XOqcZs+RDk5H1YJkJ7Rpu
RRMoxstvPoD4Dann+4bBOrDC4HHDolYL+DkkLAerM4sanBSgol8D6oQGet3C
bWHUm3F+rM6ccOfpvCWRrGCOvz/P2BEH+HCBRju+zmmVVRI86OIPRoJ67PF6
luYqRHqZ+4Eu2sfP5uPal4Q739jUfBmcTTN4txbHJw1P2lfI+YCOygdl+Pqz
dM5mJv0CLyBa26ZzCMevbpKJnstzCfxyqvCRJo7nxA9zxIRcBC4MR/qscHxx
a6pV8JPq3T2dk1P4c9mKvZsX3NqpAtyBpBu+fgg8t3PLbzEE645nMA7h+Cap
fTrxLRbget7Ogvc4frCRBFZvsgMtko3G+Hi6bTh4a7DlBeC+Pp6vFH/Ocjuh
SWpyBUL3vMev/wP322fVmRKcrs5gPh9dEz4+9u7b8KJWzgH4GFj14/1kD3kk
QTvEFjQ9H9vViONpLPvDexotwPjDq8V4PeWe1AR3yZkAOx1lhwEcP5AUm9XX
qAXc7LnMRnH8Drszqb9RAXSGLrhC8RyhnqpB3M0ZqDrkVOLtfJKtJutwyAWk
D23ixtc3KrSrgwtWuYKoJRe3Z+C4eLZp7tdmV/Do7aNe/Hx5aB9O3ZlCAust
+lRjcHzdbnczKws30Ppxwi4Mxx8v2EibLeYOPHX6Zfxw3ODm9jZ6tF8ta4tT
wq+jYudS1TRLP8CmppiBX0d+ejIhIq2XwY6x5Ar8OvL2lPZ8cNgHKNLEJePX
EfReKqdw1wus79wli19HluKDww0bL4EPW85l4ddRsu++eL2wi+BamMJb/Doi
iptE75WdI+A204xTFgTcbJr7P9H5V4OAaxNworqoIQE3maadKgT8BAFXJuDH
CfgxAq7wg3nCv3ue+H37vyv/2c/B/6/y75/v/86JntsS6T/LZ/ksn+WzfJbP
8lk+y2f5LJ/ls3yWz/JZPstn+Syf5bN8ls/y/zv8fd/UVuNDN+DvxMJkcXLg
55//vODSQVHmseJYaEufaH6z/BzwHoj2sxkjg/mDLasjC5OgnLdIg1XCBXCy
+Tn3wNA///nF43v8q+/ZF8F69abDn974AY6MumyXR//8cRHxw6JtSfRWAZD+
dXbL4EVj4FcbTbo/SQbRlyZX1zFfgxov+Xf4I34r1oJe60++7+ha/9Az2+Eq
PGD0rHyjjCU4xui4kjROBmOrH91pyY6FjjcTF957awBCVOOuR6J+wr9uLhYT
9IeNLIPnvMnHYSOYazCMfvfpl7B2Zf4YqKlZvcU+UgMof54a2oL6yVKfE3Gw
Ph0eLmgxNmnSBUV6BwcH/gP/Z+U9Pby3Jhf6TvKODUfpAm0DCwaeNjK42awe
mGxUBAu5egYdI3RBNreEeG4FGRzvtLl3ViEFOgbxfvQX1YMmEtGt/V/IYMDz
1T36c8Vw9Y4jPEXdZ0BK2d2h+kJie57lZ0k+GSiGCgV7s0ePBoCBSB6/pNtk
MPKAb0Fveyxc9XQscZX/eRifGEKnivQpKyja23slHzbUNhaF0tFCq069zZ2v
ySDNco5CdW0JHNx0gveR9xWwXpCa4Wn6zPlnwi+btx6LvQkHIHWzx1kNIGuk
vES5b+b6P2UueFh4sTssUnw2j/ozCeb2+d3ajL2XPr68yMHLDga40UXHOqnC
k+vtpF5i3y+7d+nTW92BI2LhGgsU/UEST3C7cwMZXOY9bXL4xCUYrUa1e4WL
Geww1Nc4jNqvqONqmlcdCDdtNt+zWtIJrnXc/FAH+ZXjaVKB0AcfaFPeWFIW
5wbFaOCFMsQXeuwu2cwWBLfPU8j8uN0FalWOVMkgPtVGUjq9MBjCDaPb3rk6
w/hVwr/eV0Y0rv77L1v1UXtfNcb2xZ0O8JCPBKcoam9eJ9Pngbi02xbT964a
8Nr+HnojxMvdrJm3X/eF7bIrG7hIzjBby+5rNeKuQxM0HMIhMKBLJWk+SR5I
HmmK3YX4/HDjzfXVV+DRRrIdy/1zIL1WYEMUWhefExQDDJnc4J7HMo4791tC
S/GdtSSkQ8otg8J4/gBof4vnTSuNEix6xZ3/GvXDoeDnrkl/Dfr0Gqs47nMC
0g67ZcSQv9k8yZM/ahYPz7ZFrqDWtgXLPZIqvowQj9eX69NHzYBEWDPZKvWw
LgD4bA1wPz9MBm5ws5DYYAh0XHr60zxkv+Jh3S429Lur3y56ynghGQZUbyzc
6xUNFk4EnfiK1m/FVGJSX0cGpJHtWcG8LhYsnn/n/VQP8e8mnI/QcGl3gQcd
3Lpez/GAQeGfG3ei8VZ25srcmucJramZDIr3+cLMEsloL/S7kp8+dAUzRcBd
g5OXb7s6g6tOJj2SE2RQU6UBG7d7whPMImvfIH/YJ/567VzUj2ljsFn+bXdo
yWq4VGKHC3TRkuHB7uMS4S4W331ICa67W9ZsTNKARaGNT0YQ92/t9BLZ4Ao3
ay7ofofm3Yu318EO8QWbPp+1FiVBk1+MNAvdz0PNi3rC2HtB50bzNbs7PKFu
NPMtuv0kIE2S2Ye9p5RurCDvGncNzmO8zbWi7BwQE1l1bGIU8aaCnmRtN7gj
0ERFGM3vJnvfRmfUPrq/q0udIRAKfMyn7kbz+1qEPu4OGq/geS778Mf6kJvU
pZpOMoPFkhJsXah9K0uinY6OJajId1iSXG4ATzcYvsO+++ZVZV5Zuz8CsnPl
VCTa+4N0VZN8c+RXumoq8SL8DpBGcMW6hYMkoLZUqhr7LslsTMmVfN8UcI4W
Dsns14ZiT9kMsXvbtn/SjlAztwZrlEns3TRS8NbDuY/bEM8rlw41XWEC3wv5
2xq1uwCh5Qsy4hFfactSF9B/FtJsI9mfkjIFJz2Z7mL3oU1IyR307LCETydu
7F1a6gmOfJpDi63r10eLhI2jTgLoGcuI3XtwcejTIuzesKcXnjK8NrSDyoIr
WPZphgGeHed7c9D8hutu2cR2wwUuMz3e6rM3GkTTC4uwjxP7VZb6Zp5ckz/u
ryvsuSuJvd/YPTZe/dRn+J7xjhrxA65m0MVo3TD2nv/SOpbRIV91WO+jGWE0
QAJLjXfWhiP+capJh79GHZw18OhuRzpcFauvxt7/r5JVT1yspQNWk8c6pZBu
3Udkc7H39F4G0ZQNXFAE2950SXSg9r1fvRdi7+PpSjdUXDLTBl5srHTSqH3d
+iDZQcStMrLL5jQYgAUy4g3tNHowvjepDLMnQsCfuc9MEYwvVH7Gw+kFjNe3
piti9pOzTj1OMITHHDrDrdvNwaUyv3xMZ3auQwIn0gyBk4W46EYPY0idQdOE
vU+4kLpfRCb6BOD0zJsS9TgPXe+ekqnCxnvgWtmnIjWgcD0iJAf5FbsyvIDN
++mScY68a1KASoR6C7sHWlN0T8Sw8drGHGQ6NK4EjUw2BvtQe4AU4exGN8Q/
izX6+AtrAOfd5VvGX3gBhuj7/dKI353n6rBNVhGe5pJkebrBC1qnr72K2b+n
+krdkuJtaB9hoVXaT4JpxvPYMf8ZM2HN7WjUB3WD5Tca73sC8/mLytQQ3xTf
xTuF+EfVRQ+iXTVAWzND7WfMf8z59w3MFYJdsgvlz2z0B7pbVa+PovWy9829
J0+cHeC7d7WdD7ddAV0PVq7NRn5isxrc/1p9GkiN5m4scj0PuvU23MPe12Jj
fsi3xUwaZi+8+XIRGq/XKq/t2Hifd34JfWOiAllaF+vfG/KF8UNq5fSI77b7
HJAUrww5717NC09wg1/UFsoEYfrLGw3CBwDkUn9Q497hA7YW3CcLI871JOGh
fM1paFm+Iovquh8QuO4QQ4248WmfnS6tOjCqpbTYn+QPBtfYW2P3TIqp+4i1
Xl3/7VzwKi1kFHtfV26ufDlpQv6bP3taHfv13jnuh4rUrK/UwFoxv6XnXf2B
sbYDGbvP8DUdq0Ml7T4guE763Re0n+w1yyjG/H/726MFS1X5wf4SsaPH0f4z
9yRf0TvE48TPni8fl4c6dQXbvqL2Z14Fjo4jvu1689hWcUmoWbem6CiaL6Fg
lpI4xFValpYzNUmD7YovJFrRfInJs7HpId5j6yS8r00HvI7d734Nzde9UqZP
mJ+7vlbf6NOlDBM8NW4/Qf6wRWrbawXEdQJfZq0RUIY8o89p5VH/0SvcGK8h
/mLtBrWcZ8qwvnSK5SONBxR6PhSA+dvX7l3+Jsly0HxriECSgzwIzG1Yj+kw
NVwa7fMEgFUPhTzuovl1kpG0rMa9j/f9fQX6N0xk+BqFoKZYltLGYFdw3nJJ
QApq7/Flo3V7pyaMS0lJOtrlA94IhPJvwr8f+0roazMab5hERKoejptN0h6K
ReNdP5hQhP8+6F30xJ5ikhkIXbx7EFvXbMsZBzY0SsM3+xXHgtC872jrv92L
y0M+0pI/YvY8FonLScH1I/JcfK0ysmdRZelWfvzvfve+YoukARMP6x/3iug7
eUpg+qhL74t7aHDiG2eO4E/H/KGVzLz/ZIgydDmmm38XxUG3cx3+WBwcVQpg
2Ib4uo0jK9y6HGDP9Y6YCsT5V9qVPipRgleUlOUwrp/F86ACZ4/nHkEvH6TD
Nq6bv+oArqYuLMk4Ad+Ut249X+4Jw6TPCOogTj7oS8uneRyaGkXEOSC+MoX0
VOd/+P7km6aFHXy3QsEO8bTr4xMzN7+/8w8E8yhIMI9E38N+b/9cZZ/j7KPy
UNF3j10Rmi9727or2HvgMVvkumgQLxi6o+OO5qUpsSbt8Q/oWeJfuPQqGpdT
zPWin/FdWz2Bzk+mqfPnKC5tTLc1tJBCt24C/YnWkTiB/kTvV8+UDn8Vnyn9
ewl07pumzt/vV1wq7k21kWvB8fus8TcTrKDZyyMqnbj2Wd4phTXITlc+8TS9
/+H+MF1uHDnOw4t0MMsLpdBhpvT/RKA/eZrx4ux3+tNlT8SrrZ4DYmjcL318
5QWpaOkHZf/GOl9QNNUU0b0IGL6U89ji7HQKKuHMlwgCiW/zJ31w69dV1Gy+
LTonRnaffov//mWXz4H2I3OVQByvKSv+exn1glBAQ2sD2HQ5s1tx/CUr/5Aw
+t3st48pftfmcqhJjJQvyOIIecmC40TfTfwsfYzquLOluBKgEI24TQ3Kzw0N
6rZsQef9LdY7ogWi0qHhc6NfLBQdwWr1nGOT6Jxu/EgzIkUtEypF+YiH9yWC
l6Tstlvd6HzKpl1IZekADw3nCvAZhoP7buCMHfLbPXtM+k0eeUFzVhEDeeE4
ILcndy8bOs96fPzM4WjtBVkNMt/L10SCp6NMui4o3yaP99yab2AG4wwlQr2R
DidF1lk2zaAO6b/dPxmRQnn/5Ez1P6CzKo8c+BTS+KvDZrZgEL5YqCFvLRmE
LWMJ+sL6GHadWSqhnB4HhLQeLd5xmAxWvSrY8+lcJjSUEgpPcHYG2e9G32D3
PeqxaGae3ZsFJxjJOVnj1sA9bHLbnk/Tt5PRYrTxZk0wpF166P0edP7NLuO8
UoD0zyO4z1NPyMmdSvcmZN8jz7kB7SdF7naXA/rIYP7Wdz67+VKhFs3ZM9fa
HYCk7N13K78Q2/PYUdt7YmkxTF1neGFs9xVwc297PcNdMsjReyaa9aICHp9q
2W5a7A8q3sqNaCuRwdtGcjpHQxXcO7E1ofalPTDSmlPDu/jn+3/H7pCgW1ez
4JQw6XF4QSpgWBhrqtWKzh28ndKvtmbD9GdtXq8DE0Aw/7wHyR3E9hDd7z1T
diZTVUk/5z8P2ffXvRND56/x3YGR2P2BAmKjLM5+WqB26fn2PnT+WtjAm/8V
8YMR+dJvxQLh8C9rTxeWG4DqjcrvU9A6eke/uze6aupednFmLXaOa4iRqXyH
s/PLWtUzX++fAzHnY1LrcNynpuPrRhSP3pXzJ2HxqFpxp8n7WAUYouMfUYLy
SRWnBVr47wrNMp3r61Cc8pnqoIhT3Aui6EtRPLqtLEoRj4h0aP64SGsTilOk
vqsUcUrygmEPFqdIknco4hRRPz+aJ/+nXE1vmQYv0ufwkj6KeE3UfslopMxr
pE+eAMN/lZ+UU/FKYXp+bhP5IT0nrkrkYHo+HYyk0NN8mvpcaO+i3YLGq1Nj
+0Pj9WXyORCI9pNl/OkU+cn992olr5AOppDxh3TQYuOkKkHjHSPt+qHxEvEI
1UsKmP8If6E8F5Smpb3G9OHIjaDQh6gfIt0OPNi6GfOHlpUjv+oz0/ftDNKU
uYYiPUWpU3/o/AXMpM9jfnLE+sf8hIirUD99hekm7ZP3Q+uO6DvTNOfLu7D9
JG7L0SS8/4hcFFy/H+VXa7aZUeRX1i0nZS1QPnaT9iJFPma6XPL4fTSuQ7eE
KMaVE8iah+VXqun+FPmV/g/6OQ3T1IqHPVzw8dnJj4UkeTjotLgbs+dGhbV1
8LajcP1Kp6Tw8nPQbMmQI/bduoBw2GUXrhPwxXBayiuyFxQYSJeXQfyD6vbF
jFbKMGNhxnHVxW4w2Mn9QATi7yfGFDUE9337fVbO0nisXudg56t1zGQJPEa/
aN+Gc5aQO2vdYWx/Vo6aEGJ8tA2kLDXrH0b7fJqE1jzMnjcBorSd1sdhjANX
GLYP33Zz6cPqMBVLasSWVclBBb13ghrodzfzj8VEIp6zMM9TbqUUbMhP9Je7
owmaNiZFj/7JPBrZ7DbnC/6jLvSg4+SWH7lvlsgfiLj5d/FCgGSyQ9FPCQ4K
hDpgdZ5rK5IjsDqPm6fKo2I03sH+3CtYHWm9ssvUn9WRfud/Vdwh4t+fp37n
qbXq8zehdcE8b3PSj+yr0407fxVfTBDvfnYdabrx8a/iUwRxeYCgfjVTv0u0
P3NvuwOx+sPrjCwKv+oePeCJxX3tLA0KTvNhLg3mhxnaVD/ktz+b812SWcKP
7OGGMhR2vmx3UtmMuKd+KAUH0uMxDcg/79wopchXn03G7PRH/jm55waFf6rr
3lTH8hYLd7a/RX1p1J+ZjNV/SLGU9Z9l9+JuYPWiLU1XKMZ1o0WOFWv/mD6R
ov1o4OARLL8Sahb7W6yX1Z1i77H6leQtynxvELQtxXiH+Xf18/lKvNg6quyJ
oayf1126/mveIlRIsY46Kxmasfar9X8s35spHpXf0KOE7PHOLqewp9/1MANm
T0RTLIU9VgIfN2H2w20/Vn+ebl2aaB/gYR/j19cPBZuWslMvxHEpJ5YFe6JD
AOvQ8Ug+/H0a+aTPK18FA5flucOHcLyX8+3wO7pg8Cycn9kUx/vmBmnVIv8c
859LsY64VdIeY/XbGxa7KPj3dd0NWh/nZ0WsBUnNu+lfJ1nBps4tR7E68Iuo
znzL4tUgkZl3XPa0HbxmZ1Jci/g7uCjH9RAL8FaWqIWrnOBO9VT9h3i/Isir
212WP4pCfPGBJAq+kmrplTDEGc1SfuWm+mnZfvWrQLmf7HEmfRfItL5HKgdx
/QWKEZH6y4F2tvvhZ6UkqK6zTT0a8Ty+U+JS75cAi1qLBe7sHlBC1faGO+Jr
6AqMFecuAJulTgqJ2HvCDggF8PfBVhe0WmBxLdGDMq5dSDUiYdxV5+8d74j4
sEexJLauS2h2/yPtz7g3Jwxbvx40VyjW78bnx+qx9Vt1kPLcRM93mAar/++g
D6doT/Rc4Gfbn2BvKY3ZaRRSTGFnn1eZBMaZ64r/p3kIEZ+p3/278f/fxkvE
mxd1t2D5Z8UTyudflrysv9Yhb7znp8gz1UdZ6nkQF0rU+q/yT385R6EXpZ6A
bkXEHXzc8RdcKX7GSQMcO/kM4vf/q5cCrI22XgQasi/87HB87UWWcupodyAb
eZvXG1+XUDEUj6BzA6SD+72jcDxap+rLVjtXoPfYMSMVx1WPR9BWdDkD6hs6
Ifh7v7eKK3NgdZJPWynrJHo9XFtkEB9yOkvB3yhGuB1EnJ6JktN5J3PLIj5n
nPJ5Fsh3Z8TaV22ibM+1juuplaszSFC0oKjD+DzwfS+HPRfLoOwnuSlVAtvP
19BR7ucPnDN/PY97fXcej2+jXofVc7auEabglpXRDhhn0KKs80hm9DF5HjIH
1LElBz7h84S7R6/StlgAX+q0Qvz9eKS8aiU3CyvgVWfThH9enPxgTCET7bfF
oSU38futfImSeyPa9/Z4823E73vqGxem9qqRQJ69o2gcjvu1no5nyrwMroeq
JnLguHSvUBkftxsIDlxjE4njEk2R0UZ9boCOLlkrEMfDHsjsTM53ByzLGam8
8PrbKXt2unoA+gaTwy447lXZELBe7iKwiUg5dA7HozbmZWF1sGX0ARR1MF8O
piCM5zcEUvDktytdMS7WFETBD5TcdMJ4JkMwBZ8v3+mJ8bW2lO2J6htnpnn/
qhEBN5jm/XK63/H/B5hSoTU=
    "]],
  Axes->True,
  AxesLabel->{
    FormBox["c", TraditionalForm], 
    FormBox["\[Gamma]", TraditionalForm], 
    FormBox["Efficiency", TraditionalForm]},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotLabel->FormBox[
   "\"SVM Circle Hard c-\[Gamma]-Efficiency\"", TraditionalForm],
  PlotRange->{{0.001, 100.}, {1., 6.}, {0.9435483870970001, 0.983870967742}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.670375935776239*^9, 3.67067764498669*^9, 3.670931215329771*^9, 
   3.670931273998657*^9, 3.670931359086358*^9, 3.6709314461428013`*^9, {
   3.67093153199514*^9, 3.670931579488904*^9}, 3.6709317267899227`*^9, 
   3.6709318557661467`*^9, 3.670932002698916*^9, 3.6709320433890257`*^9, {
   3.670932081622251*^9, 3.67093209248002*^9}, 3.670932139425377*^9, 
   3.6709321842883377`*^9, 3.670932321601253*^9, {3.670932486496838*^9, 
   3.670932552789813*^9}, 3.670932672186058*^9, 3.670932764947885*^9, {
   3.670933197725175*^9, 3.6709332252440434`*^9}, {3.670933695772834*^9, 
   3.670933705749578*^9}, 3.67093937948001*^9, 3.670939417182568*^9, 
   3.6709397013290977`*^9, {3.670939906950098*^9, 3.6709399221756077`*^9}, 
   3.6715409777913427`*^9, 3.671541966397128*^9, 3.6715420542690973`*^9, 
   3.6725702866804247`*^9, 3.672571592910342*^9, 3.6726438958410683`*^9, 
   3.672644192459403*^9, 3.672644357862796*^9}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
Hbs55VnJ2IopSDcdexScK7jSoBSkm46l/Nj4/Z3NIk5xa/TubgcClPg8zktz
dI23z/0UzuPsNUQfn/aFTuOTHnX8C47prPU/9jPMX6+ZF3OYv14Tx5u/gd0v
eO/Yh8E4/yzs8V/vK1+YhfPXs78SLJvXbcX5a68vfL3A/I2aeTnH83LO54X5
ZyPyNxH5G4n8tdcvvx65r2D+ZiJ/M5G/WZl3R4MHY+yJdZTrMUFXf/n+Ey6p
5Sz5gXe/nsL7TG/Qst5Tl/Tmj6Y9LLpGCi9kbRR42YDzz0n4P5Td+LJ19XeT
xLzHLh03PXS8k7K2ihyaukfMG+tXOv5c0FspynGu6f4kMW+zCvH5fg58LSXd
bFo8+poL6SCua6iD4FAH7X3AW8ccxHWUnbiOxPcBuK7P0vIej4x3ZP3huj5K
D288aN18QApal1sq1vL+iqONcV3EdQrrIjisi47wuYWdabt90O+bsD4WljQn
/p93M7A+Fnb0zNjYsIEijt10pGP528GaOCMDj+R1v9XGuRVw5MHx7CIOX9eD
vx7ov8sWoFnXCZ3jbG+Dv2ZdG0Mbz+kS4KfRGd9PoD56Qh/t/cfLrYQ+VkIf
K6GPjdBHG8erj5XQx0DoE0jok4XQx8hiB12cXPEw1sfInlRs2fXDOayPkUW8
v/RV4l2sj53FT+y0cPZKrI+dTS1nqRlUH+tjZ6PvJD2a5XIhfULY3Mc9Pufp
gfWxs2kdKoR+XxTrY2fjf8+ocEp+vkN9smnW5dUnq2ZdXn1MyrqgPmbGgu9U
WPcj1sfMHkV2aX9nJtbHzKbG3hrnGIf1cTC24Wk11gbr42AlTvdz24/g/Y+D
Bb/4++DzElifnKy66eXq8w6sj4MVf/XD1VErXUgfB3PcKG4qVBzrk0P5rgX1
CVI41Ce7wuG6QjX5cI7z4Zznw9/LNiSX2B6e8V4K6L3oQE3Ve9mfzoZNTsrv
O2uL7PrmG4d4LzM5op4335cm1X3ye+DEAPFeVn3rlGk34t5Kj9c9275Gfk/h
72X92boi3w58I8X09G974o5LeS9bfvXYcVfD11KRwnk/PjnrUt7Lzvd70H1E
4VdS0qOqaw0HXMgPqZJfwLISk3NhP6RK62rlbn7IiP2QKjUYs2RY2nscx8Ju
bDvdOUs4jiPfD7+p//tOE45jYZutJ8K7/Il1y1C+Z0LdPisc6vZJ4VC3jwqH
uv2jcKibW+FQtw8Svs9893bIpANTgjXr7aHL1mt3QLBmvW3M6xskTNSu16uD
ju3tdXXjd9vx+7uOPcnS8Mr9ffj9XcdCNhzUtUjE7+86Vq9+mTJHzuD3dx0b
/nRlx7KX8fu7jq2fap364238/q5jV4tO2WV+iu8bVlbl8/mKtUrj+sr3c9dv
pws+x/slK4u8dbqrYYNY7+W0+HYrMgI06x3wb10CNOvN8sPut8Vu+WvWu+Lf
evlr1lulwB/zftrnp1nvhX/r6KdZb9Te1PI15mnX662vjdVq6hy39ZQL1dfG
Yk5En8q7wYXqKz9Pa4y3zo3B9dUzW+7r2Xtp6qtnj0b3epC2FtdXz3bfeL1n
6lJcXz2bXM0ZmzMO11fPWi/J3mXTNFxfPSv8YWm5atG4vnr2tkPxgLPDcH3t
bO6zmSXzbsL7YTsrfW56ol8vXF87O7VrarunYbi+BtZjrLvu4Je4vgbmXyPE
Nfc2rm8gW+suN3/XGVzfQBZxsHH1K/twfbMousH6ZmExmfrA+godYH1DWJ67
jly1g3F9Q9hFy8JaY3S4vnYWExHSc/fLZFRfIztS7tOWHi9xfY1Mt6Pih/Vn
cH2NrHbZPg2er8X1NbJJ239cUDoa19fIjpe+/GhwB1xfI9NvM1bcXRHX18jq
larlfGfG9RW/N8H6Cg7rKzisbzZWaOCB8Gb9cX2zKXnC+mZlPV0pM+Lq4fpm
VfKH9TWxdf0L3biSH9fXpKwL1lfe173oUCzU7UL1zalZr7e+OTXr9dZXu16v
DmbmDPtlTe3+uL5mdnRVampMPVxfM/MvUFQ6nR/X18wiVnaelc3tQvU1s5h8
cbeaXXGh+ppZ0o8nS8xLcKH6mllg3o8jr8bi528oUd9Qor6hRH1zsAWfWn8q
uN6F6puD9fr6wcXdy1yovkGs8uFB6+rOc6H6BrEsmXnC+mZnV8dNb9J7ggvV
NzvbcNuR//1wF6qvmY0IX/d62gBcl1Rpr374xErPXKguqdKUzH0RrEuq1PbE
nOJtr7hQXVKV/RKsS6qUNnnLhRFHcV1SlX0UrEuqtCAiacTiBJynRaMn51hP
zrGenGM9Ocd6co715Bzr+WJM41IXMoKV33N5nt56Cc7znJTU0T1/oOA8T+9+
SXCeZ25L3zMdbonfi3me3voKzvPc3WnU4ryNBId6WllonfK2/N9iPa2s4cM1
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
43l/xPWyMV7HbO8+x0Wesyrr5fkD38q++uprz/MOxZHn3XzD8/zCOoSwPNGe
/RLOX5wfl/zfBX4Myqv4kN9/YB8wwYGfZZ199yVzE/3QMhR+o3dPv98vhP3H
eOEH4Ge5Lt79VQr0s1wXrjOII9ed+xPGNyh+7vnv/iS/Mq/P/mxyXfh6oW9t
Sj5wfBCb6ZYvr7HIh0ycdwY+dIrzxTAO0ectMdg314lz1sBXiUSfN0b0haPy
UcUpP6PBkybX+Dli4RPvPxf+Dy7uS5CL+5Kl7MDIXK+LaHjqhV9N8QmhGh1g
HH/l/gC47AfuEzjeoNQRjjcp8Qt0ubm44uNiynif88p1982JPnVk/jbfnBH9
61T1gvFFvWA/N1EXyN0Sv+4gz5D49QK5PzuReT7Rqq6Xal1gvKy/bqXnesdx
DGxW5vUCx5t896OTdeb3Q8iJPniqfAqp66jSDeZj881l/X3mL8fxmb+sP3++
wz5yQv/I167aEzrWVnTm92043i357lOXIXHfQi7OawPupPrsGYjxJoIHse/+
fS/AnOi/J+vvu/+ejW3w1T9Q1pm/L8D4IWxCJ4+eiCdSferSJP48vV9o7eWo
rI2UPA9n6g/Hi/0V5KIukAudAZd1Pn3fc3/D4w0sfIrnPobHm9g2P8/7SIpU
Lv5Uarn4xooO3u/MqC+frD9/rkFuYfy9GHBZf/5eDPOxKd89ACfnDWHxjb3f
MWB8B9EPME3RE3K3xNcLeYZUYINnXsz90f2to6LzpxGe7xt4vAHd//l4k/K+
UC/xrvPe6vbKerlucHyQ7/6Bss457nq/GwAu6zxpkscnWAeb7/6BmvdfHj/E
N1d934tR/y6m+n22t/p3DRWHv9cIDn53UP2OBn53UP+OBn4XEL+jZVV/F1X9
7hCt/m6p+n3BCr4P25TveGvU33VlffjvNQvMG4NPBh3T5P9wxJ1tU+smafL/
aG/494tHSZr878cVCnm/9qQmf9gXTvXnuF5s3r/n9hnlvZvzdvfCujnPXdKs
q9Vz9e8g4jt/q+p53dGLORff2w+F9RhQ5eRl5X2K8/4DG/v8nlw8dtHaEsOv
K/pwHtx9wIrq229pvhOCvm2q73j/r/WkdKN0/v9dzwGVdumePivI+Hr5+4Kj
byfj6bu5GV8v56/V+1jV+1H9pQ7/XfsLMK4Df4+opX5fU+0zu9vnnF20rRzj
9eL3N/CepdoXeb9jlGK8Xjwf+B4k9j/VwqJ/6HChvLIuzsF6VftSsF7V/qrl
07Do6INllHXx/QNYr2q/uqHNxqXGD1UY9yd/Xh+ovbNN/cmVFN3uZu5Ls71a
ErCtRLiiA9/HgvcUWbdqmfvG/HfXHH6++ytFBz7vt2o9VbpV+G3ryGK1Kit1
5Pu9SWMWFJ31uKaiD98fRgCdhZ4Lo1bcPzuouqID38cCnVV6tlbrJuvDdXP9
UXlcjoF1FX3498xNat1UPrmt3v/I+nyZ+Vz+Wa2nfL3w/M1qPWUd+HrDIzot
+fMdP7crdMsD9LSxtpn70uU9gr9p8KiOohsfX0a9z1H5qpxaZ9k/VTLzjFHr
LOvDv3fN3B29b6WzgaJnh54en8jv12qdZd3493+gm1P0XYk62jHm6xL8HFaa
8j0tZXJZc7WbzRS/8TznOA/7HYlop+jJeTP1fl7Wk+//w/zGBkRPa63oNizC
s7/FetpYVOZ9YOfEr7LU/K2FotvwzPEN1fsWWTd+f1ip1lnWbX7mPu06Wz5p
xZM2ij78PW62WjfV/q2vWgdZH/79PFWtQ6Lq/KxaB6c4D/sFWK+N5c/8XSNB
vS45z32hXn5FnaecD99fgT6E8nof/Xzkj7fpuD+hgbXv2qaIVBD3SxTvWZBn
SP8MWVim2wbMxfco2CdN3FfheH82OKSUcwvukynrzPttwvPvaVLug9/F/H0S
xyfylPWf8GfTexdn4z4/4n4I+/xQcbT9Nnn+y94krRqXF/MMKaLs9pqpySiO
6j0a6kD095PrNSq6QHxETzSeaftkcj/4jmMi+tcZWNHwH5P3bEJxVM8RoL+s
57kBDe91HIb7KQk94byibyTUX37vnm28ULIp7q/llmbHPuu37RGuS4b0de7q
e6/G4nnFcwpy8b0FzivGwzyJ+qrqBeOI+zbMU3CYjz9zzzTuWDwM628j4ht8
9zl0iv6QcF6Dpn8jH8+fRzAf8fwF86rGgzxVfoO6hbBimf6BeZqIfEy++zo6
RT9JqL/oDwn6XXieO9OSuwW0Qf2mZL69et9LCWF43iDW+tTQkLpL8P3ELZ0z
RBU4HYj7Hbml2Ll9rrYtjvtZuaU6ufrNeNQIj0+TDhX9Jf+Ec7j/Rpo0cseh
K+aXqH+s5/vP6wJlDq/FugWxAaWNB59NwfmLPoeAJ2r7FvLxvC8fXK/wJ8zf
3/f1rvpuA8cLDtcrOMjH8/3KV79Bp+ijCLg8Hvch9MYXfQjhfUlP5K/tN4jH
Q/9Q/RX9ievUxjZUqXA0Xyy+Hm1syeOnUSvKovzl62hnt2tTIhfh+oawmodq
V/IfhOJ7frcNmln695p4vSbf/Q9lzvsEwnoZWN5XDWsOP4zXZWBj957JGX4e
+yeETZw1+evVqeg+LOdzYnlSSNs/EZfH991hyDeiM7oPy9dvfEQn45ga2A8O
Nr7X3dPNNqDrRc5/0CV9wa3nsR9EP0Bw3t+p7T/Duc9+KTL32S9F5rxfCtSZ
6HfnJPrdOan+b2lSic2mK+MtuL9QmpRuXLQxyID7C6VJZ/oUHrvyE8pHvi5y
528d4fwS5eP5XTV7ixs9XyE9ZV7+Y+TgRgm4T0KatL+SpcKNz7hPQprkGJY2
fX8w7kOVJo3Yc/PhgsK4D1WadPXtkRrDquLrzsYc77cnlHmB+xTZ2OonW+pa
N2J93NKfzjVlv5HfUyDPkI6c+e3ym+VYN7dU9ei0aTW/xrq5pYV+A+9/MQT3
ZZKf+7VbVXNPwn233FLbSVXnXV+A1+uW9h7Lk7xvE75ebCz6t40332n60mRI
fk+OH1+RgPPJkCpMqZKa/QDOJ0PqXmRznvFHcT4ZUlzSF41cZ3E+GdLRXrOH
d76C9XdL47oPaO7cg3mG9CqL35qzd1BdPM/xGN2HdnOwz0NY7KI6fqNsqF7y
eGe/T7NrRCJfyTxPC3fhAiZcR3+iz6E/0edQ2/ePc973D1534vs5vO4Eh3rK
74mryt4/cAbr6c/q6g7tbpSIdfNn9m6Npt3ch3RLJPqqJRL9xOTnyPvqXfJt
3Iv9bGD976UOeXUX6SOPP7X0+auq27BuBlZDiq476SrSTR6/yD0i6fQapJvM
ozrpl3Rcgnwl86oH4wa8mIN0kLkxd342dirSQebXR2+zmccj/6vWC+toYJd+
GjX91QlcRwOzVkj488uV2OcG1nrnoyKjRuO6GFh8uVzDfmmN62JgVxOaHftc
BukpPy/69Hvc4NphrKeJbXqea2GuxVg3E3vRp/njLt9j3Uys5F8xFVdFYt1M
rH/UQeejonjeIFbkS08/QHQf8Pw5w92efoBIH89zp6KnHyB+HpnYtqcvzxf1
w/qbWEqvInn73cK+srBzvzS5vSIecfk+3ynn/ult+uN8LOzHL27sKPcDzsfC
Bo7tPTlxIn6eWlitW2/atRyFn6cWFlRjYsmHg3D+FnZvadDn73uheeV8eh7N
Vy6yJ5pX5vHd4zr/MhDNK/MTfvrYkiPRvDJ/u3rEniVONK/MC9V5ft84Az/H
5XxqnjpYph/i8vjWDztnHzUf369srHuJHHOCNH2HbCzuzMRfxpfEPrexxL5v
n7kq4eepjaWaouxdauL7j43oi2Uj+mLZfPfvku+3SycO3hv5DPWllO97WcP1
xkUWlL88vlzUqepLA7AfQtiqsC6zHpdG6/Ls6yLzJz7Lj9Yl804VPf9/GbQu
mafmvHB2Uge0LplP+eT5/8igdcn8i0fRV/PGYR9q+3dx7rOPk8x99nGSuc8+
TjL32W8qkejflUj070ok+nclEv27Eon+XYlE/65E0Rfr/wC5xwT4
   "], {{
     {RGBColor[0, 1, 0], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
NL4PLQ==
          "]], Polygon3DBox[CompressedData["
1:eJxNmnf8l+Max5/nue9vVshKtKNSKimhqXDMY2WEcxSRrW2WrHB0ZK+crIZV
VpGtkhUhoiIZJXsde53jfN5dn/M654/P73tdzz2e+7nHNT73r/nAIX0HV0VR
9NefrN89akWxpuQ1hN0lnyL8WfLewsmSdxPWk7yu8CfJJwl7Sd5TOFFyL+H7
sii+E3pKPl7YXWW7CcdJPkhoL7mdcKDkHsK3qvtPobvkwcI+VbyTdx8stJa8
UmProQEeIL2t9DbC/rXog762FvpKPkToUMU7eBff82/1/YHad1X7ftK3Udnb
0reRvrP031T+q9BHcm89+6iIb+Lb+Aa+hTEy1iHCvlWMkbGewDuq+Mbj/X7G
zFh75pgj5qqusKvkHXOMhTlirpgz5o4+6GuosF8V7+BdOwk/q+4StWmbY4yM
9Reht+RdhN/L+Aa+5TBhW7XtKBwqebhwQBXf1Eft/yx9C+ktWFPJv+jZRLV9
VeXNJLcRFku+Ts9+ygHka4UfJf8qTJU8RfhZ8iphjOSzhQ8lfy/cJHmB+mjI
eqWiuEDyZcJtklfq2WiVz5e+ieTJenaF5H8Ik1L0z5gYS3M2pMbYRGNtLPwh
vavqHKPHQ4QdJdfU12FFPKvDPKjO7fp9TvpGkv8l3FLGNzF//xbulL5QegvJ
3whXSH9FelPJpd7XtIp38u5KaFbFM8rYY+w19iB78VjWWvIqVe+m9tM1pqsl
3yzMkLyenq0rvCu8l6O/DVV/hcq7S8/Sn9H75wlJck14XPJSlW+p8n2lt1T9
Ldlzks9Qn2er7G/C2SmeUcaasrb7Ca2qaEPbK1PUZUzXp1iPsZIrveM49b9C
uEjyhZwRyRNU/nfWX7hb8kPC9ZIvFaZJvjGFfJ5wheRzhHOLaHM5ayOcWsSz
03i3cGERa3yx5CHCWUU8G0zbFH2dJpwueZDGvLPG3kc4RvIyjWm4xva6yreQ
fITnu7vw11rsMfbaiayp5BP0e7xwtHBMGfN+jn7PFd6X/I5wuuQzhOWSG+TY
i6P9/bOFXSTvKsxlv2hMD6t8P+lPS9/U9ftKf0ryNP3eLdwmTBLWog+VHyr5
pRxAPkx4Occ7Rvu8MPfPCAdJPlh4VvKe+t1DGCmcKmQ9e0L9jZD8GPtZ45kl
vbf0x9mvwqPSB7CHc5zBsySPKuNsct7OLOMZZYNSzPUmvFP6m/4G7Es7yUd5
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
UdzJ6A==
          "]], Polygon3DBox[CompressedData["
1:eJwt1nmwzlUcx/Hn8liylrJOZSnrRboUbpMlO9VVSdbItCJL2iTFRQutlgih
RaUpExWjqFCKQlOmxYRGQ4VSZCvS6zv3/PG+5/P9nPM95/zO9tzaQ0ZeO6JY
JpMZhhJo7U9ZRpkwMTebyezFpJxM5hHlL/gVr6ABb1fxTOZvHEFzuXlogb3q
ntPmFF6iX8QCPCk+Gfn0YryOp8QZrFJcLs7HKPFOfe7A4jTWUOUB8X4spS/l
HYux6VkxHhamMYrhff21F7fBGHFfbe/ilReXQ0fxHv44erKyLurhH/4JvENf
pu4kfZFvOhrjISetSyl8pL9WvJYYKT6OefQTyhPRF4rjA+0686/APeKyWMtr
J26Lu8V/YCr9eKw1HhWfxnnGOxcVMC/Wwlw2qt+EbZjJ2499sT6YHn0oG2n3
O51LN8PFOIw5vOcxP83zN0wLjafxmPhNdKQ7oAvuFefqbye9A9+kcf/DUvot
vJb2cjWuoXuiB+4Tr0xrOVp5BsrgGGbwpsY3oWFavzgbL2MupokP4a8093nJ
K4d11q9AfDXGipelMzEi5mXPTuPj2KNYa1yZ5vI2LqHvVJZAyTin2q7UXwt+
cwyP84MxsTfomtbgX+1WaNdU3ATDeG2syz56Nt0SrdCFV8p+lcTJWG/e+bGX
cR7UrefNoM/GBv2NjHljorg3qsZ4/InoLj5LzhbeVvyAWbzqvJ/p3fg+eb14
9Yz5An093Rvd0Q09UEfdfHWDUCG+y/cMwEBUU38B70Ksw3RtCng15dRC/dRv
T15DugFqp/7yeX/KOYg96e4X6rPQ/KuLq+UUfUdn7bJySqBiOs9xV3OwBbdq
VzH2Wu5yufXF9bBdPFruDXJ6owCLtBvF60p3Q8/k9ePl0o3RHAt4u+I9wU/p
LZuiPJjuwuw4t+ncD5PbQU4+3RbtcBuvM68T2mAhrwPvkJzDOJX2dzuGx5mI
9wuF4s9xEz0Y/fFgxHIHYwjapv6OpjdsJp5N93drWo8Jsf+oFGdIztq0NzXp
WviWvp13R5xvTIpzxa+Ec7Am+uStwqL0Fr8Rd128BCvolXE305z7y8k3r9bI
S+sX3zFA/XjlRmzCl/gCm1NdfFtZuZ/GGaKboGm26D19z1425teNefL6oEa8
D8rJ6qcgS6/RLo/fDId45fRXm66FZXgmW/RbE785r6Z7fJQ+jnfl5oobxRkU
/6h+Av1w3KW0Lrsxnn4o3tf0xtYwxmf0BqxOa1UVVfAdxvIqp7MT/U3E5Jyi
38OG6XfhCPZjDm9bvB30KixJ67w2vaedcBXuF3+CvnQfXIcHxHXie+Me4kDq
rzRd2T5UwfK0BqvTexb9rMGH+DqdtSG4Jb47W/QGxlu4Lt4VXmnlVxiazsvN
qd2ZMR/rN0h8Y6yPeH3KGacsH+9FvFXZonc93vdeac6b03f0w8B0RuJ/hvg9
id+VwnTf/ges7g1V
          "]]}],
       Lighting->Automatic]}, 
     {GrayLevel[1], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtlndcVlUch1/ufc2VFQKpiBMUxUTEjVmJbFAQTAOUABNSU0vN0TJytK0c
DW2bNqzUHLnaacuGVo4cadnQMhUn5ej5fc73j+/nee71eO4Zv3NeWpWPyx/r
BQKB9cQnm3joCj+HT5Ao/CF4O6mLj4ElJASvgotJe/wtOJQ0wWfBMhKJPwBv
I7XxkXAKaYhPgEWkMT4DPkKa4g/C6epnJpxIQvHx8A5SDx8H95BuGudPJBU/
Lu+N/6g21+IHNYZQfXcfScNPwl9Jd3w5nErC8Xvg3SQMnwy/1LeWwV/Idfjv
WhNrcyes0LwmwftINL4APkqa4/Pgw6QN/pLn1s7W8Bm4nrTDl8D5pBk+Gz5J
6uP3wn/JQPxyNikzGAicwvODzkfiqbwfREbh6fAs7bMCblN/w9PRM7BQY7Pv
vkoS8I1wEemEb4D3a+9sH5eSOPwdjS1W47R+OuKr4XMkBl8IX9R8H4dzSQQ+
TesQrrVapHV4XjXWFn8FXrD1JucDbsx94G74J+mLD4MtmE9//Gv8Ba3b6/BK
3ufjV/iuJltozS/z3TqcxxvYGuGN4C0898C3eG59bZ1vha9pPC9bXdDuBvwQ
Xk0y8XM2Ft6X4p3gCdXYAZjBXtyM9+N9FZmCj4Z5ZDhey75LxuIt4Seq1Z1W
U9q7TNiG3IjHw/+0d6dgkOdkrUNb/Hq8MexIhuHt4Pv8W5Lq/zvSBf8Yvkla
4k/Dv8k1+F55Bl4Dj+kc/QOPkly8Dn3+oD636fxGqT4n6sza/XCa5OGX+s7T
dB7P6rwcVF3FaN/vUp0/Br8nKfgRz40/QXW4Qvti52CT6tDumcNkAH4J31qF
98S/1Xz7aF5vk874R/JY1dha0gvfCj/Q+myG61T/78JvSD/8L+3pCTwPPstz
PL7Gc9+NV/2HqPYa+s4zdNZC8WI8Bl7gORv3fHfeE7Uvtqc5qud6eBHeGtb3
3XrWhbV9V3s16nOg1rmV6jkcRpECjSFK9dBed8IZvIzxF+E1eDlearWI94eR
GoMPI8hQPBaGqcaa6lsleAfYhAzGm6lNtu4ZO5tDdF5S+cYRvDjo6n+Mav44
rCTHSALPZbAr7OK7s2P32FW+a5MMO6vP5r7bl17a6zk640/Br0gHfCX8glyt
e2OF3tsZj9OZTfRdm0TVRnrQzdf2KE7zsvmmaWzWvlpjtrEn+e6+tTv2Q8/9
9r0BK0kdO++e+7+jtbY5pBzvpjmWaF+6673dCUk677a22dqXAfBT1fB7nquB
Au11sfrPgj9rvrtgOamFj4AVvrtLR/lujkfxXFjsud/5Up2jFNX5dt0J+z33
O07TwHB4UXfvH3YmeHkIzwm6e8zutx666y7iFXb/4efwm/C0oKv/aN7t8Nzf
FZ/pPre71+7g5KC7Z+wsW/9W/ylwFs9T1X+l6ifXakRztL8HrE0IP6KFtP8f
5lD0nA==
          "]], Polygon3DBox[CompressedData["
1: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
lnlfxwPviG9icYDX+xeWmq6i
          "]], 
         Polygon3DBox[{{1103, 240, 103, 92, 1095}, {839, 105, 246, 247, 
          852}, {875, 874, 1111, 255, 897}, {835, 834, 1105, 243, 1096}, {845,
           107, 250, 251, 864}, {823, 120, 256, 257, 902}, {802, 90, 236, 237,
           1093}, {841, 106, 248, 249, 858}, {837, 104, 244, 245, 1097}, {804,
           91, 238, 239, 1095}, {774, 78, 234, 232, 1090}}]}],
       Lighting->{{"Ambient", 
          GrayLevel[0.8]}}]}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0ElOAkEYQOFCBUWuwIYDsNa1bFGBjRoNKooRieCWGyujgsrgxFdg0q/f
q6S660/lau1KKxFCOEJ1IwRPuPS6wqa+4S2+5TqS+p5T3OBtfuAmdvQjp7nF
bezqJ87wHg5wiNP477gPHWQNceagRBwGd/pPnvAv/8QZ9Dd/YRG/t65hrme4
1lP+REV/8DtKesJlHvMbXnFsPeIhLvQ5BrqPon7hHp7R/b+jAvaRX4+5urMl
ztMn2A==
       "]], Line3DBox[CompressedData["
1:eJwt0TkvRGEAhtFrjGWMfRaGKPwEscfeKCQUszAklgjRmcJSqKmpqakQGiTU
1NT29W84EsXJ8373FvfLTOtiIb1aFATBJktMU+xBmBJKmQkHQZmWM25PELEr
mLWjWkkVc87VOq81WsuCXaf1ZOyYxsnaORJ2kgYmnRs1xbLdpHlt1hZW7JBu
u+cu+xxyxqjn11rQWz3WE065d46E3Jkoj85pzZAlxyRT5PnxfsS3vnVYh/iy
B/VTB7SfD7tP37VX37RHu3m1u/RFO7WDZ7tdnzTlO400kCRBnBgP3l+59yUX
3Dlv6Dpr3DiP6bm26ZEesMcOW3+/w/9/+gscgi2a
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1075, 1295, 1294, 1293, 1292, 1168, 1288, 1287, 1286, 1059, 
       1243, 1242, 1154, 1193, 1044, 1197, 1196, 1142, 1210, 1028, 1010, 1194,
        1011, 986, 1187, 987, 958, 959, 930, 931, 903, 904, 878, 879, 850, 
       851, 824, 825, 1114}], 
      Line3DBox[{1076, 1311, 1170, 1304, 1303, 1302, 1301, 1300, 1298, 1061, 
       1156, 1241, 1240, 1239, 1046, 1213, 1144, 1217, 1215, 1029, 1133, 1190,
        1012, 991, 1189, 989, 963, 961, 935, 933, 908, 906, 883, 881, 855, 
       853, 829, 827, 1101}], 
      Line3DBox[{1078, 1325, 1324, 1323, 1172, 1320, 1319, 1318, 1317, 1063, 
       1262, 1159, 1250, 1249, 1048, 1221, 1220, 1146, 1222, 1031, 1135, 1199,
        1016, 997, 1191, 992, 970, 965, 942, 937, 915, 910, 890, 885, 862, 
       857, 836, 831, 1117}], 
      Line3DBox[{1079, 1175, 1336, 1335, 1334, 1333, 1332, 1330, 1328, 1064, 
       1162, 1261, 1260, 1258, 1049, 1225, 1149, 1229, 1227, 1033, 1137, 1203,
        1017, 1128, 1185, 995, 974, 968, 946, 940, 919, 913, 893, 888, 866, 
       860, 840, 1118}], 
      Line3DBox[{1081, 1352, 1351, 1177, 1347, 1346, 1345, 1344, 1343, 1066, 
       1277, 1165, 1269, 1268, 1051, 1232, 1151, 1234, 1233, 1035, 1140, 1206,
        1019, 1131, 1192, 998, 981, 971, 953, 943, 926, 916, 899, 891, 873, 
       863, 1120}], 
      Line3DBox[{226, 520, 519, 518, 517, 516, 515, 514, 215, 418, 417, 416, 
       204, 362, 361, 360, 193, 320, 182, 302, 171, 160, 149, 138, 127, 116, 
       273}], Line3DBox[{1083, 1282, 1281, 1280, 1279, 1179, 1350, 1349, 1348,
        1068, 1237, 1236, 1167, 1209, 1052, 1245, 1244, 1155, 1238, 1036, 
       1145, 1211, 1021, 1132, 1195, 1000, 988, 973, 960, 945, 932, 918, 905, 
       892, 880, 865, 1107}], 
      Line3DBox[{1084, 1365, 1181, 1359, 1358, 1357, 1356, 1355, 1353, 1069, 
       1060, 1285, 1284, 1283, 1053, 1255, 1158, 1248, 1246, 1037, 1147, 1218,
        1022, 1134, 1198, 1003, 993, 976, 966, 948, 938, 921, 911, 895, 886, 
       868, 1108}], 
      Line3DBox[{1086, 1373, 1372, 1371, 1182, 1370, 1369, 1368, 1367, 1071, 
       1305, 1173, 1297, 1296, 1055, 1264, 1263, 1160, 1257, 1040, 1150, 1223,
        1024, 1136, 1202, 1005, 999, 980, 972, 952, 944, 925, 917, 898, 1098, 
       1110}], Line3DBox[{1087, 1082, 1382, 1381, 1380, 1379, 1378, 1376, 
       1374, 1072, 1067, 1316, 1315, 1313, 1056, 1273, 1164, 1267, 1265, 1041,
        1152, 1230, 1025, 1138, 1204, 1007, 1001, 983, 978, 954, 950, 927, 
       923, 900, 1099, 1125}], 
      Line3DBox[{1089, 1394, 1393, 1184, 1392, 1391, 1390, 1389, 1388, 1074, 
       1337, 1178, 1327, 1326, 1058, 1278, 1166, 1276, 1275, 1043, 1153, 1235,
        1027, 1141, 1208, 1009, 1006, 985, 982, 957, 956, 877, 929, 849, 
       1127}], Line3DBox[{1102, 828, 830, 854, 856, 882, 884, 907, 909, 934, 
       936, 962, 964, 990, 1130, 1188, 1013, 1014, 1200, 1030, 1216, 1143, 
       1212, 1214, 1047, 1045, 1251, 1252, 1253, 1062, 1299, 1169, 1306, 1307,
        1308, 1309, 1310, 1312, 1077}], 
      Line3DBox[{1109, 869, 887, 896, 912, 922, 939, 949, 967, 977, 994, 1004,
        1015, 1201, 1023, 1032, 1219, 1038, 1247, 1157, 1254, 1256, 1054, 
       1171, 1289, 1290, 1291, 1070, 1354, 1180, 1360, 1361, 1362, 1363, 1364,
        1366, 1085}], 
      Line3DBox[{1112, 901, 924, 928, 951, 955, 979, 984, 1002, 1008, 1205, 
       1139, 1026, 1039, 1231, 1042, 1266, 1163, 1272, 1274, 1057, 1314, 1176,
        1321, 1322, 1073, 1375, 1377, 1183, 1383, 1384, 1385, 1386, 1387, 
       1088}], Line3DBox[{1119, 861, 867, 889, 894, 914, 920, 941, 947, 969, 
       975, 996, 1186, 1129, 1018, 1020, 1207, 1034, 1228, 1148, 1224, 1226, 
       1050, 1259, 1161, 1270, 1271, 1065, 1329, 1331, 1174, 1338, 1339, 1340,
        1341, 1342, 1080}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{305, 1187, 294, 295, 1189, 296, 1188, 297, 1191, 298, 299, 
       1185, 1186, 293, 300, 1192, 301, 302, 1195, 307, 308, 1198, 310, 1201, 
       313, 1202, 314, 317, 1204, 1205, 318, 321, 1208, 322, 326}], 
      Line3DBox[{330, 1194, 304, 306, 1190, 309, 1200, 303, 1199, 311, 312, 
       1203, 315, 1207, 316, 1206, 319, 320, 1211, 334, 335, 1218, 342, 1219, 
       343, 1223, 350, 351, 1230, 358, 1231, 359, 1235, 366, 367}], 
      Line3DBox[{371, 1210, 327, 323, 1215, 1216, 331, 336, 1222, 339, 344, 
       1227, 1228, 347, 352, 1233, 355, 360, 1238, 374, 383, 1246, 1247, 386, 
       395, 1257, 398, 407, 1265, 1266, 410, 419, 1275, 422, 428}], 
      Line3DBox[{430, 1278, 424, 421, 1274, 1273, 412, 409, 1264, 400, 397, 
       1256, 1255, 388, 385, 1245, 376, 362, 1232, 357, 354, 1226, 1225, 349, 
       346, 1221, 341, 338, 1214, 1213, 333, 325, 1197, 329, 373}], 
      Line3DBox[{438, 1193, 368, 363, 1239, 377, 1251, 380, 1249, 389, 392, 
       1258, 1259, 401, 404, 1268, 413, 416, 1209, 425, 441, 1283, 451, 1289, 
       461, 1296, 471, 481, 1313, 1314, 491, 501, 1326, 511, 521}], 
      Line3DBox[{523, 1337, 513, 503, 1322, 493, 1316, 483, 1305, 473, 463, 
       1291, 453, 1285, 443, 1237, 427, 418, 1277, 415, 406, 1271, 403, 1261, 
       394, 1262, 391, 382, 1253, 379, 1241, 365, 1243, 370, 440}], 
      Line3DBox[{531, 1286, 431, 286, 1298, 1299, 444, 454, 1317, 464, 474, 
       1328, 1329, 484, 494, 1343, 504, 514, 1348, 524, 538, 1353, 1354, 545, 
       552, 1367, 559, 566, 1374, 1375, 573, 580, 1388, 587, 594}], 
      Line3DBox[{600, 1394, 593, 586, 1387, 579, 1382, 572, 1373, 565, 558, 
       1366, 1365, 551, 544, 1282, 530, 520, 1352, 510, 500, 1342, 490, 1336, 
       480, 1325, 470, 460, 1312, 1311, 450, 292, 1295, 437, 537}], 
      Line3DBox[{372, 328, 1196, 324, 1217, 332, 1212, 337, 340, 1220, 345, 
       1229, 348, 1224, 353, 1234, 356, 361, 375, 1244, 384, 1248, 387, 1254, 
       396, 399, 1263, 408, 1267, 411, 1272, 420, 1276, 423, 429}], 
      Line3DBox[{439, 369, 1242, 364, 1240, 378, 1252, 381, 1250, 390, 393, 
       1260, 402, 1270, 405, 1269, 414, 417, 426, 1236, 442, 1284, 452, 1290, 
       462, 1297, 472, 482, 1315, 492, 1321, 502, 1327, 512, 522}], 
      Line3DBox[{532, 1287, 432, 287, 1300, 445, 1306, 455, 1318, 465, 475, 
       1330, 1331, 485, 495, 1344, 505, 515, 1349, 525, 539, 1355, 546, 1360, 
       553, 1368, 560, 567, 1376, 1377, 574, 581, 1389, 588, 595}], 
      Line3DBox[{533, 1288, 433, 288, 1301, 446, 1307, 456, 1319, 466, 476, 
       1332, 486, 1338, 496, 1345, 506, 516, 1350, 526, 540, 1356, 547, 1361, 
       554, 1369, 561, 568, 1378, 575, 1383, 582, 1390, 589, 596}], 
      Line3DBox[{534, 434, 1292, 289, 1302, 447, 1308, 457, 1320, 467, 477, 
       1333, 487, 1339, 497, 1346, 507, 517, 527, 1279, 541, 1357, 548, 1362, 
       555, 1370, 562, 569, 1379, 576, 1384, 583, 1391, 590, 597}], 
      Line3DBox[{535, 435, 1293, 290, 1303, 448, 1309, 458, 468, 1323, 478, 
       1334, 488, 1340, 498, 1347, 508, 518, 528, 1280, 542, 1358, 549, 1363, 
       556, 563, 1371, 570, 1380, 577, 1385, 584, 1392, 591, 598}], 
      Line3DBox[{536, 436, 1294, 291, 1304, 449, 1310, 459, 469, 1324, 479, 
       1335, 489, 1341, 499, 509, 1351, 519, 529, 1281, 543, 1359, 550, 1364, 
       557, 564, 1372, 571, 1381, 578, 1386, 585, 592, 1393, 599}]}, {}, {}}},
   
   VertexNormals->CompressedData["
1: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
yKgnKZ6Ke4uGUfF5Vq7e7/JHYKfHmg+JPQeGj1aDDdb/YZeSEzWyhjqZxG1D
obnAONlas4PAw5baheV0ZdHgLhc/zBvDsxYqb9zWZ9jpJyGEQsLMRjBvTNmx
i8obi+d89aNRl0X6tIcsXxLjRSQ8b+Pxhrv1f76Uk0Utr365DhH4vZTgMoxz
tE4+qBSXRfEv3O/2E7jY0lQ5xocYWksvCRLnlMltMq47RCwaqHVHXtLssN0e
WeQ9/WCyl8ATbi9R8drqz4NcViZwK7aRhYczE5xJd29yEesp3npxXX9QEHWN
T668v56CXnRwOGC/ChzjPDIYzY8mjRwnpvQTkWZURhPWAWbNuMl3x58H7bz/
amDFNh7lMG1xd8Tn2mQV/c1XXKhbqkBl3SMa+Q2x22E/B6kw5jhtdrSStxix
fD4K9UzEp2K98f4ys2dZ6jLoRNfvquOj+YhtzrrDiPCfJftssS3mjIji2fbl
L/d5NON0ggXff5i+vv1NFqMNWKc1794g5UGFDzlsmhhf285TXJl6GGSgrzOK
OQWYwm654H2aerqK8fcNc9D9w2Z56lIm6ETXmNAQeNVBSY4r/LoQW2//+/ps
CrR98Ld+T+ClIoeuNqmwo+7tPbmXI88jHanSR5jP57Mwpj0JjCjs+MbNmOIA
pBTV/h7rUVcm8TdrMtIg13bVv7SpbsizmMMKn/vbn0fKkCnLTU+eu5hPu5ij
HsVr23Fc6j9u9UrxsAkk8jCIT36/AsqhLLfx+SUVfPLU80EleFd4MIslPgCq
5k224bqJZFRRJzvzTetnY02Yx2crCLgznoPjXgan0ezSDBuMsPwW/WHuBWX7
tEJxHu7T+rT23gt+MIlu08rLDIHDjb8VMI8UJcX0r/+wKWRKD0VlqAdCvn1U
2WcCP/m21OzvoCoEjZtFfVjRRpTH+kl4nXXkDaWrXctNLpulBNYiB7Tm+P7r
Xwj20fk4hIw1XWo8m3drY1QrNPsPFVdXUOBzPb8FpuIZvGc/O0NYLTdVJ3Ck
RU6lw5IByop9WiumnUHTd58Hxldo2fNZ/+WCovNfuVLe+0N2aPdD3L/+My5y
TNVcCEZt20LELcLBYtvEBNbTO6F8hsOtVBym2Q4uO05cAu1ki6/4XgQN3TWO
jg0ZGLD0ay3JjIX2KeFBrJcVH/zo5MgdBYjqSCN/MrsGW0N9/9PTq+gv2sO4
GZSiG+NkiDqXZ8BZDNe5iZ2sdi0kPlDd7n6aTTcI+HdsbcD3oGycag6U25Dh
tPeLD/eYr4AsdB7GPEynhhlLcIoihEuLlA9fSAQRGQZfzOOZROpoxwRpQM7X
Aq9vQekgXZe1M5rwK/KSm5t6lQ4sWTt+nJTMhhKLFfE6fF9Rg2euOlEaRFdV
dNfGEuD13TsNOE/wznFi+XZHCWo8ZzyuCKXB+3zKCIWY54F07de5FE3YIqRc
G/I6E04O3PVbJuYpY9rfP6F2AARzX4ofSs0F0cayFDqsh0+K/SpZpQ+akQfW
1oUKwc/TS2GeiAMKgn4Xx4cNoEatTEdMLBf8WXeV4v4R09Wd08WeBlAdkeAY
/Oc65Bx3trIn8Aj95Q+emwyg1/3l05YX2eD4RkAJ9+mc1k27q2oNIPnhqpha
aSFo6L19X07M/+CD81yEiQHwJkh7ubEUwhSlkeEXgat2GZScYjQEfqVl/zfm
GdBrnqeuSvyX3aYfWkc+6oHgwB2B79npkPao4RzuTznRfjnnNacLWV0FlAsS
aSA1Tev3kMBDb9GbuHRrg27wsgQ/UxLE7Df+sBfHn7jO71mH1WHiXP8P8fZY
SHGsScL3gn6W1LyxYlOE2bMTOQLhUTB38XEQjj9x5HzN1QIyWO8c+sB+Ohgi
9/7OxHnj4vi3mxo5OiDQuPfNVE4KWPCbLc0S36V56/EkNFwNHqyO2FQbJsJW
jR/hOB7Sm42K+bTJQmPlPuUYu3h4LtSvi+PhVd5DnvUkQVAT7mmzORMN0wtt
hjge2nEavPvAOqL1Ju6Ft8CFKFA+2hiH18M7Npt5cWgPCPR//TlQ7wkypqRh
7J8RD+7N5nbwo66XJex9e89DruVtWhwP400dIsm16sCsd9/qSWQKFHJyBeD+
HVfniJ/Umhxodza32bMngmxuQaIkMX7zyZI3B+P2waWSip+KwvHQ63r6M9b1
WjUuok1o+a0lCZLldMrRIHns0LlkAg+SJwndyCChkgomQ9eISAjJs13Efbem
9m1/fG+JodftPLLV60HwUsWsHvM245mjDQwX5RElx6l9819XEIk8dAznbywP
J0qsx4WhbaykLrkqBvYkzZ/C/UT9NvY9tH3cSG2FsSjc0gBZjARQ87ebT3iD
orezgmWvsmQKOQo2q6ioUgjcdMiehUNbAvX81uq9+88ZdP5eBiu2T72mR1Cg
+VYkm3YbaI+HgHrf2Bcc9645d7pdkhREJkemp+8/dAey6DVfzAfm51+uEIqW
Rlkqg+40FYognrlvCH93NLj44RsfJfRdLfiHsqkL4v0Zz4zjVeiXBa493JrI
nX7b+lBJIPpYXC+M42coab9i+qocWmcKlOdVC0IkWqZmHDcG3k2aXfBUQMOv
uOaFOf2RvYB6ML7vlGXDPXv6tSL6p6rF2m7SGw0kNy/guimoL/KXuYkymlf7
K+Oa6YYUb92gvs+Ycb3BQeWxCvLN0+w7e/Ak2jw4IInzZCPaAa+S+2TU6fiD
YT3qDAqIiOTDdphDvQ4NRjKocu8QD4OKKzrdHDiF7X+qmNv21iNZ9FnET1j8
rQNKU2v2xXVxNmn1WsJ+eRTHvZauZWSJ/mY6N+HzRXc354xvtgL63fxlw2hA
DnncOt5HvWfyf/SmMv+P3tT/AMEFBfU=
    "]],
  Axes->True,
  AxesLabel->{
    FormBox["c", TraditionalForm], 
    FormBox["\[Gamma]", TraditionalForm], 
    FormBox["Efficiency", TraditionalForm]},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotLabel->FormBox[
   "\"SVM Circle Soft c-\[Gamma]-Efficiency\"", TraditionalForm],
  PlotRange->{{0.001, 100.}, {1., 6.}, {0.8266129032265002, 0.935483870968}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.670375935776239*^9, 3.67067764498669*^9, 3.670931215329771*^9, 
   3.670931273998657*^9, 3.670931359086358*^9, 3.6709314461428013`*^9, {
   3.67093153199514*^9, 3.670931579488904*^9}, 3.6709317267899227`*^9, 
   3.6709318557661467`*^9, 3.670932002698916*^9, 3.6709320433890257`*^9, {
   3.670932081622251*^9, 3.67093209248002*^9}, 3.670932139425377*^9, 
   3.6709321842883377`*^9, 3.670932321601253*^9, {3.670932486496838*^9, 
   3.670932552789813*^9}, 3.670932672186058*^9, 3.670932764947885*^9, {
   3.670933197725175*^9, 3.6709332252440434`*^9}, {3.670933695772834*^9, 
   3.670933705749578*^9}, 3.67093937948001*^9, 3.670939417182568*^9, 
   3.6709397013290977`*^9, {3.670939906950098*^9, 3.6709399221756077`*^9}, 
   3.6715409777913427`*^9, 3.671541966397128*^9, 3.6715420542690973`*^9, 
   3.6725702866804247`*^9, 3.672571592910342*^9, 3.6726438958410683`*^9, 
   3.672644192459403*^9, 3.6726443578942204`*^9}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJzVXHl8U9XWTdO0SUoIaZKmfQgIMgm8SoFHAYV3L4MMMoiKIKAoFSgoBRyY
sURGBQEZBEEe4AAO8EBFERUlCE4VLQhWkDLJDCUtbVPaiO0Xudx7zj4nS59/
fv3Hn8vtOnuvve6559727noZY+8dbjaZTPPiTKbYyD+vvX3lx94ZfRXT9Z8i
ZUfCg5+fGRxUKF4OcJMaHbcA3AZwB8BdAHcD3AtwH8BTDNw7s0X4jVseknSg
eDnATYDHAnAbwB0AdwHcDXAvwH0AZzr0Xdvq9FfnRkk6ULwc4CbAYwG4DeAO
gLsA7ga4F+A+gDMdGtVo4F9qmyjpQPFygJsAjwXgNoA7AO4CuBvgXoD7AM50
mOrd3O3klFmSDhQvB7gJ8FgAbgO4A+AugLsB7gW4D+BMh4IrQ2q92XqJpAPF
ywFuAjwWgNsA7gC4C+BugHsB7gM402FJ53V98tPWSTpQvBzgJsBjAbgN4A6A
uwDuBrgX4D6AMx2K3KmPbM/ZJOlA8XKAmwCPBeA2gDsA7gK4G+BegPsAznRY
tfKPn48lHSheDnAT4LEA3AZwB8BdAHcD3AtwH8CZDiM3Tzjl2v2VpAPFywFu
AjwWgNsA7gC4C+BugHsB7gM402FCv+4Zng4HJR0oXg5wE+CxANwGcAfAXQB3
A9wLcB/AmQ55zWq131p5UtKB4uUANwEeC8BtAHcA3AVwN8C9APcBnOmg1y/q
QPFygJsAjwXgNvWhY1sqL24RcQfAXQB3q6Frh9dcPiziXoD7AJ5i8McM6lfr
p6euSTpQvFwJ/Tp7yPnZIm4y+CluAfw2dUh5rFIUWyjgDoC7AO4GuBfgPpBn
ioEvG/XL7Q/0squ6Dnq9FC9X9LooblKj4xYjH4rbAO5QvypJPV6cKuIugLsB
jxfE+wCeYvB8l16/2iPZPkMH3Q8ULwe4CfBYAG4DuAPgLoC7Ae4FuA/gTAft
3xtIOlCc+YHiJsBjAbhNuE513AFwF+BxA9wLcB/AmQ4dt3/QYvg3LQwd9Hop
Xq5Ej2f7A8UtALeBdR0AZ9cFxd0g3gtwH8CZDhWxi3uMWasYOuj5U7wc4CbA
YwG4DeDMDxR3gXg3wL0A9wGc6ZBtKaheXruXpAPFmR8objL6RXELwG0Ad4B8
XAB3A9wLcB/Axf1hoKQDxcsBznSguAXgNoA7QD7i/qDj4v6g4+L+oOPi/qDj
TIdNlsQ1A6vOS+c9HV/WpCryY5dwPX8dv2lMginauYvyVAc8Lolnda+KP/4H
g8c+JdYU7fym8+Qs+yOc8XSrdbxo/8vnpPOn3u/Dm2JM/HlP56/5a2WEJ9bA
nW3iTNHOhzr/jqqWrVq18oB12fl2dILrep5ztv+Rp4zr/dLx9KLzGU9UXVD+
1e7ItqwjDF/Zb+ios/0uSedh/Vw0bGu8ib/fDUi++fr98f2BsQRvdXZE1HOj
Hi/2kfIw/NTVmlHPG1vmN/3T84amv3g+byDluX9WvCnafRzpgHRDOqO+oD7+
b313/6U/kf//t+vF8TevU9tf+h/5HF0X6HpE1y/aH5APkZ+R35DP/66fkT+R
n5E/kZ81XL4voPvmSymW/s667L7cpaJvh4LIvt1myCc9HOrdBl7U6cexBb8H
lYJ7tteJS7vHwFe/cN9rBVeDymdPL02xBO418G55Bw8WXAkqC1eMccf27Wfg
xTf3t16+FFQejtCbT9xv4GtG/dzu8pmgkna0QXzMuAEG3mPrA6MvHw8qTR5c
9EXI9A+1bvXhHVKzrMb9Rcc71syZMuiXMkMHHdd5jnb1fHslMyjEVyrmZb3+
dfqqGG+S+LV1YyVc93N03KZu6/5Wu4u/i/lXk3At3mHgq/fUffdJUxMjnytl
+x4fV8bwOXb7c+ezQsZ5m/IwP1CecmV2QdL6izliPjVAPuycQNf9XRHrfXHO
+2uWb0uU4nfPsnQp3WaW8td103G6rlvSU+P3AP5449xL+W1qRqXjyaxzIr8X
8CcB/gSDh/I7AL8P8Ccb+JLL05TWgZZGX1o0fchqiilU8iZdaNTC1M7Af4k7
N8waDCo1I5dpqsqeI2aeHPeF84i4borEf3eDayN2jbsq8R/9x7UJ5w+USPyP
1bg2p0abIoOf8lQZ51XK85uBUx52vqV6OiWddb/lVKS7xyWK+pjUW77z5x3N
Dwr6mNTJhWWT8gpFfUzqPk/WTblmxnOrO3vrI9tjJZ5CR/YdpRdiJJ4Prdm7
597EePQ8MzqZb5kyONHIk+bvBv21gPwtIH8LyJ/tezT/OAOn+VsknbX85etI
vC5o/jZpXRGn+dskHi3/aiB/O8jfBvKXr1PxuqP5O9To15dDjX59OVTd/1u6
nZziDXQyrrtJyzbXKjsVVO5ZELmxnbjTwPvd823LVyM8JT/2znCZehh4mvN0
914VQSH/ZJA/u371db/Yv9v+q6/MuI70dZ+L+eey752lBq6v26fFsjofxxcb
ONUhcj7a0j/9yPuiD4uUO07tPXTgS1GHImV8cuepew8FhT7WUEcPODHWfavY
x+rq587SpvXMYh8dqusr69nm+UGhrkrjPkLrumbgtK6wIuqjX+8nFx3aUV69
UOiLSf2sV8mPr6cUCn0xqSvtzgt96os+cakrG85909xM9IlL7RSTGJeQIvrc
pRbkr8pIjGM8XvvOgWn5iZLPJ8bvrB0udUk+PxK78+Tu6i6p7yfPn7Q8US1W
qmuPyZczwmqW6noz5a5FD8bGGHVRfSxAHwvQxwL0cYN9wA32AXk/1PTxAH1k
Hk0fN9DHCvSJB/rEAX1sQB8b0McG9PECfbxAH3m/1fRJAvrIPJo+XqBPNfW3
ZjNXVV4OCvokqFvXb/+qX6yoj119/OZg8Tspoj4ONfq+51Cj73sOVd/3qD4+
oI8P6CPv55o+yUAfmUfTxwf0qaGK+4+mDzufUH2qg/tLCqgrBdTFcP35a8Ol
Jv9tX3VVev762d+951eR5xrx+cvuy7xw97aQ9Px1+8bZcw8vLpWevx5X32j4
aFaJ9Py1+qcvdhd0L5aev3547OTQCQ2uGM9f1A9F0v1IxKkfGE55XJL+Ik55
XEC3KmVJ6OsjF1NF3SqVC8/lqJfqFQq6/a6otb5ffympUNDtmrJiS25Cgb1Q
0O03JXhDf6pbWOl6Q2eqW4Xynxt66vU+UTpuxvbZiVK9GaZqw7fGJkr19nOs
77b5WbleTQf2fpg+pzOcPqcznD6nM5w+pzOcPqcznD6nM5z21w366wb9dUv1
Hggt67+mKlaqd/T1vsRK9cbN31ra+IhZqnfN9X6ZpXrT6/645L1tMVK9udf7
GCPVm/lhUdodS+R6tf56QH89oL9yvZoOFtBfC+ivBfTXAvprAf21gP5aQH+9
oL9e0F8v6K8V9NcK+hsP+hsP+hsH+hsH+ivXq/U3CfQ3CfRXrlfTwQb6awP9
tYH+2kB/baC/NtBfG+ivD/TXB/rrA/2tpk66uk0tjRX7W03d+9/WzlK72N8E
te6wD46U1BD7m6A+XbPV2yVJYn/t6rf73ptQcpPYX7tae25al5J6Yn9t6pMd
tiSWNBb7mwz6mwz6K9er6cB+70b7y3DaX4bT/jKc9pfhtL8Mp/1lOO1vCuhv
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
fFLKp8v9exrfmnpIyofygHlEXL3E/5x/iP85/1AdWP6T+lfe3S3pmFQviVfB
vCOOn/ic86G2XpGBT2uR89o/cyLPua8sjktTzkk+pPOCGE78zOlM48OAh/mt
LMGau2l6gRQ/eMPLB/M/PyXFUx7mE+Jzrl/E51y/CI8fzWtifriU5OS+/zUD
HjvwswfEc+/BZs/MzFOCUj4n6iZlxU8/I+VDecCcKK5e4n/OP8T/nH+oDiz/
J16clz5z50WjXvXMOOe5cUK8CuZQcfzE55w/A6+uvTh2Y6nkN+Jb/j7O+5bT
k8aHAQ/z1bOdlZ+O968w4m8aNnVb5tSgos6f9/qUhVeM+IpGQ92Nhoo8zA8P
8r7l9Cfxkf6OuP4j8ljVt0+s2nxhVQRPbbrwYrsyg18tvoETHnv0uVgRHXR8
1w/fThp0Jmysq+N+X1K3UK0SY93oPC41dsQnGx7/RNw3EtVbPj54138PBpXj
vD+5/tK6PMb3qur1eTJXjfzXjDnddcxpIV4F87si/Dq+vXPB5gOPmFXtv4eM
+VTEPxEdao/MLRudK865CivjL2h6UrxK+XCyFj920ObcHXPjVT1e16HRKP/c
cW2rjHhdB8pjVt++vKdPwR7BVxE9Z02uWD62QvBVRM+M9seLU48LPJF+/Weo
ti7lt6rHrgT/+FHu6jljWL3dsaq+btQ5Y372vSH1lUd9J6zx0Hj2d4nmjC6z
Ey5aVT0fHW/Uvn/F7EqTquej45QHzCsLsL9/I/6M9P3K9kj6lYI/I33Pnar5
hOrA/u7r6L0pNcc2jFPFekk8x0/zZPzEn9z9kebvA3PSQoqv7jpz03WCPyN6
rt/mueM9jzhnLAzmp1UB3KwOuaStS/wZ0bng6fptnqxfSP0Z0fm7NvalaXZh
XT+aw8b6mNO6u7frkkS2brT4iM56XdSHHhDvNP5OZv6E0QsGdk6S83nswxZP
tnVK+VAeVi/BuXqJbyN9N/ThfRvp+9s3/E918KjuspRFV1IKlWpllYt7fe+W
6iV+i/ih7cTIbdAp5KOCuXORdaPiEZ7preucalGnUFHMZfHXnLUNX+n7Kp3P
xvB54xcvVwa4DJ11HhofVgKXtH2S4lVKlzJNh8MjhsXsza1nxB89re1jNJ75
oee2D2vcZ/MafdFx78Vu6cO/qGb0RccJjx/NwWN9H3b9/n6ztC7lsQPfsj7S
eLa/ER9G+mVcL7wPI/3S/UN5wPw9VC93XRBfBcD8PRXM6/MngXW5vxuc1+1M
zzz97+5CYC4f6y/Fq5Q647X7lOu2rF7/KG5o4Dp/Ue7n9mWbU6R6KY85Oh7p
u74P03irsQ/TeLux39Z98JeXW55ubMRHnQcY6W/y7aWdmpeKOJgTCPP3RMdV
MD+Q6wvlR/P0Qop+/qF4WNHPCRSvUvRzAsXNhg5uvl/cfkjiI/pH57GqUdfl
ri+Ks32G4mx/JjiXT32+j5xuNB9PdFwFcwsRTwDN8QsZ3yP0Ki7oOH1gR0Pn
6PFhRfcnxasU3c8UN0df14/mHFpBvN3wM8WdAAfzDzmf03U90XEVzEXkdKb8
aE5gSNHzPFH/9QOZCT2kPGl8WNHvpxSvUgZ+cOv8928VcfadI8H9aI6iFcTb
DT83X/Z1UfNld0k60HgnwEFdnP40H090HK6bBPjRfMIQmLsYVvTzD8WrFP36
pTjTmeB+NKfRCuKZzncGjvmPvzpAqpfGOwEO5jpK+7mej7ifD/yLdcX9XOdn
OpP3V5F89OfQ8+R9kUc9VKa9J5nCv+eJrPvKRO35bhz/XiXCv3bz45H/ID7v
hJTNDSZkNJ4gnPcieO7QF+NHvRik57FIf/X3M+Q8FunvzIfX939svXj/ZTz5
Nd6J+h5m+nt7Wl26uVB6T9Vy+gKWP/eeiszN84N5etx7GzrXjr23oTh7b0N5
2Huwn8c1y3+q+Jz0HobO2WPvbei8QU90HhXMmeTee9S293lszPEL0nstOjeP
6XnLgN+jnvMRD1oX5fk/1cXpg/RE/UL9/bs+QX35u35AvkX6/937BXqe/bvP
faNbvW86e+4WY119P/GNGmT75lhNY10dL+bP29z5vOsqn/n9j+qquv4dPv3j
xdYff1/HPT9y54Sh3kU5KzY1V3U9dX7y3Mftq9r7kGaq3hf9fkGfy9i+2q5e
9vwHctOMuvT7DqmX229Jvdx+e8/ZetnZn6Qaden5k3q5fXhDvzdX2SrSjf7q
8ds7vtuv68xWhm56PtWurIzd1KS9oYPxvSr/3MTdd24+9tpnF7a2lXR4lNeT
O/e2+G7jxMb/bi31ccaUlxotON1B6ntnojPTc3nmmhM5Y243dIiqM6fnfbxu
nD4FP7aeViOri6GPXu9bvG6RevVzVz5/TuN88jGvJ3efdfB6cv5p33nQyp/L
9O+szcbzeC2iJzefLSPx4W6nOhm66fmk8uexiG76ObA5rzPnn1m8zpw+L2zN
3rbW383Q03hvw+uMdOP8kLlr4KyHmujfkTG/XZ55m6PdL30Mv+l+WOT/LGZn
5/6Gnrp/+vDPHZye9WKmxmbPvc/QTd83qJ5Mt3efbRvX4bu+hm56fHf+fMXt
b2t5nTndDqmrZ6w508/QRz+nLeR14/QZxevA6VPE68DVtZDXgfPJTaReVtdm
vi4uz4N8nlw+6H5K5kb60fxSec7qn/Jw+zD9zjGsxJU0DV06Lsabo/NHdNbn
kdJ5BSFpnqSOvzWsbNPIjWJdToOHzmUKgbmaoehzNf3yHFQ9/+hzTSPPy+l5
O9/9TeDh+k51APMYI32Z9dF3yWlXBB5Vnl8q+oHy2MH8Uqv63HRzTkG+mKc8
L0vXc9X+bwJtKsW5XiGlozI/e4jIH4mfeUdj3xZp7mKV4nj3SoPlF0X9w0qn
Fb3r9z4l4lXKowczv174u7huWBmw8d6Hp5eJeJXSekzbTztI8zbDimlu/o45
p8Q8XdHneXLvZyiPGcztNEtzO3Vcn/9J9Zfn4Ol90XHCz12ndF0WT9aNxC9K
mNO0zq+iPlb1vW7rfnj4mqBPJP7sbdf2+kJCnpzfqG5JIE+7+kad+SP6hoR1
ufs1XdcenT8A5s/45flsIk7Xdar3Zk7c2PEmcf5JWLnX8/GeCUFxjllYuW3f
gV/qVYhzzMJKwoJg0V4xn4j/qy/9OP3EMTE+pFy4+2Cv+RdEnZ3qb51i7D1s
om5OoJtL3blhWtWzdYW6Iv5cMypjsBov6ulSR86If+j56mK9ZjDnkM2TpPFV
ytN9D4zcbhPjq5S+1YPZj3rE+TBVyj9zbC856wj5cPserVeehynGU996wL7E
5lvS/OX5kHp81LmOfjb3ktZlNnB6nXrA9eiJnr8qz3vU1pXnPYrxtF67sQ/T
uuzq+IWn8n6V+mUFcyyt0etC17Uqz58U46k/wbzHAJgfFcn/np6VBQs8oh/A
vAu/PC9IxMm8Ag4n8wo4nOoM5hP6wXxCP5o/w87DdD4Dw+l8BoaTfALy/EAR
J/kE5Hk7On/0+fwhMJ8/BObzh8B8SHkOnohTfcJKnUmDz4x2iniVonw4/vnN
t4pzLcJKzq785CybONcirEyoNuSuLLNYb1ipd//xaVnXxHrDyt41j2zJKhPr
DSuTzp88mVUk7ufyfB49T/25hubDcJoPw2k+DKf5MJzqz56bKM7iSV/gfiLP
tRPjiQ4qmmNjBnNIzGAOiTynUcTpdSfP2RNxqqcZzC0xg7kl5uhz8NA5JADm
z3DPlVQfec6hGE91k+cfivF0PwTzHv1g3qMfzHvkcLqfoHlEVtBHa/R8OJz2
xQr6Yo2uJ/c8TvVkONWN4VQ3u5qtP9cT3Vg8XdcZfR/gcLouuh8xfqo/Whfc
XwLyHDYxnuYD5sX5wbw4P5gX5wdz6gLy/DcRJ+sG5PlvIk7W5XCqG5hfx8XT
6xHt5/K8NRGnPpfnrYk49bknep7o/oj2W78830yMp36Q556J8aQuFcxnU8F8
NhXMZ+Nw6kN53pqIUx8mAR8mAT8kRdctAOatof0NnT8DYN5aAMxbC4B5axxO
3wuFlcSeHUaVLg4q/wc1Ar0K
   "], {{
     {RGBColor[0, 1, 0], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
doGdpVzwf2m6wK0=
          "]], Polygon3DBox[CompressedData["
1:eJwtmXccl2MXxn/P89yPJHtFVrsU7ZQkpWS9VqhEeBuSTS8ZmWVlj8ieeWUV
UUpSWhpKkUQJlXjNkBHqvb6u88f1+Z1z3/dz7/uc65xfrT7ndzsvr1Qqa7JK
Jen3zLJSaaqCJsIAydWEJ1U3X3WN1WBb6U9IXyi9mfT+0hup7d5CP8kDhWa5
+6CvM4TGudvQtq/QUHIDoY/kxeqjq/qbpv7ulDxbaC19nPTNJJ+mNoXa1lbZ
4aFvJX1L4dTSYzI2fdL3WULz3HNgLsP1zc3CdsL2Qm+V7aC67YVTJF8nHCP5
aOHa0kA+SrhG8hx9c5DGfl3zuTG5jLp/CVeXBvKRwlWSbxZ607dwk+RLhIMl
f6LvOyWjo3Bx1N0onKD644UbSgO5m3B9aSAfJwyT/B+hneTV6u9o9TNfmBdr
ZK2DVN9R9QcJF0meFfs5Re1vYB9U9pz00cI2kt+J9b2o+irJYzDWscJQyceq
7MuK94i9+lb6VLV/S/hG8v+EcyTPVJuR0T93hLvRXFgifCDUFxoIM4Qj1f4I
YXrox0iere/rSv5M6CN9rvS9JX8uDJB+hrBS8lyhA+Or/qbk/eiUe82sfWeV
7SR8KCxNHuPozGPMiP4Yg74bCVvrm4dU96CwleQkjJR8v1BI/jLWN0nj7ZVc
f4f0JdKfkP6VcGbc390kLxAOlv6a9C0lrxXOkj4v3s+7wiHSx0uvFvvTQ3p3
4X3Ja4R+zFX190teKBwmfaz0XHKp8W+V/oH0NtKvEOpkXgNr4S50ljyx4jtx
rspaam9aCGdLri7U4T0JO0veSXhR7d9T+xZqv1zoJX2O9IbJ3/Atb4q3RX/n
cOdVd1SyvI/qVlVcdqH0NtL3Ey6QfJ7QSvLHqj8ouYy61sL5kj9VWd+Y77aS
q6hshPQF0ptKXyacIP1t6XdL7i7cJfkb4dI442PjfnP22+v756XPkl4n+ntU
+iPCZqXvYjfJ71R8J3dU2dOZ97BdrP80yacKn0j+WDgl3v8uvDG131f6K9J/
LCqVX4TRkpuzBtUPUf2hWltX4YrSb521H5D7zV/EneFshIcL33nu/hv6fmry
Hi2Tvm/uvTtb+u/SbxdO5DyFXyXfJpwg+ZLkvWBPRqm/wVGG/IzwonCL6r4T
TlP5YI1ziTBZeDPz+OzFkfE+/lD756W3Ys95X9gUYbTKnxP2SD6LYapfn3xH
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
          "]], 
         Polygon3DBox[CompressedData["
1:eJwt1Xmwz1UYx/Hfde+VrRBJVJZCEVGyRhqSiGRLRCJMC9ojjZGIlL2yXaUF
kWS9SlRUGDVNRaUa7SU1WaOx93rmd/54z/k8n+8553vO8z3P+VbrP6zL0CKZ
TGYo8lE+L5PZoG2Sk8k0Qq64FmpiL0bxauRlO0+lp+E5vMQrzZtPv0qXocvi
ZF62T/QdjwLxYH49L62LmljF+w19Pb8d/WPONN9i+vWYH6/wfsUvqf8dvBna
7biZnqLdga9QD3VRyRxbPVtCF6FzkIuZvPm8k7mZzAl8TF/NO0N7juer6JVY
igW8Urw59Fy8FvCO4DD+w4S0t7OxTnquF7fBRPEJjI6x2qvQKC+blxgzT3sK
p1HCO+bxXsTLKY/FecXys8/mpxx8gHfp9XgEs8V/4336PSzDQvEeDKIH4268
ID6KMfSTeDbeJb4Im635IfGDmCX+B0PooXgcc9I+x9FP4em09i8wnB6BTpiU
clAWv+MeXhXtH0nP1FZDdZS3p0Wx1thrymm59M2X4M2U+7N4syIn9GMYiTPT
95gd+0rf8nMsSPO9lXJQNOW0IM5KOqfnRq7st6W4RexHnK/fFHoynkl5GYD9
+nXRLndGVuAb+mvsTGductQFvwidg7rxzc1VHdvohp63QEt8iPa8G9Ax5WoL
mtNj49yhAkqi0Hsb8q/EmDgbcRawDdfySsV3845adE0UYlHkBWuNbSZuGt9Z
fIl+2+kd+CHONG991Ai939rzYv9YSk809i/sQYF4lLEd1Gh7tEahfr14A+lB
KILlvLH6TjHmGI6ie1rzGvoK76mD0eIqxlYypjLWpjVvTbU3Lr511D0u1+9S
Xm1swWLel94x13wZ8QnNLbyq+Ii+kzcAz4s7G1vG/KWRjxVRd7zNaZ5GdGNs
MN8MY//FIbwhXofp9D7sxULxcH0fxQi0STnYwS/w/BROoyfvUKqPsRiZaqYX
Vmay56KfsW/H9zPPQXFzulXEcSdGfenXLXJm7kL0oI/zKuZk972W19bY47F/
FE17W8w/mPYR+1kmLsZfTTfQrz6O5GbXkktXRV9jN8YdZL7b6N7oFt+E14D3
qT6fYGPcv7x9udlzHmc7zs0Tsfa0lmNxjqLmeD+mO2dg7Dfdz031a4JmOJD6
7Uy10AFd0t1dLu41a75R3C7uJ3FlbOS1FV8XtZnOapzZDal2imp3Y1i6r+5K
d91nqVYmaM9DpbS++G/E/+Un/IzacdZQB5vSfsvgHe9tLW6F8eJd6E73wK2Y
Jv4+L/vf6oOeyasQ9S+X1VAOK3l9eMXpEiifvFXyOck7juAwuvIe0O8az1ui
MdbEenn90D/qPf0vx9Dtoi7pm+LMxzp4pXglkZPqcjyvI90J3dP3HcS7mK6B
y7A61VzU3rfobR8V476OnKTn99JDcD69Kc6pPl0xNS/7/42cRG46pzvxuzTP
dO0FuBD3G1/ffA3QJO2tPu9P/XZjV7qbDkRf+j48nJP9v/0PI6sP2w==
          "]]}],
       Lighting->Automatic]}, 
     {GrayLevel[1], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtlndcllUYhj++4wC1VNQSwUG4JyqOUhEVQdyIuUMFNUSQoQIKSrjAbWru
XJXYTtrZ3rb3tr3M9tYyu57fuf+4ua9zON95z/uc5zznjc7Im7AwGAgETiOH
lvJnOb4F74mmwb3wmxhU3/rx21Bb+BZ8L2oH34XvR63gG/AbUUv4enEH+F78
EGoP341noRj4GH6tnrsR34DK4HV4JBoPR+AttJ44/FKUBrd1fp5u8NN4DeoB
v4C/j/rAj+KPaA323GtQY3glXonCxQtQBHwdno9awLvsPXjGRLiD87+tC5fg
q1ETeD2+RPOssRgwbiTcAD9Fexh8Dn9cMbRYrud/ay1W+D20O8EP43cqhgfx
+1As/KLey+J8Oz4fNYe3K26VcDW+B620mOPNQnz/JXhDVA43wluiarhViJdx
a3wrc4VoL7ZoneV4WIifsx7eBFXBTfFjPKMBnlcrEIjSPDb3Gfq74ifoj7B5
6T+PaugPpZ1Df7jmsfmi0XG4Ft6eMRPgNvgRizW8Q3wx/y/gt5XwEou/81yu
MT3QGPgj1rwdroD34XtRie0vXoxy4Exxkb2jzYcK4Xx8lcaPxg9aG86ytaAV
8Dbn5y/Wb61/MVxk/0e58DzNWaZ8Xq7xFc7nTBhchq9SHlbg25R7O/AzaDD8
m9hy+F38c5QI/4ufRWNtf5nzC/gK+DP8NBoAf4l/ggbB36t/eMAf8ufgy8FP
8bdQZ+Xey5rHfjuJcbPgRPwV2r3htzUmVuerFPWDP9SzbMzrNje/mQkPw2uz
b6vhOvjX/C8OfkdnoYt+e0rr+Rj/QP1P4u+hgfB3+I/ib/F6zJtsOYN/RTse
/snOIu2hcA4cdD6GP1tewylwffwNxecb/C+tv1TxTNQ5bca4cYrtUHQVPND5
WMVpL35ASRZO+n+F+8KP4f8F/W+b039BMT9vcaV9JdwR/4f2CDhUHK89egr1
VxyeVx17Ft+oOrMWr0JN4U34PhQJ77Y6oFp6Mz6GeefCY/GdqmNW03J1xu2s
r7M4witUG3vCr9lYBhyFI0N8HKaq/v+uXLK9uIj2KLgxXle1riHeSOf3MjwM
pVptsbOLhsB/Bv0Ye/c6+C+0E+A/gr6epygmdu/M0fptj4ZoT2vrLojSepI1
j/UnKbctB0arDoyCp8B/B/06E3Sm8uACONf5HOuldx9Hez48w3m2HE5w/pxa
nPfgU2lfDU90fv4Mq4eqFUtVN9LQPDjV4oHybf22/ygbnun8PAWqOQ/pDD5h
tZ32MttrixNKh+PtmaotsdpTu3/tLpijNU/D15jgw/gC1aUScbbeazqaDSdb
XqvuLXL+HowK+Pv6MGoNH8V3qu5ttXWhRfBimy/ovxfy8FeD/v56ED9i5wfe
jJ9EHQP+3q9RLT2AH3L+7rN1vqncewm/P+i/DY4H/f1iNXy33j1TcbZ3LFV8
rFYvVExOah+t/vRV/o93Pp4W/2znz1f3gP9OsLue6yRQiG9y/q7ZhRfRDoWX
4QWWc/a+eDr/y4Kn4JudvzvKnL+7LVb2zVOs8VbPNwT9988B/ARqA1fjGcqZ
kbZ2vUsVHm17A/e3s6Icm4wPUi5Zvu3X2bfvjd7Of5PY90+h7TE8C49RnemC
36H4P4APdr6e277fqjg8o/5JGh+jc21n2e7TyTo7toYZWtt0PStTa07VeWyn
MQOcrz95inlX5+un5fBw5V6K8+tP1/lK0rO64/0Uhz52Ppy/60ud/26M0hm0
OdNUZ0ZoXyz/Zzt/v891/lxYrtq93Fk1IRzvpPfthv8Py1YtwQ==
          "]], 
         Polygon3DBox[CompressedData["
1:eJw1mHmAllUVxu937wABUYqgIo4MISAoisriggRuyJKyuLEMMKPCDAwMIAMM
IDAgBAgjihuoiWhilpZLWVkZVprZXmS2qu1pi9lels+v8/THM3Peu5x77tnu
OV/f+uapi3NKaUIlpSr9v7CkdIEwXpggzBAaNT5buEj0l7T4ZNFnCs+JflDQ
1jREaBD9bI41zH1Z+KLX9/P8K8LLwqvCz4RvCF8XDgnfE74inKK1ZwlfE71I
Zy4VPU+YJvo7Gvu28Cvh18IsjS3Q3BzhEtEf0diHLcOz5jlMc4NSnPUp4ZM+
k+/J2nON5pYIU0vI/JxlfMVAFmRiDhlY11RCtq9q7FTNDRCeFD2lBE/WsPZ8
4TzhMuFy4Sc5dIdOviB6TAndNlr+lz1/fgodXaqx+aJnCefYJvWir7CtzhXG
ClcIVwqPa89AzR0r7BNdpbFxokcJv9f354ThoscIb+TY0yC6NgWvN3PMseY1
0e/Q2EXoXjhK9IvW53s9f7H1N0M4VXQSLtS/s4XfaP6Xwi+EPwh/FD6Uwxe4
P3b6ufV7gdc/JXxaOCg8Y/sdMg94/SmH3H8R/io87Tu94bmHfAa88YUh6F28
61L49T0a+4DwiPBR+xC+9Lsc+sH/hmptf+ExjzFXSujy7hy6Rcf3I7vGzrSN
sTW8qzV3QoozkG+E6BOFH4i+Uegpukb4oOgTtGegecBrlHC2bYo9Pp6DV7XP
OxFfEj0XG4h+WGPH2z+Rd1yJu17u+TOEmY4f/OfkEjpBF/jPNu3ZKuwU2oW1
2FxrjxCuF/2o8DHhEzn8e0GJWMHm7xN9s8Zuss7RfY3G+gj9hQHC8SV8Bx8/
vYS/E6uX+vvv+CC8uEOJ+EFWZB4p+j3Ekv3zJPPsbx2hq1u1v1cKHdwmuk3o
ILq3sEn0OuE635G7vmj/Hyx8l73icbRwjNDbPDmLMzmr3fbqkmI/+hhg/nfm
2HuJ/R8e+BOxRk4gV3XX2OHCIGGwcIfGbhf25th/i7DbOrzZc8fY//Y6Poil
oc6H+4V7hQeEA8IWYbNwg7DDvI52voUnZ0+0PyDDQ/YXdMZ55K8XcuRU5MU/
yC2TUsg72LIPse/sMn/9S4v0Z7Tz1zTb5zM5cu0w65f8z9twhvPdDstKnBCL
zQIPUCO+lcMG6HGYMNzAFyanmLtPa/qI7iHc5bt3d3zAlxh7yTnhaet4r30Y
260QWrwP3Q33WSNK+Bu+0tn8t3oNsUBMsPdx2x/7flZ0D+25KoUPTyyhD/yH
nMp7+aRj5wXreovG1qSIoUbrC1/kTk+I/meO3M8b8OMcOaLG+ePztjm2J0eS
K1cLrb4T8nGXGY5P7rQ9x106O56XCkvsZ/jiO7Wmq1AtHGf/xLeJIdbean+k
Nlhof+0Vaf5/9iK+ieXxfh8W2Ja7vfbdvFkpclY/0RvxyRQ59P058hm+OdHz
I22Lyc4Fq7SmY4o9G3LkM97CKUJfy1ztHEouXa411/qOyP9N4TTna+x1bAlf
mun9G+0/ncx/Bz4gepnQUkI/yM97l0u8SQftY/hau8Z2CrejO+GAsDUFj5tK
8FvLXf29S7iRvCXcJrQJKzW3Udgj+v4Sa9lzg+i9Jcbv5m1BXu/Z47lbhA3I
yhkl9mwnTsxrq/1tS4rxpTJkt0rs2V+iviDfUmNNF92i+R6VuAN3qdX34fpe
l0LeZn131Xebvh+0TJtEr0ohz2zNH6b59eQXfW+zDNst21rksc7Q3WKt71KJ
+99pnaCbWVVxNmPMoaPdzvvYn5porO2O//Gm8IbyBs+1v51l38Y3WVPt81fg
y9hY9GnCdNFXp6hfOI+7cUdkex2b4q/6btX3j3LkRnLkKfY5zsJH8EXePnwT
GXmn5pY4C5mo/6gTkJWalZpwSQlfm2/9r7d8bb4v7yNn1Tu/8P42i17t/EH9
heyM8R5TB863/9aWyE/sXcQZon+YI5dQk6zJcafeutsDKe7apO9OlbDpY/pe
LbTaZ/Hd5cK1HmOOGphaeDFyGYtt823/X+98OFv0VdYHd1xZYqzWPFk7r4Ss
yFzvM/E9eHDeNZxnf7jO6xmDXmd9LnX8tFj/cxgrYe9lptfYF660zmotC/qH
d5PlW2H5kWFDCZ/Gt5f7m3hcZf2uswzI0ua5BdLnHOn5JOn0Nd8f3tRoM0v0
WXU+rw5eJXivdzwTw8TyXPGpM46sRI5g7il9j9T3oyn4NwjXi24V7hE9U/NH
VSL+93k9shywvRv03bESe9g7zvGz0PLR/zVY/1eLHop9U7x5860f5G30PDar
s02wzaQSsrBnU4n+ZbzXsJb+rdH6XGifWet81Gx9tDhemL+3xF3IaZvte0v8
jd9xx12ie1Xi7uQwdNWzErmNGLzMPoFv/Fe2+U+OOo5a8C3R//YYc/Qs9C6V
EvmfNbwf9CvMvy6ck6JH+pf38n5TE8KjSThX9Ejhbzn6KfLRaK//lt8nePw0
h02IRWyKregXqZ3OS1EP0LvSD5yeooc96PqBmvYl82OONc/nyG8zLE9P0b+1
vJz5fd+Pt416jf6K/ICsXVPUG4fMD3npweiVqEfp8eiL8Dl8r28lfB0doSvy
Lm8nhQK6QmcdSuRPan10coS+O5bQHTL9OUdPN9b5iX7uyBKyo9N/5LAP/OgZ
+f2A+1Bvj/N+xl61Hd6yfUZbX+i3i/h1LpGna4yp3s8c9Qq1yBihU4n+Y5rt
e1iJep78j4zvKoFuJeps5qgvplg/HXw/eE/1fvpWeHMG+7gvY93M603bY4LP
p+cslhn5qGeoPUfZftSV9AbYhBqetZyNDOzhNxB6Q2p++uE1jqcNKd5gahbe
GvJxu+OCWGMNefIZvxc1KerNna4nqVfpQ/a4XqQm3ufalDl8khqV+pP6+bgU
9fok58tNzk+8K9RK1Bu8+9THvG2bHd/kW3IvNQi1BXUQ9UBnfc+ripwFL94s
chk84NW9EjUEdRl3peapr4pcSv4gJ5JTeXd4K5Gh1fmNXL7K+Yp8gyzkFHIL
fQS9GTqnrie393E+Ja/y+9Ig35ffF+hxoNEBvQ/9/EDH3/POLfgnOYG4of4n
1i+2v8PjEcc9vHmzR9j/yCf3mT9nPuF4Ye90x3uT42mS443f6/ql6OHo5egn
sC097n7bk9qcepv+md6C2pgamR6D3z+q/U39/rD1QY9A/70+R68MP37roB+H
FzX8yhy1eZXXU6Mvy9FL0FPQX7Tbx/At5KE3zJaXvuJt+UE7QA==
          "]], 
         Polygon3DBox[{{926, 925, 1126, 264, 946}, {920, 919, 1122, 268, 
          936}, {916, 127, 271, 270, 930}}]}],
       Lighting->{{"Ambient", 
          GrayLevel[0.8]}}]}, 
     {GrayLevel[1], EdgeForm[None], 
      StyleBox[
       GraphicsGroup3DBox[{
         Polygon3DBox[{{499, 214, 489}, {1197, 490, 1354}, {1195, 473, 
          1346}, {479, 213, 469}, {1197, 491, 1361}, {1198, 224, 1095}, {465, 
          223, 475}, {1198, 495, 1359}, {1195, 472, 1343}}], 
         Polygon3DBox[CompressedData["
1:eJw1kssyg0EUhGdU8iAewBpVQZWkSAhKxAt4AN7MixCXKrmQRW4shMjCfefr
Om3R9ff8c/pMT59ZPDlrnC6klJZAAVSLKW2DGtgBdfCaU3oBu/A9MMvxr+6a
Kfw5h/YAzOFvYL8YEJdG2gb4gn+CQ3gF9OEDzt7CQJP1D+tvcAQ/Br85/mlv
HXThHbAGr6IZpahR7Qbo5ahRrWpU2walYvSQn7nry+ARPgGb8BX6tek3yJGD
PA1ZP+XwKk/ypjs0fF/tqea8EBpphzkyrHhfZ5StnzmfpvN4dT7aWy2EB/VR
nvJ0z96D9eo78H06zvDF81CvD77vnsfUd1at7rRM3zF85Hx65kP36nqG0nZS
eJH+gvWl89YbkGbs+dfsaeT30bfXG3BrLv/X/ifN2HnrPcjTXYozSp5vC36V
Y5a6s3r0nb88yEvL81WPifP9f2/iylyz+QNbT3F5
          "]], 
         Polygon3DBox[{{1343, 462, 463, 473, 1195}, {1361, 501, 500, 490, 
          1197}, {1346, 483, 482, 472, 1195}, {1354, 1353, 1355, 491, 1197}, {
          1365, 495, 1198, 1095, 1096}}]}],
       Lighting->{{"Ambient", 
          GrayLevel[0.8]}}]}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0L1OwlAAhuFT+StFUREwjF6As8wwq4mTRiHyE+KgbVAJQgAX3LlhEx8S
k759vg7NaXoxzO7SKIRwq7eDEFwhdcuUs9+Z5wc/VbDnLPKLJS64VGyvWOaa
GyX2Nyu8UkfXutdof9b+fW1V8CFFvTiwxFfGnLDMRKldYcZDDnnEKas81on6
nk/Z45Nq9pnqmnlusKmB/axz+5Et/vqWnX60VKaxHnSjrtq6VPT/3/4ADccX
5g==
       "]], Line3DBox[CompressedData["
1:eJwt0jcvRmEYgOGjzBj1KH+CWY9u0XuLiBJE/QFGO7NdWSRYmUmY9N57J7gk
hiv385ZzTvLlS27qKesOCYJgnA8mmGSaGQocLuqAruiszjHPmnVEaBBEEsWW
dblWUEkV1dRQy6nz0vAgONESLebYXKRHWqgFHJrz9UDzNMW32j3fRistNNNE
I6nOx9wbZcMzaZrOpvnR2RPPvPDKG+/sO891L4c9c7buapZmsmPO0G1N9J0E
4okjlhiiWXe+7H1Lf78Vq9ajOsLw3751nXtJ5jAWvLPBOsQcyo/zbzrsf2lg
b0qi9VOH7V/qoA5xY76lxfyoTzzQbz3AmblPz/WCK+qtr7VX77RZ77VVn/WF
LvOrtuubdur7///iF3ZyTvY=
       "]], Line3DBox[{990, 160, 1148, 161, 990}], 
      Line3DBox[{1001, 164, 1150, 1149, 163, 1000, 1001}], 
      Line3DBox[{311, 166, 282, 283, 1145, 284, 285, 286, 287, 607, 1130, 289,
        260, 177, 311}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{149, 160, 171, 308, 182, 326, 193, 365, 366, 367, 204, 421, 
       422, 423, 215, 519, 520, 521, 522, 523, 524, 525, 226}], 
      Line3DBox[{990, 979, 965, 952, 941, 1119}], 
      Line3DBox[{1001, 1019, 1025, 1228, 1162, 1042, 1055, 1254, 1058, 1289, 
       1186, 1295, 1297, 1073, 1337, 1199, 1344, 1345, 1089, 1398, 1400, 1206,
        1406, 1407, 1408, 1409, 1410, 1104}], 
      Line3DBox[{1091, 1318, 1317, 1316, 1315, 1191, 1311, 1310, 1309, 1075, 
       1266, 1265, 1177, 1216, 1060, 1220, 1219, 1165, 1233, 1044, 1027, 1217,
        1114, 1208}], 
      Line3DBox[{1092, 1334, 1193, 1327, 1326, 1325, 1324, 1323, 1321, 1077, 
       1179, 1264, 1263, 1262, 1062, 1236, 1167, 1240, 1238, 1045, 1156, 1213,
        1028, 1008, 1418, 1006, 1112, 980, 955, 953, 933, 1142}], 
      Line3DBox[{1097, 1375, 1374, 1200, 1370, 1369, 1368, 1367, 1366, 1082, 
       1300, 1188, 1292, 1291, 1067, 1255, 1174, 1257, 1256, 1051, 1163, 1229,
        1035, 1154, 1215, 1015, 998, 988, 973, 963, 948, 940, 924, 1138}], 
      Line3DBox[{1099, 1305, 1304, 1303, 1302, 1202, 1373, 1372, 1371, 1084, 
       1260, 1259, 1190, 1232, 1068, 1268, 1267, 1178, 1261, 1052, 1168, 1234,
        1037, 1155, 1218, 1017, 1005, 1148}], 
      Line3DBox[{1100, 1388, 1204, 1382, 1381, 1380, 1379, 1378, 1376, 1085, 
       1076, 1308, 1307, 1306, 1069, 1278, 1181, 1271, 1269, 1053, 1170, 1241,
        1038, 1157, 1221, 1020, 1010, 993, 983, 968, 958, 944, 1106, 1136}], 
      Line3DBox[{1102, 1396, 1395, 1394, 1205, 1393, 1392, 1391, 1390, 1087, 
       1328, 1196, 1320, 1319, 1071, 1287, 1286, 1183, 1280, 1056, 1173, 1246,
        1040, 1159, 1225, 1022, 1016, 997, 989, 972, 964, 947, 1107, 1125}], 
      Line3DBox[{1103, 1098, 1405, 1404, 1403, 1402, 1401, 1399, 1397, 1088, 
       1083, 1339, 1338, 1336, 1072, 1296, 1187, 1290, 1288, 1057, 1175, 1253,
        1041, 1161, 1227, 1024, 1018, 1000}], 
      Line3DBox[{1105, 1417, 1416, 1207, 1415, 1414, 1413, 1412, 1411, 1090, 
       1360, 1201, 1350, 1349, 1074, 1301, 1189, 1299, 1298, 1059, 1176, 1258,
        1043, 1164, 1231, 1026, 1023, 1002, 999, 977, 976, 900, 1109, 1131}], 
      Line3DBox[{1123, 945, 959, 969, 984, 994, 1011, 1021, 1031, 1224, 1039, 
       1048, 1242, 1054, 1270, 1180, 1277, 1279, 1070, 1194, 1312, 1313, 1314,
        1086, 1377, 1203, 1383, 1384, 1385, 1386, 1387, 1389, 1101}], 
      Line3DBox[{1124, 939, 957, 962, 982, 987, 1009, 1214, 1014, 1032, 1222, 
       1158, 1047, 1245, 1169, 1243, 1244, 1064, 1272, 1273, 1182, 1285, 
       1079}], Line3DBox[{1127, 950, 971, 975, 996, 1150}], 
      Line3DBox[{1129, 1111, 978, 951, 1110, 1144}], 
      Line3DBox[{1133, 1108, 949, 970, 974, 995, 1149}], 
      Line3DBox[{234, 138, 149}], 
      Line3DBox[{1140, 938, 943, 961, 967, 986, 992, 1013, 1210, 1152, 1034, 
       1036, 1230, 1050, 1251, 1171, 1247, 1249, 1066, 1282, 1184, 1293, 1294,
        1147}], 
      Line3DBox[{1143, 934, 954, 956, 981, 1113, 1007, 1153, 1212, 1029, 1030,
        1223, 1046, 1239, 1166, 1235, 1237, 1063, 1061, 1274, 1275, 1276, 
       1078, 1322, 1192, 1329, 1330, 1331, 1332, 1333, 1335, 1093}], 
      Line3DBox[{1146, 1185, 1284, 1283, 1281, 1065, 1248, 1172, 1252, 1250, 
       1049, 1160, 1226, 1033, 1151, 1209, 1012, 991, 985, 966, 960, 942, 937,
        1139}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{332, 328, 1231, 327, 324, 1228, 1227, 323, 320, 1225, 319, 
       1224, 316, 1221, 314, 313, 1218, 308, 307, 1215, 306, 299, 1210, 1209, 
       305, 304, 1214, 303, 1212, 302, 1418, 301, 608}], 
      Line3DBox[{372, 371, 1258, 364, 1254, 363, 1253, 356, 355, 1246, 348, 
       1242, 347, 1241, 340, 339, 1234, 326, 325, 1229, 322, 1230, 321, 1226, 
       318, 317, 1222, 309, 1223, 315, 1213, 312, 310, 1217, 606}], 
      Line3DBox[{376, 1233, 333, 329, 1238, 1239, 336, 341, 1245, 344, 349, 
       1250, 1251, 352, 357, 1256, 360, 365, 1261, 379, 388, 1269, 1270, 391, 
       400, 1280, 403, 412, 1288, 1289, 415, 424, 1298, 427, 433}], 
      Line3DBox[{435, 1301, 429, 426, 1297, 1296, 417, 414, 1287, 405, 402, 
       1279, 1278, 393, 390, 1268, 381, 367, 1255, 362, 359, 1249, 1248, 354, 
       351, 1244, 346, 343, 1237, 1236, 338, 331, 1220, 335, 378}], 
      Line3DBox[{443, 1216, 373, 368, 1262, 382, 1274, 385, 1272, 394, 397, 
       1281, 1282, 406, 409, 1291, 418, 421, 1232, 430, 446, 1306, 456, 1312, 
       466, 1319, 476, 486, 1336, 1337, 496, 506, 1349, 516, 526}], 
      Line3DBox[{528, 1360, 518, 508, 1345, 498, 1339, 488, 1328, 478, 468, 
       1314, 458, 1308, 448, 1260, 432, 423, 1300, 420, 411, 1294, 408, 1284, 
       399, 1285, 396, 387, 1276, 384, 1264, 370, 1266, 375, 445}], 
      Line3DBox[{536, 1309, 436, 292, 1321, 1322, 449, 459}], 
      Line3DBox[{605, 1417, 598, 591, 1410, 584, 1405, 577, 1396, 570, 563, 
       1389, 1388, 556, 549, 1305, 535, 525, 1375, 515, 615}], 
      Line3DBox[{609, 1366, 509, 519, 1371, 529, 543, 1376, 1377, 550, 557, 
       1390, 564, 571, 1397, 1398, 578, 585, 1411, 592, 599}], 
      Line3DBox[{377, 334, 1219, 330, 1240, 337, 1235, 342, 345, 1243, 350, 
       1252, 353, 1247, 358, 1257, 361, 366, 380, 1267, 389, 1271, 392, 1277, 
       401, 404, 1286, 413, 1290, 416, 1295, 425, 1299, 428, 434}], 
      Line3DBox[{444, 374, 1265, 369, 1263, 383, 1275, 386, 1273, 395, 398, 
       1283, 407, 1293, 410, 1292, 419, 422, 431, 1259, 447, 1307, 457, 1313, 
       467, 1320, 477, 487, 1338, 497, 1344, 507, 1350, 517, 527}], 
      Line3DBox[{537, 1310, 437, 293, 1323, 450, 1329, 460}], 
      Line3DBox[{538, 1311, 438, 294, 1324, 451, 1330, 461}], 
      Line3DBox[{539, 439, 1315, 295, 1325, 452, 1331, 462}], 
      Line3DBox[{540, 440, 1316, 296, 1326, 453, 1332, 463}], 
      Line3DBox[{541, 441, 1317, 297, 1327, 454, 1333, 464}], 
      Line3DBox[{542, 442, 1318, 298, 455, 1334, 1335, 465}], 
      Line3DBox[{600, 593, 1412, 586, 579, 1400, 1399, 572, 565, 1391, 558, 
       1383, 551, 1378, 544, 530, 1372, 520, 510, 1367, 610}], 
      Line3DBox[{601, 594, 1413, 587, 1406, 580, 1401, 573, 566, 1392, 559, 
       1384, 552, 1379, 545, 531, 1373, 521, 511, 1368, 611}], 
      Line3DBox[{602, 595, 1414, 588, 1407, 581, 1402, 574, 567, 1393, 560, 
       1385, 553, 1380, 546, 1302, 532, 522, 512, 1369, 612}], 
      Line3DBox[{603, 596, 1415, 589, 1408, 582, 1403, 575, 1394, 568, 561, 
       1386, 554, 1381, 547, 1303, 533, 523, 513, 1370, 613}], 
      Line3DBox[{604, 1416, 597, 590, 1409, 583, 1404, 576, 1395, 569, 562, 
       1387, 555, 1382, 548, 1304, 534, 524, 1374, 514, 614}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
zdv/6GtYAq+qGRD8wYRh4QOCH+pppvJGd1slI4LrrpSgFBCcMf43ntYT/Apz
68A6rUKCv/T+jV+OYfluSPDp1XYmWD7u1m9cji5YNJjomwyE9BWZib7pctJj
at/k8jlS4zgh77f76tsiQv727ub/kb4jaOy//u7w+mT2f8lvfSr7LzndoWd/
Sn/3r7rnsP3r2mmub3/9zmJnVUn9zuJzwsFYXvWv31nEg3/7zuL96Glc5uxf
7298HnyWul7n19GGzOh3/i5P7z1BlRfr3ishx8X2u/zyHXNUeTNGj/MxJkt/
53u8zlDlK7egJ/djaX7nlocfU7n6h7bvmZFDv+t3q+ilcue1vA9uCcDv3P3p
wr/lfY/OOx0fk2WFQPdNas3BYTckPufJhb9PJVf2iLZdXAPPPXjsFB09kJ5I
shrOJxvW2t/cU8QJfCcdlkgMeyJ5viBJfK94uGLAtObj5cDkFB/B4+iNDjRv
eo3vOQ/PMo1dsZQWOP0cZuiHfVDXsbj1+O9LNnA9XX1eY4YibruvEn/n2rzn
t+9cI9oHBfjbBymvGy3XbSS4TVQZlR/h8DpV1P+R0vXNslKA4LOqr6k8+LEA
T0/NKGXn46CRJH9fRP9oL3U/4daEcPDPmg5KjGHu3esEN6Sz+Lv2GRb5Il/k
/3d4iNcIk/2UKcRuULZibr0Gd0Jmp4dnB9D/A35BJWc=
    "]],
  Axes->True,
  AxesLabel->{
    FormBox["c", TraditionalForm], 
    FormBox["\[Gamma]", TraditionalForm], 
    FormBox["Efficiency", TraditionalForm]},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotLabel->FormBox[
   "\"SVM Two Circle Hard c-\[Gamma]-Efficiency\"", TraditionalForm],
  PlotRange->{{0.001, 100.}, {1., 6.}, {0.9487179487190001, 0.974358974359}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.670375935776239*^9, 3.67067764498669*^9, 3.670931215329771*^9, 
   3.670931273998657*^9, 3.670931359086358*^9, 3.6709314461428013`*^9, {
   3.67093153199514*^9, 3.670931579488904*^9}, 3.6709317267899227`*^9, 
   3.6709318557661467`*^9, 3.670932002698916*^9, 3.6709320433890257`*^9, {
   3.670932081622251*^9, 3.67093209248002*^9}, 3.670932139425377*^9, 
   3.6709321842883377`*^9, 3.670932321601253*^9, {3.670932486496838*^9, 
   3.670932552789813*^9}, 3.670932672186058*^9, 3.670932764947885*^9, {
   3.670933197725175*^9, 3.6709332252440434`*^9}, {3.670933695772834*^9, 
   3.670933705749578*^9}, 3.67093937948001*^9, 3.670939417182568*^9, 
   3.6709397013290977`*^9, {3.670939906950098*^9, 3.6709399221756077`*^9}, 
   3.6715409777913427`*^9, 3.671541966397128*^9, 3.6715420542690973`*^9, 
   3.6725702866804247`*^9, 3.672571592910342*^9, 3.6726438958410683`*^9, 
   3.672644192459403*^9, 3.67264435792383*^9}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJztfGdYVFfU7jgMzIAjDDPDiEaNWLCiqBG7eyv2XgAVO4qIir1gQ0Sxl9hr
NEZjiS2CGmwReyyxYDR2saBGZxDLKI5E7jHDOfusdWbf7+e9Pz7/+OR1PWuv
9a53tzPZKyBqRJdotUqlGu6uUrkJf+fteJPRPqoTUf33J4esrh61LuLeKwLx
XA6uoq5xDQfXcXA9BzdwcCMHN3NwCwf3l3DzjBqOLWV6K3iAeC4HV3H8aDi4
joPrObiBgxs5uJmDWzg446HTxlpPzz6PVfAA8VwOruL40XBwHQfXc3ADBzdy
cDMHt3BwxkOgT7nEZboJCh4gnsvBVRw/Gg6u4+B6Dm7g4EYObubgFg7OeJhs
3tPy0aSZCh4gnsvBVRw/Gg6u4+B6Dm7g4EYObubgFg7OeLC+6VNiW+2lCh4g
nsvBVRw/Gg6u4+B6Dm7g4EYObubgFg7OeFga+mOHe8E/KniAeC4HV3H8aDi4
joPrObiBgxs5uJmDWzg44yHHGNQv7cIuBQ8Qz+XgKo4fDQfXcXA9BzdwcCMH
N3NwCwdnPKxd8/XPIQUPEM/l4CqOHw0H13FwPQc3cHAjBzdzcAsHZzwM3jP+
ieHUWQUPEM/l4CqOHw0H13FwPQc3cHAjBzdzcAsHZzyMD2sVZWr0l8TD27vT
L9wOsiI8l5yIe9RtQBkbwlV01+VNn3pNw/Yajn8dB9dzcAMHN3JwMwe3cHDG
w80qJRqmfnkk8SDmC/Fc4lt+Sant6zGuoheL7mtfJRvjGvq3PuBg7BmM6+js
8FGvy7XFuJ7W2XCiYuZVK8INNO2UrxAoxo1UrBfEzTTo/Zua/u4Yt3DyZTyI
+Yt/i3lBPJcsyadZVks2wlU04vnVKXsIxjUcXEdd+9dTkWeIG6hYF4gbJd4g
bqajDtYQHGHcIukW4v4Sb4Uiw0rcGJMn/fujgzk7ayzJRnguEfOCuIqK/EBc
I+UFcR1t16jQ7GdjMK6XdAJxA81L7py+6ROO08jBzRI/ELdI/EDcX8KXx96p
372dJxV52LohMfTdoWyE5xJR5xBXSfFDXCPlC3GdxA/E9Rw/TA8QN3JwxgPE
LRyc8XAxpGzhfgkWiQex7hDPJSL/EFdJ+UJcw8F1UvwQ11PX/g0ceyMHN3P8
MB4g7i/ZO/+7nMSDWBeIs/0C4iqOHw11ba/j4HoOjtcHETdyxjVzcAsH95f8
N0nbXyP6jxoSD67xXIkfiDMeIK7h4DoOrufEY6CuxzVK8wviZg5u4fhnPHxy
W9J6+EYi8SCOC3E2LyDOeIC4huOf7ZsQ10vzCOIGDm7k4GbOuBZOnGx9SNBY
i+SWbCfxIPqHOJsXEGfrJMTZ+gBxtk5CnK0PEDdwcCMnfrZOQtzCsfdH+28P
hR4gnivxA3EV2vdFXENd+9GheSriek48BnQeEHEjBzdz/Fg49kwPtkb3ngae
yiDDdoSFh4e/ke4Rk6YGxrZsf1Vxv/hj6FgHuX+VrM0pfCpY/5nhbn+2nFsh
Q3HviCgVfaNZRgbZ0beR19+bGZ7YNC06qLloz+414rn3c5l84Y+bZN+0X+v/
8C9HIL5sfGuX5/mUtVkVm4y5Qdrl/WpqsE8r4UcqTH7a4eoNxTn/bevDUy74
3SZ1j53uYD3tJeE+C32GFpp3R3H+371j9Ij4X++T0UO+3tuKSPjJzD63t3tk
Ku4F8SeDw3/pkElmfh9392Acw7tOSByX/Idoz+4Luq3HvPaoH5FXmUK6hOFb
zx80tIln52cRH/3h0wjvzY9I1ZZjrzUvalacnz/+xyfDK08drqVhT0mzuF+E
P34SXuNhwsqTF58qzuFzLvyecWnHMxJSTpBJeFEJL30iKvZZmHge9/8f6/v/
Sm//q6v/P3XF0w9Pbyv8NRHepdk+1clQuNRQYZ+q0+dwaz3tKOGP+07Q+VSz
EWvntFLuwZ0lfOzeJ29T6tnIsbHL/DXpXSTcI7/j/YjmNrJo1XCjW6cwCV/d
4eg5Rycb6Su4V2eGS3ilDRVTNvSykeD75TwKjewm4Udsy9c3HWwjlXotPmlX
FaOli0Q3CorTSvu1iDcpfmFS5J0PpGjs8COd3Rku+pn78eGxiflWZP+F1Ih8
Oj9kMLZX0S0vwhf1icLjuilwUc+u/egUcTr9FKY4HlG3Ir7+dOlfR6sqSfGI
+52Iz/L0nPMizk6wf3F9cNSdNH9DiWzkJ5csrDBAPaU6jsdHEac4L0Qcjvsv
Wf4pzO+6idl/Pytlw8qDvgr7UzM1zd4fVFN7at/dbfxsKB6NhMNxjfS7vC6R
80tg/yYFD07/Hhz/Oo5/dv6H/v3oaZ9OgWk3sX8vjn89hzeL5Af6LyqNu9Q2
hdROrynVJaHBb4NHCfPlZvw/gTVU9STc4LnE8lNpGykuTNMgys7Vm24OOZ3x
GevHX9KP6L9jubxBJ0Z+lM5jov/7xfLGv7j+TsJF/0N88mb51GHnN5hvDjmy
7nUzfWMb8p8vnfOh/88SDv2zewHk2VuhH1GHom4hb2xeQN4YDnlTKfivaExI
7ZfmpvDzWp/Q4P0/hRR+DmgTTs3+Rjkfo5qqy0zq6UvFeQHjN9Kqcd2HaKrh
+DW00LI9Mybn4fg1tO6uE1WfeOO6a+jwM3/daBNgQ/FrFX6c8bsr/DjjZ35g
/CYpThi/mRO/jrr/WLhleD6OX0fHZNRYU64cjl9HH2u6v3rXCsdfmJ6d1Pib
RuVtKH5P+u+yzqe31MHx6+h3uwfG6dvg+P048VvoH+T6kMMeOH49vTB73QNL
RTzv9LTu4RPBz9rh+PV0m/V50oFRNrK35aNJ5vSm0nys9Ln50t5uNtJ5obDh
ZTaX8B+W5wX8VsRG3mW0jzKoWku4b7XUfQZ/HH9Rjv7ZvVsc9+S1U56PLR9I
Ula1kBsWNu6cQlWX/+n9njzc1yXrUW02bocay0sd8nhLGiaMX54dhnnIIZh/
Ecf8i7jIP6yjD10QdTnlS3tcxyL01ORHPQf1w3XU00/L32suj8Z5fVHw6cwr
T8GnMy+HxCesi4qGj6w/sFgRXBcVbbx524xLAbguKlrhpnnztBDMj0GRl4jj
vERczEv0Y/Y83iP4ni/V+3/X8/Ia5meCx/GSjvcGeuNL6ZRBs5mfu27HH50q
YqAbs4p45o9leT168UgzqrAbzX58o9K3VVlep1WWC4O0aho1ZcGh+BCW1zb/
Not7uRWif/uFts6gmB8NLd79wuc7tTE/Guo2v843i9pgfjTUemxL/SZ9MT9G
RV4ijvMScTEvyI+Jw4/Sj5MfI4cfLd1/IfpEZhjmx4NWHFiic/2+mB93uv7f
jMxlsZgfHc0kkcvW98H86Oj50edSOo7B/Ojovp+/y1DPwfyYqduXiX8VX475
MdM+KfT2k16YHzM9NEj7YFd5zI+ftA5Aftj3K8iPWbFuOPkpTCem2Lv/NBXz
40VtbXe9+Dwb8+NJ+2dFxYcvxfzo6dn7ZX1TIzA/ehrrq4raWgfzo6f65vdS
1vhjfiz0aL+Zy+d+i/mx0OSWo14FFMH8WGjHan2aHnZYET9FFX6c/Cj9OPlh
fiA/Poq8nPx4K/Jy8lOEk5c/TW1xocjNYjgvf+r9+Xvjxsf4fOJPY/d2Kzp4
p1W6l219VWl3w/yPREc+1I+R3cv+TmzV9qxw37k2qGpwvYrsXuZpifmn40E7
WbsoqnzhauxeVn9n8uzbS96TAQdXF79fi93LhtIt5QfEvSNVH1z22VuP3cvW
3zh5ytrqLbG7u7tPJ+xednnIo/7jy70hvwc1cHRpjvWQQ/C8E3E870Tc9bwz
cHRl4OjKIPEPecsnlwNnZVRsi3n7QlYV3EMhb/+SfuPfHr0UgXnLk+6nkLfP
5O2ZPttGRmHeHNK9FfL2icz0u7jEPJzlO+r9yKS0ZF9FvlGqwtGpbr6KfMP0
P7fcM12Zr5MHFbXkrj1QtS2+v6vo9pbaH69G4Pu7itZbNWbe2Ch8f1fRi88e
jvUfju/vKto7pF3foxPx/V1Fs5PTWvdLxvd3FU28Ue47zRJcXyMd9q5+XINQ
XF8jDXy/Y8NkH1xfI3303v/qkbtsXly3L4/YkO9Gl3lbhrwcw/Id9l9d3Giv
gjjFfN3np76vcFdNy/dJCls0jeW74b96qaX4xXxDSmcs3XewEP1td3bjmvNZ
vlf+q2MhKS8x35gDOcENlqpo638jK91cietrog28NY+ru+P6muiDJpk1yz6z
ovoa6fRxR2dYzllRfTXUfZh18+MxuL4a2rDZwT2G4bi+GjqmROKhxoNxfTX0
l/etTw+LwvXV0EeXTFfW9sL11VD/n+/f/iMC11dDO07d9vRDJ1xfMx08Izf1
lTeur5lO6zR/eV2HFdXXTFeVLDUuOQvXV0uTkmK6/7ge11dLc2p+jsv7HtfX
g/Z9smhG92RcXw/657Iya/ZPxPV1pw0KeIP1dZf4gfVlPMD6+tErht7ZWa+t
qL5+tOeErX0WZOH6munz+68v17yL66uj7x42Wrp6Pa6vjl6l0cc6JeP66uju
TQte6Ibj+uroPPV+04kIXF8dHTTgbuOJBNdXR0NPq4fUqIjrq6Pflq+84h8D
rq+Fbl43uETlZ1ZUXws9PPhz3vhruL4Weq32ovunjuL6Fpbu0bC+DIf19ZJw
WF+Gw/p6SjisL8NhfdnvSrC+RaXfd2B9GQ7ry34ngvXV0wP7G97/QZaviFsX
eLy4+M6K6qunZaOvvv1ks6L66mlko7X/VnhhRfXV0yV+A3URj62ovnr6hy3I
NPOeFdVXT/PPfCyZctOK6utPN1QJHHBnH66vPzWeufe21lFcX386u8+ypIVn
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
uo+fkJf43QzgAv/iOQTGw+5lAJedZ6B/P9d+BP577tZWjvkN98GzS/s+xB1E
PNdBPJ+I9xqIs/MAwAWeRd1Cey19CNZ/0d6TGhdPFhYUK2me/iDx4aZuinyh
vbfrvBI5/QPTfTn9ABnPAOeOy3iG/tn9Anwflv1OAb7Hyn532AG+l6o536PY
9x/wPerrOfO08979WP49SrC3eAr05LwiI+TfhYQ4v3z8YeCOslZyuHLdc2mD
ryniTFkzVXPr6TVFnD/tmD7n5E6xTx37PeXFnK5zSkVfV8RvbXWbmGOU35l3
DNy+zL+e2C9O1kfuz7c336z4W7r/ivim13tetF4mfndl3zNjH7m3/S5M+V1x
V6plTZkDmYrvinMeuE32q82+m4n4/IapJv9U5fe3+W3Xse9FMv6bO6K6b7+V
pfhuxuOTxxuP5//l04kPq5Wieva8DBXzFfdrS2yk7o8HxamYr4i/lZ8/BT4j
C+4XLdZa1Cm/laYiD+L5v7H8niU7H/Y3L76wald1KtZLPHeB+5Hs/O/8/lCF
ivUS93d4f2HnxnoBCfO7XwmW8hLPFSBf2fkf5Cs7/3d+FpCQcDhIyks8j4F8
01lf3K1h29bqPoVQUZ9i37C0Jr+GtZhRS+JNuv++WeO2q1JDiQfpHa78fiHj
7dsHPx37J7WuxINoP0DOp8CbyGeNizsnVGhcW6pjdsH5IWnSisCFTxtJ/Ijn
jVDAs0nqN7syZkPmheH1JR7E8yfgWeCzWg3n9/muct5k50BrRu0pPnHNJH7E
89h2OW9CvuK565783CK7Nx2S8ynMF3Hf1Mv5FHgQ99mGoZFr/v4gvttl99wS
gE+TFP/6KN++LZ80lXibWPC7YZD8fCLwJv4eVF3Os+xcPVPOM2X9ZxakJhzc
mNhS4lM8Vy+X8yy7vwDeBH7E81jMiR4ze1cS32Gx+6ZtRjV9vTsdJL2J370X
Jx4rdDw0QuJT/D7QQX4O/3peKji3BBSa7JYwu6vEW/UCfiCfJunc9ev0uu6N
LnaSeBP5bCU/bwi8ib/DbpTzLPDmVfAd+BZdn7QhK0ziR3rPLudNdh6IlfMg
8COec3LkPMjOJ4vkPMjOM9+AfNm5ZY88L9n55C95nLJzIOhDKORL+6kCPfrg
vohaOjdhQUVzFYzbSZn1v6y42Qnj+WR9VssT42Mw7iC9s+a/9iqF+6Q5yPqg
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
fwCcTH4T
   "], {{
     {RGBColor[0, 1, 0], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtl2dwVkUUhu/m7icMKiACM9ZBQVFQEEUcUEFFQQULyBBAbGClS1HpRYqS
EDqBUEIJIQIJRIIkSgfpSFNEpYam2CgWmuV55+yPnefdc8/du9/u2bPnu6Vd
1+ZdkqIouttFUQw7+ihaCa+AX2AYje4CP6CfjM8mmIDvyge+wrN+6PfgCto0
9ErYiEFPoJ9JsnGmoJfDAbzfmff2wkrwoPxhfZ51Q7eEW+l/h/4GpuG3ApZP
RNFYb7YK6N7o1ugv4ShaEboi9q68P4x3R8bm/zX2q7F3QN+Lng8fYU4/4FMX
dqf/OPYcOJ52Al0b//m8n4rPNHgjfkfRleFb+NyJT5bmwrMs7Pvg6/QL0OfR
//L8W/Qf8E3sOegD2KvS/wR9u7P5t4KbYZUk+703wXtp36OrwwRtF/oSfuec
zfkfmMtY49E58JTWEn1YY9OfhF4CP6VNQC+EnnGK0aXhBvrp6AJ4LLa5zGEO
/WjrsZeFL2IrQreBY+jvgFVYk27o1dhLwXdp9bEXwIfhIuz1YGf6q9Al4fu0
teirvL37IM8/De9+jj0J1na2bvfBd7TXaA8/VMN2Cg6lpaB/hi2cjf8cHEJ/
EDzqbX+XaX34Te+hn8e+Orw7En0cdqIV4vMfPmew7USfhNWw/wQrJSzeFI83
oAeiu6N3w76019DbYCotD10Snz7e1mmdt+9qXms1L/1+9DfBPxft8a+M3sd3
7/J2phQD6+Fe+WLfBlPoZ2t+4buvor/yNk/FRk04gfYj9tsYcyncjn0ufJm2
NbK5au92wqr49Ed/ib0cnES7jL069qFwC/bB8GvWZSZ6SzinnbDNhTNCLOXB
xvTTQk7Qec9Gfw9n0aaGs58d8sBqOIc2Eb0YzqON0zxjG3MkehIspGWG72r8
6/hue3iJ/lLsF2AHzQndL+ir8GmLz8foMdhnw+G0gcGndIgxp70N5/RbeIKW
i/4FpoQ5TIZpyhforGAfhB4A29BK8K3W3nKURyejhynvoE/CF7D3wb8bdNi6
KrZh/7AvitFWPOuL7g5bx5Y/k2F53t+MrgifdaabwR70G8PlcEo47wuUj2kj
0KO0rmE9lQfSQ76aHvQQ9DD5ar8Z5zdYIsT/v+Hdj9BjYstpWueLymO0Uvi/
iO1qZ+tZWucb+6gwvvY0JaxbZZ7NQ98a8tJ09PrY8nDfsCaDwt710Xxpg9FD
Ytu74SFX11Bu0LmAT3j7Vib2I7TZ6J3wbeyfoS/Hlitq4Ttbca34w74DHoxt
nHPazzDPqfAaZ98tp7MU4m2T5sP7R7DVTFgMjw2x1Ah7RewtdAbp9w933Aha
BeyvYR9MG6C87C32Pg7xfK2z9S8Pe4X7sQfsGX5vquI0rP942D6M3xuWcRZ7
ZeGf9JfoHoEZYfwJscWb7soWsd19hfiWSVhOUD67GT0VXY98/1LC5j8i7PVk
b/dMI+yj0V/p3oGP6m5HPwWf5fl+dGPY05utSGsf29mfqfjBtkMxAJs4y71P
w3ydbfRGuCrcRzr7U7zdn80SZlee2QbXhZhZA3fHVid8DrfHdlcWw2q8dwxd
K8l+14OwPeNkoGugW6L/Cuf6Z7hLMYreC9/A5xbmNQN29XZH5XuLZ92Dy2K7
xzMiq08e4/niyO62X+nPDfe7zk5z3T3Ku/TzsP8GC3Q/KB8Gf92DpzVn+gsi
qxW0j4rVhd5y7Hzsx2Fd+sf1LW85cGLIsUu1T+girWWoJeapJqKfjz4Le3lb
72W6T+FG7E84y/MdtDfe1qcm65PM+mwN52iPcpVyfWT364Gwj3tgOv6l8H8M
/wrwAPZ87KdpR5QfnMXMKpjA53q4R3nJ2VkYCIvhm7onsfeEb4W40l2i+7cO
zPOW93qhD8GJtPPoBow5Jtxfyq1anwbMox328c7qE93lukPXQId9hO7eyM5h
Dm2Dzq+zc10M6+CzOcSk8pK06rFDcG1suWt/bOszOcRDU2c1sPKv7qAH4BLG
m0Zrynw6h3hTPZnrreaRzyL5hN8+xdk9q3rtfvzv0f7r7nZWZx5G11HeoI3G
9pPuMmfnMRV2pH0R2V6eiS0vZuPTxVttFnnLhxpvnrd7bU7Y32Mhb/ytHMOz
dHx+h2vDvheGvb6S33JJc4ltbqeUY+hP5fkFb7m0CnpW2KML6IYJm7Nqlare
6h+tfxlv72Zovt5iVXdCJrqus/OivX8/nKOVcJP2H/tuOJJ+FryofOusblTt
pfzzJFwBH3KW/1VHqjbrAfd5yy238luaJKx2Uh201NsdqncLvZ2XNbx7pbcc
eDP+TRNW/zfUuN5qziHog97qN8V2FW91pmJ7P2zprF7Sfw/VGO0Ur7orkqyu
K5lkv2UO9vPe1l858k/4Q2w54WRse7ocHWO/w1lOUJ5q4KwG1pxmOatRtS5t
ndXe+g+m/2iqlxd4+3+hPZoZ4rMJ3++UsPokDfvZ8N1ZId++7mwdXnFW82v+
W7zVCYqTP2Cms1pRdcM4Z/8vFBP/Az8i+Lw=
          "]], 
         Polygon3DBox[CompressedData["
1:eJw1mXcA19Maxr/n9z0/SiFCA6koTUKo7JE9yoiSnU1lXzvda4+kcm0pDUWp
pJKiUKKMREZlNGRvGRf3+fQ+/nh+v/fs8z3nPe953+c0Oa3PUb0rRVHsr5+s
/67Votha8nLJuyljWFkUd0l+QHhUcheVt1R5C+FIyV+pzpBUFIOFLyUfpLyt
VNZIOFByQ+W9prZ3qfw7yUcpr1Ul+qAv+qCvbYUjqgHk5sLhkvcXflfbT9RH
B7VPSk9R+j2lt1b6ac3pv5JvF8ZI/l15j6n8TaWbSP5NeEDpd5VuKTmr/ZNK
PyGUkg8RmmisxsLBkg8VmlYijzLmwFyaCYdVow51+Ua+dQ/hF/X1s7C75N2E
nyQv9nh7Kr0mRR3qniUcoLadhTOrAWTW/4xqAHk/oZfkvdTHqiLa0PYc4SDW
Vjhb8jKV91ff1wtLc7Sh7b7C6ZLPZc6VaEPbd1TnHNV9W332k9xNeduprK1w
rOROwncq/1boKHnXHGtPHmXsHzqCbuwu7CX51xTfyLfuI9RUXzWEvb1/WXLJ
N0k+Wmgt+QP1uR17oz27TfI9wuOS91X5epXog77eUJ3T1ffLKr9GciPhdcnz
lFebvpWeofReSk+X/JewhdpuLvwp+S1hlPejdQ4dvE/p+UXoJnWo21D4n+Qv
hH+rfJHKm0uuJ7wquZvyZrk/9O8ZdExyixy6dbfSP0qeL5yaQufpf3NhAXNX
3vuS1xNeULqn0gsk/61vnqr00Uq/qPQvws/CVkJjy/eq7I0i8r5T/fGS91De
05wtr8+zyttA8u8qn8xZUd5EpY9Ruq/SpdLdlF7s/T+bMyF5kMpvVvkg4b4y
ynurbKHSTXN8E982UPhB8q2qc0MRNuGWMtaUs8iasDaLcvTNGOjaNjl0raHS
G1Tjm09mLYtYixvUR3/JdZV3So49YC8aCH9IfrCMs309ayz5eqFfETozUHKn
HLaKPWfvr1DeNUV803WSC435gvp+Xvg7x5wul3xZirmuwcZJnqOqG+ewZ7en
0LFG1qcN1PenRYzVV31eWcQa9Cljvx5V/aHCTzn6QFcfSdE39mpWijkwF/YU
20Qb2p6HDarEGeWs1hImcJZVZ0eVn6Z0B5WtVLoja60xR0i+X3hH8hzGE+oL
DYTnyigbIEyXPLMM2z1SmFGGTUJfv0hhq3or70723vV7CBdKvlo42f2fpLon
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
97jjl+DbVOLu7+j7nDu+k+93/B18BO7+dVSvWgn/BT+GmJzY/Ev3jQ+Ab0Qb
2sKJMT7zgCtjTMbGX4F/gxPak/ulCK6IGJBYcJbSl+aIGafl8POJJSfl4Irg
jP4og8+BK/srBX/XR+nejptSDh8HH4I5MTfqUJc5MTfmwFzwoeAG4W5/S+ET
wyHio2+vubezv8138r34Q/hFHexPsWZr+Uf7Wytc1lnYTG3rmV9uk4N/Io8y
+NqtzOfCJcM5Mj7zYH/Ja2x+F+4ZTreR+VzawunWN/8E1wvHSewAZw33CSfc
0PwiXDF1Gpg/pIw5Mbf65ocZg7Gamu8mBllZRMzxT2zSznx4K+sZe4turfG6
sr4/WeeIMfA9WRPWBs5iG/PTxDsAubn5XIAMpw7Xy1isfwuPuVMluJbWjpng
DHdLwSHAJe6svPbmh7fzGWCOzA3et737aOM6x5XBH1VVdrB17eAUMSU6NyEH
r4BOoVtwXnDV+zm+Achw4MQ+7eyDonPo3t7cgerrGJX3roYPin/IHc9dD8e9
TyX6pO8j0YNK8OVw4F0qkXeQObejhK6Or4izLkAn0AX3zz9pOPoDXLeL29IG
jg+uD/7v1xz8Mm8d8KXf59AFdBM+HE4b//ctzX9MireK+tZlyuC9t8jBF09O
wVfCud4peUAKLpY8yrBx2Do40lq2U3CnLX1+4V54+4CHgWuB874/RZ3atnFw
3wAZuwfXyZvC3pVYw3Nsz4hdyKOM9wriYWJo3iPgrOCu4FzOy8EBwQXBYV2Q
gzOCOyLeO1/yc8KBrl+V/ITb4/P8XAaH18r6d3YODg4uDr5ptHUHbgoOBx1i
j9CFo7131IfjgnODe4MDhAuEI/seX8zzwSf7pQwbxJnYweeROfGmMN1z7VkN
/UbPideJ0TkT8A3E7uRRRh5lvN8Qz7NGrBU8wY4+I/RFG9rCN8AtAGTsAdwE
HBlc2WzN73Lba3gt+K2pOd504A7gC3pZ19kbOItOzqOMOTCXEfgkwkjW1j4Z
vtm79sVm+j4eWMT7Hvajje0BtuXEavRL//AdB+CPVIKfaWt94WwtcXzbE33U
XK9V+twyOP2NU3CkcP0neE16um84WLhYOL5lZbxRVJTuU8TbxQlK9+C7Jfcq
Y3/QHXQG3YHDJ5YhpoGv6i6sk8IG9bD/1sz6taKMvmqmeCOgz+NyvI3g/+zp
McgnJiI2Gur2+CRnSj5V2CQFxwHXAT99neRbhdvKuLN/tr3mLifGIpbCp8W3
beAYiDjksxwxFbEbMRGxFjHIrSliJmITYg5iS2L8pm5zRwoOlL6+Ee5J8eaw
UQ4bNNz+DraJPGKwr10Xfx8uEY78ffv3xBa9hDMsw73A6ZJ3OjYshf91YI49
587tbF3g/O/k+nDZ2Lz7bW+whfgH2D7uaHwL3gx4O4ATPlfyX2XYhrVn0vZi
lxSc7Ff2Xw5xfbjtmjnez/BZ8F3Yc7hK3pzQBfwf3sbglC/MwTGPSGFT4Z7h
R14sgoOCi4Iz3y/FGyJc+nKhn+tji1c4D5nYmxgTW4xNXu00sedazi1HzM1b
H/ExsTg6jC5faf+acmLz+Z4PMf2VKXQEXYGzPtL2cx2PTxxKPPppDs6UeJg2
tIU/wXfkTuFugUM/V+npRXDrvFesfVukjeRvy+D4saPcxYttC3hb+LwMHWDf
4fV/czzTwv7hWTns8/YpYlBiUfrolOJNkr6xt218nn9wn6s9JuW8gZxvf6Cu
5zPe8RN14cQvsv2rZf1Ft3kf4K3zFeG4FDqALgDeTOa6DP+lg8v75nhDgJeH
n+dtAZ8Y33iE8HUZ72mMPd5pODl8Ud7IeNv9xwfgDR7fY3AZb6a8ld4vXF2G
rbuF/Xe8R+zF++Rw29yRjnuIxS4r423tJuGqMt60NkhhQ7Aldwi3C3cKA9yG
WIgYjL4udnvsW/cy3kQHOmYjdutWhi0jpju+DH+MPOTuBvJF7uuuMuZC/0Oc
5u30Gs+Pu4O7gTuC77i3DFs3xN8HZzDK5TPcJ31fIlxqXOJv4tu6YI9SvOld
7zzG55uoyxsadSjr7774lhuL6Ic3yRpqv24K+058Six6s+e/9j3Oa8LasF/s
DXsEvwWu8x5SxnvcUH8P8fwBOXhrYlZiV+L9IbbvD7O37m+w09xp3G1rOQWX
U/c66wNvVtvZvpyTYx1u9H3LHsNHEC/3d3vu67utHwOsA3d6H0Z4/dGtfr5v
0FE4WfxgdBeObL7tEdzZrR6PNexjnUV34TzgPoZ5f6nDez4cBLwD/MPat4Uy
uBb8Jd7H4DPhKuAs4ErpY7D1n77/DzPCpKw=
          "]], 
         Polygon3DBox[CompressedData["
1:eJwt1XnQjlUYx/Hn4bVTGCl5KbsktHgbFNkTTZJoQSUhvFRC9lZaLVGEFpWm
TGqGiIoiVDRl2qYkDQlRjDVr+lzznD++c37X7z7LdZ/r3Oeu0XdYt6FFMplM
IYphY14m0zebyYzTlkcFVMR6zwbzB2G8OIuPeFeLm2OY+DXUprcWzWQO4TCO
817hvYw5eEq8FPOS9xaeEX+N/vQ9uBNjxU0lVEJyxXGK9yJvK0bTY/BYIF6C
K+lCbUmUwhaMi1zxMB4VX2y+g/QhnE7zfYab6e64ASPTu2WwIe3FWdo9mEQ/
EXOldX9Oa4zFA5goXoZh9H1oF754LXrTvdATD4mPxX7R8/Emnhbvwz/Yj1m8
ydrf7OEWzE972197ANPp5zE37el/+pzGKrobr4R2Oa6lH9SuiHrhT0zmPRn7
jsfFI40b75VLiUviDvF2/sS0b39gBz7Bx1iZ5h2ecp1Jv4DZMa+4DNaYr7P4
OowQH07vFM+P4GjK73peF3RM89VWo3X0emzCNN4hTKUnaeuhfrT6beb9gm9T
v5Oo4qych9KYJf407ccobVmUi9zycmvG2l1TzU9gIf0O3kj12IZRcX4iL9TB
LuzEbkyJ85DeLWr5apypVLe68vuLbkA3RhOUxmr7chW/RZwRcZHYU14bcUvc
L+5hbD3510djzOGdUpMP9WuiT2MM5BWP9+NdIb4cg8W/YnM6/1G/R7StzLeP
3o/jUSteW15RcxfBseSdw/s9vl/8gOm8g9ZdbI1a4pqx3+Lm+u2kZ3heEN8e
hvKn6pfhV4l68rrqV9P8L9E30t3QJi4ZXhZlUo0Op/vidfpSY4/QReOc6dpI
3BAHeOcbu5Ke4llVOh+VcAHvQqxKzw6m72Manks12pvO6YyobTr31Y2tFuOx
mzeTV5n+nF6D5TGed3fkLdfWaI65cRbSXXIAu9LYasjHmagLb2rcD/Ke6D3K
ictikHiIse3M0x5dME+/Qt5NdDd0Tt6/+n5gbD3j6mJH+i7j241veEKq79nG
noXyWJFy7k33Qh+0SDkPoFvRzeiWcS7QmVeVl49aqVZf4gt8hVvSfRU67ske
uBWjxcflcwzv5+Xu35N0T/MVmKcpGqWz+x36ZXN3+/B0T76Na+hWaJvuyTPG
r/C+zcQFGBL1iHOJ7zGCVym+J2s0QhNsj3uQ1wl58Q2Zo0fkgRNYZr4G/Isw
IOW8lFdfXCNyiv3DWt7t4tswJs6LfnuwkL6Md5QusN7f9F5sS+v+hIExd+Qb
NREvSmMG5eXu5Lib301n+97IE8WwAIt5S1CYxuZZo4J9q4j3eM/ySvBW07Xo
hrgk7i9eHX1qoxpm87rHXsXZsF57ugM2YRlvKRZkc//ab/Jy/6M+uCub+9eO
MWaCPSgjLo1+4nLW2EBvxI/pPlibzkTUfx3Wx92n7xRjz+VXzubWXZnq2xqd
srl/UMn43uh8LErv1oHXHh1RPb3H/1jrDOc=
          "]]}],
       Lighting->Automatic]}, 
     {GrayLevel[1], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtlmd4FUUUhi+7ly49SBK69NAltABCkhsIBAgJxVASSJByCQGRQAIaARMp
dgULoKBgASygUuxdqYoVEVSKFUR6Eanveeb78T3fu3t3Z87MnHP2NsyZmj7F
CwQCO5GPdnHRAf8Avxs1gp/AF6La8L34CFQKLsLnoCh4Hn47qgbbgOtQM/hZ
fBiKhOfi+ag6PBUvRHXh+/EMjXMPvhk1h1fhmSgaLsHzNL69OxNVgHPxGSgC
no0fQn3gM4rHYp6PH0Cd4Ffwv1EyfA7/HcXDw3X/Fvgn3GMzhsP18Vlc14Cn
49NQeTjsuQ3rj22HN6G28Jv4DpQI/4U/iOooBou/LDxO49iYBfhQ1Bp+HX8M
VYTvwhehevAj+MOoJnynnrdzeRx/VHt4n/btZp1dfJD1wMlBN06E5krk+hic
gtcj/tvgOPy0rQ+dQgt4rgn+jOJvqnNcihrDT+Ir9cwysa19C/4UagO/gefo
rO+ws2aOmfB4/Feue8GH8ae1xgfw1agd/JbW1Uw58BKKgV/DX9X+2D49h1rA
a/EvUEf4ZeVAD/hH/B+UCpdm3mNwEnwUX64ce8Hm4behcE3fjVlfe96U69Fw
O9/t1QjlQw2UDlfCn9f+rMD/RAMtLbh/HO4L/+e5s7SYJ1su8NsA5UyR6sjO
sRf3J8F98Xg0Bm6PJ6OJcCI+CuXC/fAuKAP+g3dHwjMsr/A8NAWui6ehsXAp
fA3PNYCXKLdTFWcFNASOwC+odk5ZvFz3gy/CCeTKeLiH73I+QfXSFs6EW+Bn
8Xyru4A7o5b4Nnw3CsFH8H2oN3wSP40GweXtXeXDQc+xzXsZP4/S4Bt81zfq
KM8vqWZ/w4uVk8s0po3/L/4/SoGv4ldU72fEdnZVGHMv3FPz7lX+fIbvQd3g
b/APxd97rqe1h9/HJ6LOWuPXKA7+Su8mKYZdykPrJ+8ot61GNqKu8Je6H6e5
NqAu8E78Y+W85fa7nuvJn+h+rOKcpnPP8d0+RKt/tuJ6GByJR+mMWuKfqz9Y
/DG+O9OeeC31sWvcL6s8b4iX890ZlcG7qRZa40Hf5bb1T+PBcDW8MRoJ34R/
pL16G2/E9Ti4O95A+WbPn7DegI4HXO2E1DPHonLwBIuX57LhTvi3nuvPP6uO
blX+RykGO9MbtfZo/Dvt1aeemzdL8du3hpQOjMYrK+YmeHWrMbi59QPVY29x
vvZ5IArDIdVXnmotSXHG4h1VsyFxlvb/PfWrFz3Xhydo/21M671jfBdPmuoi
BU2GU1XvOarlGMVpMVf1XZ5bvVRVH7Nzb6UeEquzC2st/TVOZ7yN72JI8F2N
H4Uz8D6+O5dMrct6zgDbb8/9RxiFlwCF1tPwDjqL2vY94bfSAfcfIMRYl23f
8GytxcbJ1rcgjC9Es+Cutmfaz0EWFyqAc/H9jNUd/gHP0vjZqhf71th308Yp
htN9VxfnLP6gy3l7174FRRozrD5ZqHkLrPfBWTy/Vb1rPR5Jcy6xurCepVy1
nN2h+rU6te+s5bZ9Q0+on/yiuS5aPEH3H8N6hfWMYu5fggdz/2rAxXwFPaTv
zmL8OmaiCwg=
          "]], Polygon3DBox[CompressedData["
1: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
0aQ=
          "]], 
         Polygon3DBox[{{873, 118, 248, 249, 893}, {900, 899, 1107, 252, 
          1092}, {831, 102, 235, 236, 1091}, {829, 828, 1098, 234, 1090}, {
          1099, 238, 114, 103, 1091}, {826, 100, 237, 232, 1089}, {869, 117, 
          246, 247, 887}, {875, 119, 250, 251, 899}, {866, 116, 244, 245, 
          881}}]}],
       Lighting->{{"Ambient", 
          GrayLevel[0.8]}}]}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0LlOAlEAhtGLoCK8gK0PYA21NEYQkyEkqKAwggY0WNv7sO77hqJybkLC
4funmbkza+l5Ms6EEHbYWwjBL+z7a5O1DzWnXe2xaPd1SQe6rMd6Qt4e6oqO
9JSCfaZFLbHBNi2OGHPBJasO8q9ND/zTX1J7qg390W8Se6Jf8Xz2AZ/2Bx37
Xd94pe76RZ/jc+0aT/YjD1Rd3+ltPJN9o1t6rZt6pffxndmN96NCmXUy8+82
AznnKIQ=
       "]], Line3DBox[CompressedData["
1:eJwt0TkvBGEAx+HZtWvdexOlD6Bxxx2FRGMPG+IoHKXErFavpqYmqFwdNTW1
+/wank0UT37/d6aYN5mu9bC8FQmCYJsdQiIeRJmPBUGdLmhMZzSu9SzaCW2g
kSXnZZrsZlbsFm2ljYJzUlMU7RJpO8OqndUca3ZeK9quHWzYnbVLsicHHHHO
lGc3uql3eqKnnPHgHI+6LwmenGe1QJESZeao8Ov9pG/96ISO822P6ZeO6gif
9rB+6JC+66AO8Gb366v2aS8vdo8+a953cmTJkCZFkkfvr937ikvua/9Fq4Tc
Ok/rhXbrsR6yz+7///sDFc8rXA==
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1074, 1291, 1290, 1289, 1288, 1164, 1284, 1283, 1282, 1058, 
       1239, 1238, 1150, 1189, 1043, 1193, 1192, 1138, 1206, 1027, 1009, 1190,
        1010, 985, 1183, 986, 957, 958, 929, 930, 905, 906, 879, 880, 851, 
       852, 1110}], 
      Line3DBox[{1075, 1307, 1166, 1300, 1299, 1298, 1297, 1296, 1294, 1060, 
       1152, 1237, 1236, 1235, 1045, 1209, 1140, 1213, 1211, 1028, 1129, 1186,
        1011, 990, 1185, 988, 962, 960, 934, 932, 910, 908, 884, 882, 856, 
       854, 830, 1111}], 
      Line3DBox[{1077, 1321, 1320, 1319, 1168, 1316, 1315, 1314, 1313, 1062, 
       1258, 1155, 1246, 1245, 1047, 1217, 1216, 1142, 1218, 1030, 1131, 1195,
        1015, 996, 1187, 991, 969, 964, 941, 936, 917, 912, 891, 886, 863, 
       858, 1113}], 
      Line3DBox[{1078, 1171, 1332, 1331, 1330, 1329, 1328, 1326, 1324, 1063, 
       1158, 1257, 1256, 1254, 1048, 1221, 1145, 1225, 1223, 1032, 1133, 1199,
        1016, 1124, 1181, 994, 973, 967, 945, 939, 921, 915, 895, 889, 867, 
       1114}], Line3DBox[{1080, 1348, 1347, 1173, 1343, 1342, 1341, 1340, 
       1339, 1065, 1273, 1161, 1265, 1264, 1050, 1228, 1147, 1230, 1229, 1034,
        1136, 1202, 1018, 1127, 1188, 997, 980, 970, 952, 942, 926, 918, 902, 
       892, 874, 1116}], 
      Line3DBox[{226, 516, 515, 514, 513, 512, 511, 510, 215, 414, 413, 412, 
       204, 358, 357, 356, 193, 316, 182, 298, 171, 160, 149, 138, 127, 269}],
       Line3DBox[{1082, 1278, 1277, 1276, 1275, 1175, 1346, 1345, 1344, 1067, 
       1233, 1232, 1163, 1205, 1051, 1241, 1240, 1151, 1234, 1035, 1141, 1207,
        1020, 1128, 1191, 999, 987, 972, 959, 944, 931, 920, 907, 894, 1103}],
       Line3DBox[{1083, 1361, 1177, 1355, 1354, 1353, 1352, 1351, 1349, 1068, 
       1059, 1281, 1280, 1279, 1052, 1251, 1154, 1244, 1242, 1036, 1143, 1214,
        1021, 1130, 1194, 1002, 992, 975, 965, 947, 937, 923, 913, 897, 
       1104}], Line3DBox[{1085, 1369, 1368, 1367, 1178, 1366, 1365, 1364, 
       1363, 1070, 1301, 1169, 1293, 1292, 1054, 1260, 1259, 1156, 1253, 1039,
        1146, 1219, 1023, 1132, 1198, 1004, 998, 979, 971, 951, 943, 925, 919,
        901, 1120}], 
      Line3DBox[{1086, 1081, 1378, 1377, 1376, 1375, 1374, 1372, 1370, 1071, 
       1066, 1312, 1311, 1309, 1055, 1269, 1160, 1263, 1261, 1040, 1148, 1226,
        1024, 1134, 1200, 1006, 1000, 982, 977, 953, 949, 927, 1093, 903, 
       1121}], Line3DBox[{1088, 1390, 1389, 1180, 1388, 1387, 1386, 1385, 
       1384, 1073, 1333, 1174, 1323, 1322, 1057, 1274, 1162, 1272, 1271, 1042,
        1149, 1231, 1026, 1137, 1204, 1008, 1005, 984, 981, 956, 955, 878, 
       1095, 1123}], 
      Line3DBox[{1097, 855, 857, 883, 885, 909, 911, 933, 935, 961, 963, 989, 
       1126, 1184, 1012, 1013, 1196, 1029, 1212, 1139, 1208, 1210, 1046, 1044,
        1247, 1248, 1249, 1061, 1295, 1165, 1302, 1303, 1304, 1305, 1306, 
       1308, 1076}], 
      Line3DBox[{1105, 898, 914, 924, 938, 948, 966, 976, 993, 1003, 1014, 
       1197, 1022, 1031, 1215, 1037, 1243, 1153, 1250, 1252, 1053, 1167, 1285,
        1286, 1287, 1069, 1350, 1176, 1356, 1357, 1358, 1359, 1360, 1362, 
       1084}], Line3DBox[{1108, 1094, 928, 950, 954, 978, 983, 1001, 1007, 
       1201, 1135, 1025, 1038, 1227, 1041, 1262, 1159, 1268, 1270, 1056, 1310,
        1172, 1317, 1318, 1072, 1371, 1373, 1179, 1379, 1380, 1381, 1382, 
       1383, 1087}], 
      Line3DBox[{1115, 868, 890, 896, 916, 922, 940, 946, 968, 974, 995, 1182,
        1125, 1017, 1019, 1203, 1033, 1224, 1144, 1220, 1222, 1049, 1255, 
       1157, 1266, 1267, 1064, 1325, 1327, 1170, 1334, 1335, 1336, 1337, 1338,
        1079}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{301, 1183, 290, 291, 1185, 292, 1184, 293, 1187, 294, 295, 
       1181, 1182, 289, 296, 1188, 297, 298, 1191, 303, 304, 1194, 306, 1197, 
       309, 1198, 310, 313, 1200, 1201, 314, 317, 1204, 318, 322}], 
      Line3DBox[{326, 1190, 300, 302, 1186, 305, 1196, 299, 1195, 307, 308, 
       1199, 311, 1203, 312, 1202, 315, 316, 1207, 330, 331, 1214, 338, 1215, 
       339, 1219, 346, 347, 1226, 354, 1227, 355, 1231, 362, 363}], 
      Line3DBox[{367, 1206, 323, 319, 1211, 1212, 327, 332, 1218, 335, 340, 
       1223, 1224, 343, 348, 1229, 351, 356, 1234, 370, 379, 1242, 1243, 382, 
       391, 1253, 394, 403, 1261, 1262, 406, 415, 1271, 418, 424}], 
      Line3DBox[{426, 1274, 420, 417, 1270, 1269, 408, 405, 1260, 396, 393, 
       1252, 1251, 384, 381, 1241, 372, 358, 1228, 353, 350, 1222, 1221, 345, 
       342, 1217, 337, 334, 1210, 1209, 329, 321, 1193, 325, 369}], 
      Line3DBox[{434, 1189, 364, 359, 1235, 373, 1247, 376, 1245, 385, 388, 
       1254, 1255, 397, 400, 1264, 409, 412, 1205, 421, 437, 1279, 447, 1285, 
       457, 1292, 467, 477, 1309, 1310, 487, 497, 1322, 507, 517}], 
      Line3DBox[{519, 1333, 509, 499, 1318, 489, 1312, 479, 1301, 469, 459, 
       1287, 449, 1281, 439, 1233, 423, 414, 1273, 411, 402, 1267, 399, 1257, 
       390, 1258, 387, 378, 1249, 375, 1237, 361, 1239, 366, 436}], 
      Line3DBox[{527, 1282, 427, 282, 1294, 1295, 440, 450, 1313, 460, 470, 
       1324, 1325, 480, 490, 1339, 500, 510, 1344, 520, 534, 1349, 1350, 541, 
       548, 1363, 555, 562, 1370, 1371, 569, 576, 1384, 583, 590}], 
      Line3DBox[{596, 1390, 589, 582, 1383, 575, 1378, 568, 1369, 561, 554, 
       1362, 1361, 547, 540, 1278, 526, 516, 1348, 506, 496, 1338, 486, 1332, 
       476, 1321, 466, 456, 1308, 1307, 446, 288, 1291, 433, 533}], 
      Line3DBox[{368, 324, 1192, 320, 1213, 328, 1208, 333, 336, 1216, 341, 
       1225, 344, 1220, 349, 1230, 352, 357, 371, 1240, 380, 1244, 383, 1250, 
       392, 395, 1259, 404, 1263, 407, 1268, 416, 1272, 419, 425}], 
      Line3DBox[{435, 365, 1238, 360, 1236, 374, 1248, 377, 1246, 386, 389, 
       1256, 398, 1266, 401, 1265, 410, 413, 422, 1232, 438, 1280, 448, 1286, 
       458, 1293, 468, 478, 1311, 488, 1317, 498, 1323, 508, 518}], 
      Line3DBox[{528, 1283, 428, 283, 1296, 441, 1302, 451, 1314, 461, 471, 
       1326, 1327, 481, 491, 1340, 501, 511, 1345, 521, 535, 1351, 542, 1356, 
       549, 1364, 556, 563, 1372, 1373, 570, 577, 1385, 584, 591}], 
      Line3DBox[{529, 1284, 429, 284, 1297, 442, 1303, 452, 1315, 462, 472, 
       1328, 482, 1334, 492, 1341, 502, 512, 1346, 522, 536, 1352, 543, 1357, 
       550, 1365, 557, 564, 1374, 571, 1379, 578, 1386, 585, 592}], 
      Line3DBox[{530, 430, 1288, 285, 1298, 443, 1304, 453, 1316, 463, 473, 
       1329, 483, 1335, 493, 1342, 503, 513, 523, 1275, 537, 1353, 544, 1358, 
       551, 1366, 558, 565, 1375, 572, 1380, 579, 1387, 586, 593}], 
      Line3DBox[{531, 431, 1289, 286, 1299, 444, 1305, 454, 464, 1319, 474, 
       1330, 484, 1336, 494, 1343, 504, 514, 524, 1276, 538, 1354, 545, 1359, 
       552, 559, 1367, 566, 1376, 573, 1381, 580, 1388, 587, 594}], 
      Line3DBox[{532, 432, 1290, 287, 1300, 445, 1306, 455, 465, 1320, 475, 
       1331, 485, 1337, 495, 505, 1347, 515, 525, 1277, 539, 1355, 546, 1360, 
       553, 560, 1368, 567, 1377, 574, 1382, 581, 588, 1389, 595}]}, {}, {}}},
   
   VertexNormals->CompressedData["
1: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
vliLf28wajDTg1fcs21frALG29u+WP8D8ch17g==
    "]],
  Axes->True,
  AxesLabel->{
    FormBox["c", TraditionalForm], 
    FormBox["\[Gamma]", TraditionalForm], 
    FormBox["Efficiency", TraditionalForm]},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotLabel->FormBox[
   "\"SVM Two Circle Soft c-\[Gamma]-Efficiency\"", TraditionalForm],
  PlotRange->{{0.001, 100.}, {1., 6.}, {0.8706467661700001, 0.960199004975}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.670375935776239*^9, 3.67067764498669*^9, 3.670931215329771*^9, 
   3.670931273998657*^9, 3.670931359086358*^9, 3.6709314461428013`*^9, {
   3.67093153199514*^9, 3.670931579488904*^9}, 3.6709317267899227`*^9, 
   3.6709318557661467`*^9, 3.670932002698916*^9, 3.6709320433890257`*^9, {
   3.670932081622251*^9, 3.67093209248002*^9}, 3.670932139425377*^9, 
   3.6709321842883377`*^9, 3.670932321601253*^9, {3.670932486496838*^9, 
   3.670932552789813*^9}, 3.670932672186058*^9, 3.670932764947885*^9, {
   3.670933197725175*^9, 3.6709332252440434`*^9}, {3.670933695772834*^9, 
   3.670933705749578*^9}, 3.67093937948001*^9, 3.670939417182568*^9, 
   3.6709397013290977`*^9, {3.670939906950098*^9, 3.6709399221756077`*^9}, 
   3.6715409777913427`*^9, 3.671541966397128*^9, 3.6715420542690973`*^9, 
   3.6725702866804247`*^9, 3.672571592910342*^9, 3.6726438958410683`*^9, 
   3.672644192459403*^9, 
   3.672644357958664*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
D4UY6q1ByKHkT2gE/iEeAdW2bgkwDDIIJE9KBQuPyfzIJFf9KBa0OanR6+IT
hYqTypDgiaEHz6u9UPdDVCuRCPtXSrmDHYg1uS2b4/t2j8obcryjufLmkI4M
D03P8xGPH1OQpmXGAfnJREbDKklgkPRcKMPMliORSE1cxA2CeV8WEwcqWZaY
OCeHKBkPhY5EGvfpohnKKaHAVGc46b02YmPxiNmoCcchhlPFDGehqtkJrGZk
bBljMjVLpoWk+Eo7z1wqlbtse7o7FTpgTh2p/KjBcImrBZ2kUxqzP0rHzCkh
E+YamRVy1DVynBaoTBI9ovRygphQLwOyWsdM2fAiE8Y4SP3MENYqlVouFiRl
jAOJsGYKo9uruXRnEPw1g9c0XoZ9Xh7EPTTpCLpTqt4lk/A2L+JmITR5YJWU
PFOrY+SqGe7kk2FSZbHosE2rGV1srNARLlTqt30TPZZ68wnjiegrlGIrmrRo
kIM5OtVK5zAJDze0r+IRL2DA4e8VzSPu4m9+5CV/DZJVHnjgAfzr+TQbFFnO
J0wWSuH/o3NRwizAT2MGrIL0RMp6S07VUH0nb60sIrMjGfTpWT5KYnUROe8T
isYRL+ExVZfuYfRuY5/YRgXp6QN21hVJWIVGBHlHPAWlnwI4ttLIrqXBxBMj
ebYLFiwYzp49G7+f+tSnhtdddx04FvwcZfO3OOoSKHGyEovoF8yAbmEtqKUj
3hZIFUJ+lNPkkdInMpMzFiOiVJNZzFE3L8yqeVbKLlWo0FmpCRFku4oeWOkM
8Czg+MM9lwXiOSvwW+DwVzD8RoWr4Cars27/jqmALJkf/ehHGMuAqQCXaTIV
2Sst2h4u4kl5s+NgxD1mYwdFLjj2ZbMBXTXrlUbDnInTM1OizuBFCQtpaVYL
OfbV8xxqvqrBPFG188a5yRLcsE4iHYvUVXaWLGU5CwkVNEmFzlApjGBVgJmR
b3PPNTRqOZxIjtd9992HCWUQI2NmRh7r/MxIpiDPis3MPylccPQrmgeGgRnS
2RkRVrRQjECVHZWfFnVLdzpoC52Kkv18bj50NipVD0ULjBQEnewqUQ81qtSX
gPBSns5lPDvLDTZCLqvgz9XwzDXwjLWB5qUzVcXmpkIvJwCH56VjWshZlJ2W
i1KYvsHhp5kHNFtqZF6Vt2C472rxC/h5rAk4YxngTCgvK3WieulELQg0Rz2b
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
7uS530rgQUA9rSgUDm4+VvO7oq6qoBRgApJFV834cNRWEV0VHvAX7cUKKTA5
ZwcvH2Fi+uiIWodJINPLP5F92DZjYY5U9dsWZs4f1BcF39d0iVGo0QiHRAJA
ZWk4pWX5Okcpmolbldy3Ku7UrbQ1IvdasZp4g8okgJIpSkL2rTc1q67trnq+
VpmXhZVmlxa8HeOqaN9u/vIKzNXaNE6yc0vCW3DMScXeZHDk+MfXHCRDAsE7
Rb/c3TRyv8xmJbcTZ/zsYE6NjDbFVhUZoYUrq41kJtVBYSC3ObnFaXM0Js/g
JbYKPOixp1VawrGnQ3hprKH6pG4BJxuSzE+91TEamb5OtsigESLTW5IDcTx3
iEz11u4Ss7cpBDCxvQFTcrhtJyFLRtWa7SM8PG1QOruOv1UMSVm0x1DE33oZ
4CUhDxLB/r4WuawTd2wMtzSnQMU+ulJ7rGcmyqV4eqSPLZyhedifotjzOCta
xt0JDmEhkKYCgNrLNmCUF/M5LvdyZ5cGS8W5LUQRjJRdc5vCdkMbj/Q0nWZJ
W4UwxuMhknSidFQuWqHSLoo0jsfqaFqUhIDFZPaiLk9qy+Rr7Y/h87w7RJ43
+QZiBKciz3wynGMxTm079Hep+ajpPXH6jlXfL3RLDNAvkr1DIpbpfC8U34sX
ELG0a/ldCqoRDeKu9OIu1PwzEYFyI8Zd2RUDKaJcV+GBLtRYa6gxkXV1XJS4
0GwdSV9dHae+MqbGMjgreGmFKzV+d9CEnhFge3nmlPhvEGaf8ctMe7Y3FOON
FWzS0He1xTwbuMnyYJbgHCYPIatcao4EqgtO04wwdyvT8z1kFkAXxc/ydKf8
ekbn9ungM+fg3BOoCXTVBLpPYFeqx4UV2rsxyp9bOJ5G+BOPiwqWtAJQkimu
AotkGscx+m136CyVg6wq9nKB/a7CdRrW38mbe7mte3xw0cOvzKCvUh+Kh+DW
kEVfJTMptvf97Fvx7cjeM5/owPyhZFYOoroprfJDvSwE7+GcukIhWHpo6Wab
zc+egjGKcXhtsi35bC/lu1Pxlyv1PQKRKAhJ3D2XYMnmQJDt7WX/bhFJ6bKg
TTyLdwXTs+YFC+YLTbVT5QqrWb9zLB5uZhpeykxZ9jyWEq2UeS54ZCz2DIsS
vKeYYoER/DoHR4bhbvQaItWdVyYrCdubowoUn423m75D0T9icp2BP3BtSRJM
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\
\>"]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Log(c)-\[Gamma]-Efficiency", "Subsubsection",
 CellChangeTimes->{3.670375876644413*^9}],

Cell[CellGroupData[{

Cell[BoxData[{"SVMLinearHardLogCGEPlot", "\[IndentingNewLine]", 
 RowBox[{"SVMLinearSoftLogCGEPlot", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", "SVMCircleHardLogCGEPlot", \
"\[IndentingNewLine]", 
 RowBox[{"SVMCircleSoftLogCGEPlot", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", \
"SVMTwoCircleHardLogCGEPlot", "\[IndentingNewLine]", \
"SVMTwoCircleSoftLogCGEPlot"}], "Input",
 CellChangeTimes->{{3.670375879574093*^9, 3.6703759316786222`*^9}, {
  3.672570308019701*^9, 3.6725703436518793`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJyFXH+MXFd1Hs/OemeTsRnPjscWiaIkLShtWpIi9YdVofea0kallRpKCwjR
EtFEQlHa0pSmakvxWCFKaRSiqhBIUSsiUgVKlFoQRVaIslMIYdUfNKQpJGBg
g/PDWSfsztozOztr73Teve/ce37cb73/PM+n4++e+53z7nvvnnvvZe//k9+5
sVqpVN48W6nMVOiv3vPXtUxeCR8BvJKn8RrA6wBvALwJ8BbA2wDvAPxgwI+e
m0z/ZnvSTuMjgFcATw3gdYA3AN4EeAvgbYB3AB51uHC7wGeMDhIfAbwCeGoA
rwO8AfAmwFsAbwO8A/Cow/uKm6RSNTpIfATwqIPEawCvA7wB8CbAWwBvA7wD
8KhD2Z+e/K1xPT4QrscHwvX4QLgeHwjX4wPhenwgXI8PhOvxgXA9PhDO8mGr
yJOtRWmn8RHAK4CnBvA6wBsAbwK8BfA2wDsAjzp0zhb4htFB4iOAVwBPDeB1
gDcA3gR4C+BtgHcAHnV4vFZczwQdau/c+7Nf+qdVhY8AXskfvPg9N/zyDzVe
A/x1gDcA3gR4C+BtgHcArseHtaBD0avfvmtV4VEHiVfyNF4DeB3gDYA3Ad7K
q1fe0Xnumxpv595c43p8WDM6PD4s8uRlmw8CHwV9JF7J03gN4HWANwDeBHgL
4G2AdwB+MODvWivwH5p8kPgI4JX86C0f+PvXPqzxGsDrAG8AvAnwFsDbAO8A
/GDAR63i91NBh91HPvmrd96s8VGWtq8AnhrAYz5IvAHwJsBbAG8DvAPwmA8V
8afHB/obAbwCeGoArwO8AfAmwFsAbwO8A/Cow21en/BcTOMjgFcATw3gdYDH
cVLiTYC3AN4GeAfgBwP+f3PF72Wjg8RHAI86SLwG8DpotwHwJsBbAG8DvAPw
qMNH/fhpdJD4COBRB4nXAH8d4A2ANwHeAngb4B2AH9TP5XBN4+b9IeiQxs37
g9FB4ub9wegg8RbA2wDvADzqcJ9/vzI6SDzmg8RjPki8BvjrAG8AvAnwFsDb
AO8APOqwMuP7STrQ807iUQeJRx0kXgP8dYA3AN4EeAvgbYB3AB51uMZ/fxkd
JB7vC4lHHSReA/x1gDcA3gR4C+BtgHcArseH+N2onrO51kHi5v0h1zpIXI8P
hOvxgXA9PhCuxwfC9fhAuB4fCFc6dGd7L9aLfwzlONK185PSfhvYq/mZKX6L
uy9nDO5/14D9HLCvA/sLgb2e55np/UyRFpPTwH89H2XnJ2W7rwPt6nkkancL
8FvdDhXzZ919gF/PR8307nH8uwzur1Znz78A+PW8FvHPAn4bF8+/H/Dr71/i
nwf8Ko6B/wDgV/MJ3UrvPjc/3Qf6q7h30Twk+bkH+KniHtrdBPx6PnOm95+O
3+aPv6q4T3mecvPNOn/QvCjx2/zxVxX3wK/zB82vEr/NH39VcQ/8On/QPC3x
2/zxVz2PdHbxmnn+W/Pr+/3sor/q+5381HmI5o2pXZ0/xG/j9YGC/rDNH/9b
x+vson/f0flD/DZent/mj/+t40X8On+I38bL89v88b91vIhf5w/xW509v80f
/9vGXf7W7eq8Insbx+uqadxfbVy8vcX91ers7S3ur1Y3b29xf9U6bCx23fvg
MHuwmC56eTXg/joyuLffBvaV/FAxzbkR8d6u4jpjcH/V+UP2cwb3V50PZH8h
sNdxXF/0732nszd8/yd3H/mk9mdN9Ws96CDfl6hd9Xyv2LqAbHcr+7lDDy/d
+rjmr+QS31hcLi76+V6x9QXi8c+RXfnST/N55vWgs8SJXz3fK7ZOIflnAX8d
8Kvne8XWOyT/POBvAH71fK/Yuom/riyu73Z8Ko7rIe4yH1ZC3P/30uJLaFX5
uQf42VQ4tTtWPCsh7prfP0c0z3qI+w0iP1cW/9Ldj7vyNH8N8Gue9RD3y8R9
SvyzgL8O+DXPOog78c8D/gbgt/njrzruy4vPzPnf8rtsJcT9znuLv9Vg7696
fpj83AP8bCqc2tU8yyHuvfL7mngeK8aTbjN/i8jPlRB3iS8v+u94zbMc4p7m
b+Vv+p+Nd5z4F83fVjjxa57lEPc0fzt/YJpVW1/Q/B2FE7/mWQ5xT/NrnpUQ
d83vr2vZTUp/367mXw5x1PhgVxqnuKTtLU46p+0tTrql7S1OOkh8afHEqLhf
BtlPXVUMcBH315HBvf05YF/JNX6Lq1dXDe6vNWC/W82TkL2up5D9BcBe11l6
YZ4vbb+WjTY/ctNjH4r2pEO63b2gXV3HoXbPZhon3TTPoWIcO7wP8Ot6UC/z
73VVg5POaf4FwK/rSsSv40L8Ni6efz/g1/Up4tdxJP5G/kbx/CX+A4Bf1/uO
Z1e7ead1oL8e/4+DuJOfe5U/xNNUOLU7Bvw67r3sCnf/7gP8LcN/0OXVLtNf
f9VxJ/4FwN8G/LOAv55/TDwfiX8/4O8A/nk133g8xF3ixH8A8B80/P5q4+vb
3QPa1fOox7OGmy+yOMUlbW9x0jltb3HSLW1vcdJB4ifLetdG9kdCh5MhzzXu
7SfAvpJr3H+/zJh2/VXPb5P9HLDX895kfyGw13nSL+/TYZa2X1P96gcd/lnk
M7X7OtCuzgdqd1vx9INumt9/L+wD/Dp/+mX+z+Rpfquz518A/DrfiF/HpQ/j
4vn3A36dn8Sv49gHcST+A4Bf5/kwu9ONt2eye069/dglt2t+Xc8dhri/R+XD
FeX3e9pPHXdqVz/fhyHumv8TxaWr494HcR9mv+7Gq2qei/FtCOJO/DrufRB3
4t9tcH/VcSd+Hfc+iDvxXwD47f3r+XXc+yDuW9mzYz8/3xTvk7Eu9TdC/1iv
vF/cR+TnXuCnjju1u6l4bN2TeH7CjQ867kMQ963s5nN+fv5R8f1o66eSX8d9
COJO/JrH1mElv477EMSd+DWPredKfh33IYy7v8Z6tGxX89t6MeGPbPv587S9
jYu3tzjS2dtbHOnm7S2udbjcPaXneh4fBD3e6v7/7hIfB/yRwn6R7CcBF/sO
emh/SuR/1tkTfxXYx3YlPgF45BkX8ctK/m6cB77ZzeOT/3oeuG7sJT+yj3XD
jxf9WtxtcGm/F+Bgf1AvztOKfS5QZz3vWuI52E9k5lGp3cj/tNOT6psxjnLf
TcRFXrH+Svsx4InxPVPgh2vnsa8GfpG3TE+Rt0hPFnfJH+P+Az/emXYlT4y7
zPMFYM/yobDPasafbzgdrD+SB+yrYv0V9wXLB3FfsHyQOkT/XynwRfJzPm2f
g31bjF/cLz2wf6eH9jcN0uMPyxOJx7x6m5vvq57Hvhrafcz11+op7Fm8JM8c
sJ8HeMyHZwo/8+rO/CzuchwGfrI4OqBH/MCfHOw7M+NGWQ9FcWTx+lc3Ptj+
SvsYF4lPAF4NPPe4vLI6CHump+SZA/ZRn593V6untI/9+q3ikld2bpfFUeZ/
9P9Sd59a/aX/wJ8c7JvjPHyflHm+UL07xvHDLj93mf5Ke/0cJ1w/xwmvBp5P
O17SLeqzUPjfK9vt6Tqm1Vny6+c42cf4Xu2+30p+8zwle9Bf8xyn+yL6+Q03
/pBu4D5C7ZrnOLUbeV7waNku2P/F8PuLuB8ee5zFV+6b0++H24taB2k/Bjwx
7icdPjL2tzp/rL3kqYZ2/9b1q1yHwPT3z7VJ2V82DnAefj8K/pgnjzp807Qr
efRz8FxpvwDso24T19+R8ecuZz82/kgesF+S9feM4y/1Yfnj308ojmAcYP5/
y/Fsmv4K+xzsx2T8F7v3mXMmD8W+PIb/novjMOThr1z/4lOXf29V7WeM+Sny
meks7WO+STzm2yfcODkI9rf1/uO+X3tEt1sN/CKfWVxEPrO4CB4Wd8kf436T
uw5Du/4zTvnD4iLzNsZR2kd9vlDUL7tnjD+5y5Oh8UfygP2qrL8iz1meiDxn
eSJ1iP4fduPnwPRX2OdgPyzjF/lsnndrO+fnNN/oO1ri4+yha5//q/ZDGp9k
3/ncB99ywXdWy+dL/zz2Mb5XuvvF6insWbwkzxywnwd4zAf//F0L/G8t6+DS
HuzPRX6yOPrnYD/487XBFe+9+6uKPwf7eVkcxf7Nnq4ProV4OfhTq9mGq3+s
h/5eU44n0n4M9vlOAr53s2j3lWD/dTHPthbiSPZvLPzvng76/HsxnJxW9l20
X1jPq68F3Qi/3o1X60HnI2IdzlroL9m/tFH4fzK0e/dXiwBo+2aIu8Cn/r+/
+e5DDy+tZne7dQ+nQ1xcs1va/4WwT1zg0/g6+r5uN/KIfam9uF9V7tsdZOOi
/P4Pq9kd7n5/NfSX4i7tx2D/8gTgsT7un5s/DjoUYj7wpLLvov3Oc2l8GkfC
r3fj4amg27vL9XvSfi/gAfuje3E9gH8/eS3ofOC5b26844T2cyHNk4P91N1Y
r/8lN6+9EuJ17JLbT739mNpXy+7T33X+PBfi+PpyHl7uRx6EuFzr8vaFoMOj
v9GoXnmHth9naw88+Zu/+DGNT7Libt/8yGp23QXF72eCPeXVg2cK++8H+/T+
6GrIw6ecP88H/cn/V50+LwX93+A2TiueLtoPPhfwz7vnxbOmXckzH/A/d/6c
CHG8vaxnSfu9wf7+vQXwtPGn4sa37xl/JA/Yhz7tL+Hbzp/lkD+k/+sd/mLI
n9VkvBYCz9nZ4ve3Q3+Tcc/BPvcpP+Gfc+3+KOThdXd96o9bt9H4U/6x/Hzk
QAE8EfKQ7OU+8UHmhsNbVT5PdU7bj8F++YnCjwZ70kfax3wQ+TyNC+W/yOdp
XEh/wTONexKfxp3aHTi8F9qlvJI8cRyTebsA7OM45vk/a8ZPaQ/2+7PxTeTz
NB/ovhP5PM2Hi8r7VPY3jnsfvLj4fcz0S9jn4DwBNh6KvJ3mFeWt2FfeM/vm
yr8BOE9Arwuiv/j8+vpFxe+lbGf7+Fy7+rLi938ZPYV5F51XEJ9rXZ8nmeaX
PPMAj/lww6XOn2zHdrvg3APmv4/jkomL9D/G/XJ/v2c7+pmD8xMYv9gv30Pn
CcT49ly8jmWkA73PSPsxOFchxv36ZvH7+Hnsqypen81IN3oPFPZddD7DXBqf
6pb0n71/zjo/f7Azfxec59CLdXDv/9GM9Kf3cOnnQponB+c/sPUJYr8/i+M7
3fh2wsRRnpMQ8Vv2Fb+/bXSQ9mPAE+Pr1w28aOy/6MaZ54295Ilxv8L192mj
p7Bn3wWSZy6/t1y34PeXnjD8kid+p3ScDs+auEj7qM9Dbt3wS8Efwo+4744f
BX/SPOAcDNbf/3b+PGPiLvsb/ay65/sLpl/CPgfnaTD+r7j8/y4Y/9cM3vLv
1SGvNsv7S55HEfNN5CfTU9rH/JF4zB+/juq1YE9xf9h/PwZ7yhPJU82vKtcd
ibxlcRF5y+IieLroPJAYd7/e7lRoN80T4yXzdgHYR938/pAfG3/8uvZXjD+S
B5xDwvor8pzlj8hzNC4x//368ldNf4V9Ds45Yfwiz3vgvAuG+30U/ZCHyXyG
uJlvCXlFuN8nczrYPyHnW0zcBW7nVUy8/PrLdZO3kkevN14zebLHz/OYdv26
wL5pV/KAc1p6et3Xmon7C35ea2c/c3CuC4u7OMcDxZ3Nt0g8jicSj+OJXz+9
cR77qL9fz2d1EPZddD5M1NmvzxsG/jeV/JJnHvDH+O5y8d3Yud0uOGcG+c/i
eJXjH+7sTw7OpWFxFOeQ9NA5LYOMvkd+37U7MP2V9jFeEp8APMbx7xy/1UHY
d9H5NnPAfh7g0f93FePh4a2d+bvgPBzm54dqXi+ts/RzIY3n4Pwcsw623FfP
4jXv62UhXjSfKc+ZGYTx8IuOd9PoIO3H2T+Wz3GJx+e4f95tG/vv+nqisZc8
Me5+PeXYvo+58crqLHi66JyfmA/+/eScaVfyxDzx52hsmnhJ+6ib3/8/Mf78
qa87g/eQLdNfeT/G/vr93psmH2R/o59+/9K26Zewz8E5RYz/iOMZg/dPOt8h
5pvIw65e50z2MU8kHvNE4jFeIt+YbiLfzHOw5DHPd+LXz1mynwf5o9c/kz3o
r3le0/27L50/LC4if9A4gPwxz3HyZ386T1h8v8LXs7F6t1iXxerpYv0nqw+K
dVZo3SarD8p1U9WAy3WVsT4o1jvxdTt8nSSrD4p1kqw+KNYrsnruX/P1S6y/
Yt0RWycg1h2h9YSsv3IdUeyvWP/D+iXW+7F+ifU8rG7rgJ5dJynW57B+3cHX
ybB+iXUyrF9yHUv0/zRfT8LqzmI9CeuXWP/G+nURXwfC+iXq3VN/emWdVNRt
2bgk1oew/BT1VlZ/F+s6zLq79dBfOldZrruI+flxXvec9pfqrWIdBeuvWEfB
8lOsZ2BxFHVM9t0k6o/Tfrnt9Z9R6wqm/aL1Ku8T9cQ43v4brwNO/adxW9T9
WX32F3hdj83vLfE6PvNf1OnYvISol7H3SVEvY++TTV5nZ+OtrHPFeoSoN7G6
hqg3sbrGy7wOPu0v6SnqRNP+Uh3nzXyenNUTxTwzmxd9ks/rMh2+zOtKbN77
o3w+lukw4PUgNu8t6zILal73aHg/SdZZ2Dy2qHew+peYt2T+i/lD5ufXeN1h
6ifllZz30/PPVC9YCPkp5uWY/6IuwOIl5tPY813M50/7dWM5boh5cpZXYl6a
PWfF/Bt7HxDfp+x+FPNmjF/Mm5n33lNBh+S8E/NHzDux576Y/2HP/ffy7zv2
3SfmbVi/xPcai6+Yh2H9kvMn0X/x3cTex8Q8CeuXmCdh/RLzG6xf4nuH9Ut8
d7B5S/Hdwd5LxbwE65f8Xojjp5xPiP0V7/Osv2LegM/v8fdwlrdiHoD1V3zP
mvdA+/7mee0+HYlPAD4GeDVP4nrddbAH52rqfVJdu85c2ut11/b9U+LAf71O
m3Cznty+r8p+6XXaifdVjiN99Lrurn2PlTxaN7QvjN73Bml9tJ6J916JA53N
une7/0LyVNP2Ws8uWLffRev87b4V6ac+F9S+V0v/wbl/Jg/te7XE9f0F9gt0
7X4ByVNN25s8tO/nkgfoafLQ7i+Q/OD+RXmIdDP5U+JQB9BfE3fiB/4bP+33
hf8d15mnzyecZDe4YVjjY2BfTZ9baOJl14FLe523K8HPP0v5b/RfD/6nzw+M
65Mlj46XXZ8searmnD1/1XFcD/1NnlPXtecNuouJu13vLXn0eYB2X4y/Lgc9
5XqPuH5Yn8vnrxNwLp8+r2896Jns71TPJ6bqX/u85qma8+tIz79Q5/iRnkl/
uvYcP9Izec6eWd8bvweTPEbPlaCbPteO9Kl83n+XSXySDcrvLMnTzFvi/Wcl
6KbPtSPd9PlvpJs+p470SZ+HNpfmmer2h0WrD2g/96fPkZvqluTp2XPtSLek
P11wjtxUh7T/C2k8B+fFTf1P8+vz4ug7Tt8v9F08yKrf4nEkfALOhRsDHJ0L
N5cn253G8Q/EOs+loH/6fCrgf1ef20b9nWRpXK+7Ix69bm0pxCvNo9fRUX/1
OWxkr3UocbOObinEPe2nXi9HPFo38t+ez0a6pc/X0rrZdWuSR5+TVuI9fe7Z
caBbnGdI28/ll6Rwo1vJk+tzz8hPfY7Z8aCb/F4j/+35ZqSbtLfzFQI39ZHj
ob9J3Hw/Hg/+p/l1nYjW/wzAeV9jgKPzwar5NUKHk0H/dLvgHDCj8zD4SfMD
/jdar3IS6N8P/qfP0Rqbc8A8j46Xnf+RPFVz3pe/gnOZjD5onclJEHfyE5zL
ZPQk/9E5M4PsxtQ5aUbPYdAzff6VHgf6QM8+0NOu95D6oPOOtG7DnXU2etr5
K8mj9ewDPYdAt1jHv1fkia3jSx57/lhaN1vHl/po3WxdXuBGtyHQbQh0s3V8
6T/IQ6Sb0cHW5WW/QH+N/7bOLvmjn/8Pykcy+A==
   "], {{
     {RGBColor[0, 1, 0], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
r8Kfin5mxa7KO1RX1NzfRfv/AZ2wUCM=
          "]], Polygon3DBox[CompressedData["
1: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
CbkJOWAfXV+IDgpfLbxpcQ5HLncTPio7R2Q8Oc1mxTka+kFO1LM4ZxkT8/Uo
5gBvIJavzA2+LzxW+BLhDYo5wBG1c0K4QZ5paOgzz0qORq4GBwRRQU5MbnyZ
4PrFv+G36Od62ZzYZbVzTriyFmrLqb1SnG/C6Z0S863F2dDv166cDw0pjnmJ
fbvo2uXxPOwVPGPzOCOcFbilZrGPl9bOKZeNGIJYIqsVtV81xy/Je856WC/c
JxzUStn7c1Po33r4Io39I/mZW8Rc+HZ8fI51XF6bA1whe01co09uDT8FfwCn
2DL7zPwvfwiMzqK72IelYr+GhT1YOptvha8bHPJmsVby/g5qf/NOa+cwg4g9
1M7MztNHqg1Uu6UyR3FiNl8B3zA2MMHunNry87LngOOA22Du7bJ1CZ3C9pBv
jauc41yQnTORO5GjnR/PxNpYY7OwD5NDP+BC0M8pwhdW5haOy875yPXOiUaf
vJ9caljkD+PjfnDecN83cI+wfz+oddH1rmE/yc2wieA5YQ/Q7zVCZ9ALuOnV
o9Enz1877M3U8A+bFD8jzzoo9BkdRpfxJx3DHo2u/Y55192zdZ8z0DXbxmGv
2JPuoRfoCv6qS+gI1+gzHh+G7PSYv2vIusXcH8V5xR5slu3/xoW93bDYh00K
+7iR+ltlyxiDL+T8XlxbH+Fe0G98LT77ufBf+KMBuvZTsv8ZVFsHG+IMoffw
UKtGQzeRI2PPu4QPeyb8xZCI/9cN+3dl7fPTKuzHzbU5Fri2DbPfFe8MW75j
9lpZM7aKMYzlfLfOXgNrOTcw8QNc8qHCfyXzUeg6On96Nuf2am0ODy4O/g2u
4daQN8e2cKaL+RI4FLgUOIwLk6/BpXSvPBYO52LsVDK3Q8xFnNUU31PM4a9R
m/OB24fzuJTfJHMh9NvX5oi4xvnjLN+sNkD9g9QOVDs4G9PH9vP8XCNe/Eat
k+bpXByfn0zcq3ZeMqe0iuZvV5lrgjNaOeLFpYpzol6VOSf4ANbSrjZmTSPV
rkmuM90dDf6O9SCjJrJe7XyGXAyOCK4IjqpFcf6yIbqua1cU839wu3C8NySv
6eCwOaydPWLubUNOjeCa4pyO3A4ObbWYH25tiNr5ye+M98E7uCqeeWTsMft6
rdp1yXNtUDu/HRtjWSt7wG/gLJ+prTPozo/CTwmPEt6qmGOcyVqq4B6zY4sJ
apdhq7NtFTZraDbHBFcCZ7JzMd9xb+UaHnwQnO8HtXUQXWQOfjc85oZDfrc2
5wq3DMc8t7Y+Y8vhxODGqJlcn23D4YzhirHtJ8UzDY25l9S1j2vb70vDxmJr
4VaR9dbvti/mMW9Ruz17bu7R0OAaA7UGOMabkv0psQExLbEt8d4jtfUXLhZO
Dm4OzvbIeD58DT7pmOx2dDwzssOzOb6jQ3Zc+JvZmuOX4jmZmzNyRPb62PuX
JP+9mM+DGxwTcuKp++L9wf3CiRCfXif8H/W/VZsR8esW6u+ZLWMMsSw2grPG
mdtf/X3Vrq/MN/9QfD55HmK0hXEGOYtwGE9EjDM88hniB2qAA8O+dijmiJZO
5qjgjuCo2qq9nM1d0V8yuQbItfHZnB1cXesGc0JLEBdV5oqe5neV65PtJZsu
/Kja3rrXPpz9BnNNT7IfxZzel7U5PLg+aozUGuFI9yrm5L6urbPoLhzfD7U5
bri/NYWba/yLwgcUP9PftTkunpWaILXBWcK7Sr6H2u7FPN5D2ZzXv+hOZS4M
+9G1dr4Ld0L8t25tGwIXij2lNgon3qzYvhErEjM2KbZ554ZdxdZic7qE/NLk
mnCn0N/lwsZj6+FU4Fbm6xk+rLzf8MfUGKk1kr+upP4v2bVXarCLs/1Dx9qc
Ntw7c3Wubd+YE46v1v/plbk/7O9K4T/g8kfEWYcbXSbe1/OV658tGsxRtoz3
e2CxjqArcOZvZ3O6K5BHVuZ638/mob9S+zqbs4a7pob5jvDs7FoMfHDnBtc4
V07mRKl9UhPt2uC68LzQQfTu1Wx+Hv2apfaG2pvZY1sl10w/iDGM/Tyb21+Y
zY3PiedlTsZRa6a+vCP7W6zT4+Masu+za9HfZdemmX+B+p+qfYJdzt5/zhi1
bDgTzh41eXSfM7B/cQ2ZvWRPp2j8fdm6iE6uEHzw28KfqH0c8/NuqVlRu2IP
kTHm/bg39YAFlZ/hp+w+177N3kP28tN4XmrO1J5fF/5MeE52zeC9eFfUF6hH
z4/fDwl9bit8anJ8Qa0IPo14Av9HLYkazVnJHBxcHDnmsck1mCYhX6KYj6P2
QQ2kUTFft1xtDo/aDHwRtfIOlfkwGtwYvBEyOO2vK3PScNPUuOC64bx/y+bc
f1R/9cpc/PO898o1d75PgM+jFkRN6O/sejHffqyotklyDYRaCDWoLZL5LJ6f
mtKRwjuo9UmuKx2QzNe1rl3DoJbBxzJwe3CCcINwPsSPxIvEysTTxOrEv8TK
cAjYcmL8dwPDLUwM+06+NLayz8f3b5xcs6ZWDb8Ohwo3tk1tbrVvyOBI4S/h
K/+uXNOhdgBvSm0HfhReFb6Ta/ThWuEbU7zvVMzvsRbWdGhyDY394/0dlFxX
/yb2k32hfs61PrFX1PSo7bF/f2H7dW1a8nciLyXz2ftr/sMqf0sAxw3XDR++
YjE/vmXtGI1YDX6cb3fgO1coXjNrh998MpkzgTvhHtyLPt8W8U3KtIh3O4S+
YZvRYWJj4kx0m5pli4ivGxfHk+tHPHxlxGzXRtxGLMg3TnzrBF9+TzLf3TP8
A/w48cmGtTnKCRE/9gj7zFzwxY2Eu1auncFHU+uDT/0jm6OGq6am+2d2TZTa
Unu1fZI5HLgcakL7JX+zxLdL8NH9km0lvgMfgh0kPsXWw0HDRS8O2/Vzti/h
meH24exZC/WA7TR238rfalAP2KQ2v8S3HNQ8qF8QHy9fXN/g26u+wncm1zib
h388KfmbGeoL1C9mkytk26a5Ye+Iz56vHWOdEPYJW4dPx7djT5dJrrnx7RM1
OGpb2POZ2T4L34UN3zHiiS8ivrg1u2YE/w1f/EJyDEIsQlxDrNMh5qPGt1+x
v2qTbBOxje3DnmOzZ2T7w+WTnxHbTQ2wWfi3/sU+Dd9GzfOZ7G928H/Y54OL
vxkgHh0v3KuYT3i5dgxJrZaYjtgOzmOvbA4ELgROBW5lcciJAbcu5j/erB1z
EntiM56sHd9iS4hJX4rxx2d/gwAfSny6e3a+wbcS8Hf9s+/1WsT73JMa3/SI
n7cszl/5doRvTE7N/uaC35O/blMcI8+O+PZQyS9Wuyibkxwd8QL7QwxwULG/
bx3+En9O/M2zExMTGxMvP1qbb6e2SM2W2i3v697seI9YlJiO2I4+tWT0hWtt
It4kPnwgu97UL+zDysX1vWNr8zV8i8Q3c/Dt8N2fJdcP4Qfh479OrjceUZs/
59sk6ofUNg8RXrO4xgmGj/88eU1vRJzCWonHqL2iH3sWx6e/166B8y0b8e6i
iF93Ko4RiBWol9yZrbPUkokn0GXiJ74Vo0b7UnaNt1HgfdGV7LWzB8TexCO/
1q6B860b34jwrchM7EdxfP1VxMN9i2vs5I/E45Oy4/Oc/I0D3zq0iPiGHG2X
4nyA+zPftOx6z/za+eiwiEfaJcc4fBtH/vhp7W+e+NaCvPGtwOgN+ek7kR9s
i3/Af2bX8e/Kzk/51ukxya/Kzk/5Fgp+/fLsnJHcEX5wu+I8c17kD+SZ5Mff
Cj9X+dsMclDGICMXhUf/LPaL+/LNEd8ekU+Pyra/31f+ZoNvxch5WcNFoftw
8MzBb3l2bNWCeN/YrP8DvmZaLw==
          "]], Polygon3DBox[CompressedData["
1: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

          "]]}],
       Lighting->Automatic]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0TssQ2EAhuFTquoyq0QM7SLu12jFxmBiMCEmzG1MwqxzzcyMwsxGiEXC
KO73BEFcZs+fSPr2+U6H/5yTpmcK4/lYFEULaiqLIp+o2VeLyu1WxtnBTlXY
XUywh5XsZZ+Sdj+rmGVO1fYAa1inhJul2cC2cBazHOQQRzVlT7DAWS4zzxIX
w7U27RL3uMpjrnNLb/YOy9z3gCmeMMNzPunIyz3ylz96sL95z09+6M5+5204
kzd85Yuu7WdehfPCWbq073nBU9W73yHj3A1nea5tnnGDa9q3V8Jzsxh+41J4
dxXtOc5zktMc4wiHmVO33c5GZphkil+qVez/f/0DXJo6Dw==
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{551, 547, 571, 1122, 570, 597, 1017, 1121, 615, 1027, 1129, 
       634, 1036, 1143, 655, 654, 683, 1178, 682, 709, 1045, 1177, 727, 1055, 
       1185, 747, 1063, 1199, 767, 766, 795, 1234, 794, 820, 1074, 1233, 840, 
       1082, 1241, 860, 859, 886, 1275, 885, 914, 1283, 913, 933, 1101, 1282, 
       952, 1110, 1297, 971, 970, 996}], 
      Line3DBox[{554, 549, 574, 1016, 1123, 599, 1019, 1131, 618, 1029, 1146, 
       637, 1038, 1159, 658, 660, 686, 1044, 1179, 711, 1047, 1187, 730, 1056,
        1201, 750, 1065, 1215, 770, 772, 798, 1072, 1235, 822, 1076, 1243, 
       843, 1083, 1256, 863, 865, 889, 1277, 891, 916, 1094, 1285, 935, 1103, 
       1299, 955, 1112, 1313, 974, 976, 999}], 
      Line3DBox[{555, 552, 576, 1125, 581, 601, 1021, 1135, 619, 1031, 1149, 
       638, 1039, 1162, 661, 666, 688, 1181, 693, 713, 1049, 1191, 732, 1058, 
       1205, 751, 1067, 1218, 773, 778, 800, 1237, 805, 824, 1247, 828, 845, 
       1085, 1260, 866, 870, 892, 1278, 897, 918, 1289, 921, 937, 1303, 941, 
       956, 1114, 1316, 977, 982, 1000}], 
      Line3DBox[{559, 557, 580, 1127, 586, 604, 1023, 1137, 622, 1032, 1151, 
       642, 1041, 1165, 665, 671, 692, 1183, 698, 716, 1051, 1193, 735, 1059, 
       1207, 754, 1069, 1221, 777, 783, 804, 1073, 1238, 827, 1079, 1249, 848,
        1087, 1262, 869, 875, 896, 1280, 902, 920, 1292, 925, 940, 1106, 1305,
        959, 1116, 1318, 981, 987, 1004}], 
      Line3DBox[{6, 17, 241, 28, 260, 39, 281, 50, 302, 61, 72, 325, 83, 344, 
       94, 365, 105, 386, 116, 127, 409, 138, 428, 149, 449, 160, 171, 472, 
       182, 491, 193, 512, 204, 533, 215, 226}], 
      Line3DBox[{560, 561, 582, 1128, 592, 605, 1141, 611, 623, 1034, 1155, 
       643, 1043, 1168, 667, 677, 694, 1184, 704, 717, 1197, 723, 736, 1061, 
       1211, 755, 1071, 1224, 779, 789, 806, 1240, 815, 829, 1253, 836, 849, 
       1089, 1266, 871, 880, 898, 1281, 908, 922, 1295, 929, 942, 1309, 948, 
       960, 1118, 1322, 983, 992, 1005}], 
      Line3DBox[{562, 572, 584, 1130, 1018, 606, 616, 1144, 625, 635, 1157, 
       645, 656, 1170, 669, 684, 696, 1186, 1046, 718, 728, 1200, 738, 748, 
       1213, 757, 768, 1226, 781, 796, 808, 1242, 1075, 830, 841, 1255, 850, 
       861, 1268, 873, 887, 900, 1284, 1093, 923, 1298, 1102, 943, 953, 1311, 
       961, 972, 1324, 985, 997, 1007}], 
      Line3DBox[{564, 578, 588, 602, 1134, 609, 620, 1148, 628, 640, 1161, 
       647, 663, 1172, 673, 690, 700, 714, 1190, 721, 733, 1204, 741, 752, 
       1217, 759, 775, 1228, 785, 802, 811, 825, 1246, 833, 846, 1259, 853, 
       867, 1270, 877, 894, 904, 1288, 1096, 927, 938, 1302, 946, 957, 1315, 
       964, 979, 1326, 989, 1002, 1009}], 
      Line3DBox[{566, 583, 591, 1136, 1022, 610, 624, 1150, 630, 644, 1163, 
       649, 668, 1173, 676, 695, 703, 1192, 1050, 722, 737, 1206, 743, 756, 
       1219, 761, 780, 1229, 788, 807, 814, 1248, 1078, 835, 1261, 1086, 855, 
       872, 1271, 879, 899, 907, 1290, 1097, 928, 1304, 1105, 947, 1317, 1115,
        966, 984, 1327, 991, 1006, 1012}], 
      Line3DBox[{568, 590, 594, 1140, 1025, 613, 629, 1154, 632, 648, 1167, 
       651, 675, 1175, 679, 702, 706, 1196, 1053, 725, 742, 1210, 745, 760, 
       1223, 763, 787, 1231, 791, 813, 817, 834, 1252, 838, 854, 1265, 857, 
       878, 1273, 882, 906, 910, 1294, 1099, 931, 1308, 1108, 950, 965, 1321, 
       968, 990, 1329, 994, 1011, 1014}], 
      Line3DBox[{569, 595, 565, 1142, 1026, 550, 1156, 1035, 596, 652, 1169, 
       614, 680, 1176, 633, 707, 653, 1198, 1054, 681, 1212, 1062, 708, 764, 
       1225, 726, 792, 1232, 746, 818, 765, 1254, 1081, 793, 1267, 1090, 819, 
       883, 1274, 839, 911, 858, 1296, 1100, 884, 1310, 1109, 912, 1323, 1119,
        932, 995, 1330, 951, 1015, 969}], 
      Line3DBox[{998, 975, 973, 1312, 1111, 954, 936, 1300, 934, 917, 1286, 
       915, 890, 1276, 888, 864, 862, 844, 1257, 842, 823, 1244, 821, 799, 
       1236, 797, 771, 769, 1214, 1064, 749, 731, 1202, 729, 712, 1188, 710, 
       687, 1180, 685, 659, 657, 1158, 1037, 636, 1145, 1028, 617, 600, 1132, 
       598, 575, 1124, 573, 548, 553}], 
      Line3DBox[{1003, 986, 980, 962, 1319, 958, 944, 1306, 939, 924, 1291, 
       919, 901, 1279, 895, 874, 868, 851, 1263, 847, 831, 1250, 826, 809, 
       1239, 803, 782, 776, 1220, 1068, 753, 739, 1208, 734, 719, 1194, 715, 
       697, 1182, 691, 670, 664, 1164, 1040, 641, 626, 1152, 621, 607, 1138, 
       603, 585, 1126, 579, 556, 558}], 
      Line3DBox[{1008, 1001, 988, 1325, 978, 963, 1113, 1314, 945, 1104, 1301,
        926, 1095, 1287, 903, 893, 876, 1091, 1269, 852, 1084, 1258, 832, 
       1077, 1245, 810, 801, 784, 1227, 774, 758, 1066, 1216, 740, 1057, 1203,
        720, 1048, 1189, 699, 689, 672, 1171, 662, 646, 1160, 639, 627, 1030, 
       1147, 608, 1020, 1133, 587, 577, 563}], 
      Line3DBox[{1013, 1010, 993, 1120, 1328, 967, 1117, 1320, 949, 1107, 
       1307, 930, 1098, 1293, 909, 905, 881, 1092, 1272, 856, 1088, 1264, 837,
        1080, 1251, 816, 812, 790, 1230, 786, 762, 1070, 1222, 744, 1060, 
       1209, 724, 1052, 1195, 705, 701, 678, 1174, 674, 650, 1042, 1166, 631, 
       1033, 1153, 612, 1024, 1139, 593, 589, 567}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{243, 1122, 232, 233, 1124, 234, 1123, 235, 1125, 236, 237, 
       1126, 1127, 238, 239, 1128, 240, 241, 1130, 245, 246, 1133, 249, 1134, 
       250, 1136, 253, 254, 1139, 1140, 257, 258, 1142, 261, 262}], 
      Line3DBox[{264, 242, 1121, 244, 1132, 247, 1131, 248, 251, 1135, 252, 
       1138, 255, 1137, 256, 1141, 259, 260, 266, 1144, 267, 1147, 270, 1148, 
       271, 274, 1150, 275, 1153, 278, 1154, 279, 1156, 282, 283}], 
      Line3DBox[{285, 263, 1129, 265, 268, 1145, 1146, 269, 272, 1149, 273, 
       1152, 276, 1151, 277, 280, 1155, 281, 287, 1157, 288, 291, 1160, 1161, 
       292, 295, 1163, 296, 1166, 299, 1167, 300, 303, 1169, 304}], 
      Line3DBox[{305, 284, 1143, 286, 289, 1158, 1159, 290, 293, 1162, 294, 
       297, 1164, 1165, 298, 301, 1168, 302, 306, 1170, 307, 308, 1171, 1172, 
       309, 310, 1173, 311, 312, 1174, 1175, 313, 314, 1176, 315}], 
      Line3DBox[{327, 1178, 316, 317, 1180, 318, 1179, 319, 1181, 320, 321, 
       1182, 1183, 322, 323, 1184, 324, 325, 1186, 329, 330, 1189, 333, 1190, 
       334, 1192, 337, 338, 1195, 1196, 341, 342, 1198, 345, 346}], 
      Line3DBox[{348, 326, 1177, 328, 1188, 331, 1187, 332, 335, 1191, 336, 
       1194, 339, 1193, 340, 1197, 343, 344, 350, 1200, 351, 1203, 354, 1204, 
       355, 358, 1206, 359, 1209, 362, 1210, 363, 1212, 366, 367}], 
      Line3DBox[{369, 347, 1185, 349, 1202, 352, 1201, 353, 356, 1205, 357, 
       1208, 360, 1207, 361, 364, 1211, 365, 371, 1213, 372, 1216, 375, 1217, 
       376, 379, 1219, 380, 1222, 383, 1223, 384, 387, 1225, 388}], 
      Line3DBox[{389, 368, 1199, 370, 373, 1214, 1215, 374, 377, 1218, 378, 
       381, 1220, 1221, 382, 385, 1224, 386, 390, 1226, 391, 392, 1227, 1228, 
       393, 394, 1229, 395, 396, 1230, 1231, 397, 398, 1232, 399}], 
      Line3DBox[{411, 1234, 400, 401, 1236, 402, 1235, 403, 1237, 404, 405, 
       1239, 406, 1238, 407, 1240, 408, 409, 1242, 413, 414, 1245, 417, 1246, 
       418, 1248, 421, 422, 1251, 425, 1252, 426, 1254, 429, 430}], 
      Line3DBox[{432, 410, 1233, 412, 1244, 415, 1243, 416, 1247, 419, 420, 
       1250, 423, 1249, 424, 1253, 427, 428, 434, 1255, 435, 1258, 438, 1259, 
       439, 1261, 442, 443, 1264, 446, 1265, 447, 1267, 450, 451}], 
      Line3DBox[{452, 431, 1241, 433, 1257, 436, 1256, 437, 440, 1260, 441, 
       1263, 444, 1262, 445, 448, 1266, 449, 453, 1268, 454, 1269, 455, 1270, 
       456, 457, 1271, 458, 1272, 459, 1273, 460, 461, 1274, 462}], 
      Line3DBox[{474, 1275, 463, 464, 1276, 1277, 465, 466, 1278, 467, 468, 
       1279, 1280, 469, 470, 1281, 471, 472, 1284, 476, 477, 1287, 1288, 480, 
       481, 1290, 484, 485, 1293, 1294, 488, 489, 1296, 492, 493}], 
      Line3DBox[{495, 1283, 473, 475, 1286, 478, 1285, 479, 1289, 482, 483, 
       1291, 1292, 486, 487, 1295, 490, 491, 1298, 497, 498, 1301, 501, 1302, 
       502, 1304, 505, 506, 1307, 1308, 509, 510, 1310, 513, 514}], 
      Line3DBox[{516, 494, 1282, 496, 1300, 499, 1299, 500, 1303, 503, 504, 
       1306, 507, 1305, 508, 1309, 511, 512, 518, 1311, 519, 1314, 522, 1315, 
       523, 1317, 526, 527, 1320, 530, 1321, 531, 1323, 534, 535}], 
      Line3DBox[{536, 515, 1297, 517, 520, 1312, 1313, 521, 524, 1316, 525, 
       1319, 528, 1318, 529, 532, 1322, 533, 537, 1324, 538, 539, 1325, 1326, 
       540, 541, 1327, 542, 1328, 543, 1329, 544, 545, 1330, 546}]}, {}, {}}},
   
   VertexNormals->CompressedData["
1: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
/w+6Cn3C
    "]],
  Axes->True,
  AxesLabel->{
    FormBox["\"log(c)\"", TraditionalForm], 
    FormBox["\[Gamma]", TraditionalForm], 
    FormBox["Efficiency", TraditionalForm]},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotLabel->FormBox[
   "\"SVM Linear Hard Log c-\[Gamma]-Efficiency\"", TraditionalForm],
  PlotRange->{{-3., 2.}, {1., 6.}, {0.982, 1.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6703759361233892`*^9, 3.67067764526409*^9, 3.6709312154572678`*^9, 
   3.670931274230645*^9, 3.6709313594065742`*^9, 3.6709314462857533`*^9, {
   3.6709315323791523`*^9, 3.670931579621949*^9}, 3.670931727027594*^9, 
   3.670931855930511*^9, 3.670932002863783*^9, 3.670932043691493*^9, {
   3.6709320817556334`*^9, 3.670932092729817*^9}, 3.67093213956325*^9, 
   3.670932184430917*^9, 3.670932321838228*^9, {3.6709324866350594`*^9, 
   3.670932552932519*^9}, 3.670932672382707*^9, 3.6709327650856447`*^9, {
   3.670933197895687*^9, 3.6709332254231157`*^9}, {3.6709336959536867`*^9, 
   3.670933705927161*^9}, 3.670939379753831*^9, 3.6709394173146763`*^9, 
   3.670939701547813*^9, {3.670939907118675*^9, 3.670939922320163*^9}, 
   3.671540978233749*^9, 3.671541966565967*^9, 3.671542054424143*^9, 
   3.672570344211276*^9, 3.672571593092313*^9, 3.672643896121169*^9, 
   3.6726441925908127`*^9, 
   3.672644358004076*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
vS6Q\
\>"]],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
   "], {{
     {RGBColor[0, 1, 0], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
r8Kfin5mxa7KO1RX1NzfRfv/AZ2wUCM=
          "]], Polygon3DBox[CompressedData["
1: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
CbkJOWAfXV+IDgpfLbxpcQ5HLncTPio7R2Q8Oc1mxTka+kFO1LM4ZxkT8/Uo
5gBvIJavzA2+LzxW+BLhDYo5wBG1c0K4QZ5paOgzz0qORq4GBwRRQU5MbnyZ
4PrFv+G36Od62ZzYZbVzTriyFmrLqb1SnG/C6Z0S863F2dDv166cDw0pjnmJ
fbvo2uXxPOwVPGPzOCOcFbilZrGPl9bOKZeNGIJYIqsVtV81xy/Je856WC/c
JxzUStn7c1Po33r4Io39I/mZW8Rc+HZ8fI51XF6bA1whe01co09uDT8FfwCn
2DL7zPwvfwiMzqK72IelYr+GhT1YOptvha8bHPJmsVby/g5qf/NOa+cwg4g9
1M7MztNHqg1Uu6UyR3FiNl8B3zA2MMHunNry87LngOOA22Du7bJ1CZ3C9pBv
jauc41yQnTORO5GjnR/PxNpYY7OwD5NDP+BC0M8pwhdW5haOy875yPXOiUaf
vJ9caljkD+PjfnDecN83cI+wfz+oddH1rmE/yc2wieA5YQ/Q7zVCZ9ALuOnV
o9Enz1877M3U8A+bFD8jzzoo9BkdRpfxJx3DHo2u/Y55192zdZ8z0DXbxmGv
2JPuoRfoCv6qS+gI1+gzHh+G7PSYv2vIusXcH8V5xR5slu3/xoW93bDYh00K
+7iR+ltlyxiDL+T8XlxbH+Fe0G98LT77ufBf+KMBuvZTsv8ZVFsHG+IMoffw
UKtGQzeRI2PPu4QPeyb8xZCI/9cN+3dl7fPTKuzHzbU5Fri2DbPfFe8MW75j
9lpZM7aKMYzlfLfOXgNrOTcw8QNc8qHCfyXzUeg6On96Nuf2am0ODy4O/g2u
4daQN8e2cKaL+RI4FLgUOIwLk6/BpXSvPBYO52LsVDK3Q8xFnNUU31PM4a9R
m/OB24fzuJTfJHMh9NvX5oi4xvnjLN+sNkD9g9QOVDs4G9PH9vP8XCNe/Eat
k+bpXByfn0zcq3ZeMqe0iuZvV5lrgjNaOeLFpYpzol6VOSf4ANbSrjZmTSPV
rkmuM90dDf6O9SCjJrJe7XyGXAyOCK4IjqpFcf6yIbqua1cU839wu3C8NySv
6eCwOaydPWLubUNOjeCa4pyO3A4ObbWYH25tiNr5ye+M98E7uCqeeWTsMft6
rdp1yXNtUDu/HRtjWSt7wG/gLJ+prTPozo/CTwmPEt6qmGOcyVqq4B6zY4sJ
apdhq7NtFTZraDbHBFcCZ7JzMd9xb+UaHnwQnO8HtXUQXWQOfjc85oZDfrc2
5wq3DMc8t7Y+Y8vhxODGqJlcn23D4YzhirHtJ8UzDY25l9S1j2vb70vDxmJr
4VaR9dbvti/mMW9Ruz17bu7R0OAaA7UGOMabkv0psQExLbEt8d4jtfUXLhZO
Dm4OzvbIeD58DT7pmOx2dDwzssOzOb6jQ3Zc+JvZmuOX4jmZmzNyRPb62PuX
JP+9mM+DGxwTcuKp++L9wf3CiRCfXif8H/W/VZsR8esW6u+ZLWMMsSw2grPG
mdtf/X3Vrq/MN/9QfD55HmK0hXEGOYtwGE9EjDM88hniB2qAA8O+dijmiJZO
5qjgjuCo2qq9nM1d0V8yuQbItfHZnB1cXesGc0JLEBdV5oqe5neV65PtJZsu
/Kja3rrXPpz9BnNNT7IfxZzel7U5PLg+aozUGuFI9yrm5L6urbPoLhzfD7U5
bri/NYWba/yLwgcUP9PftTkunpWaILXBWcK7Sr6H2u7FPN5D2ZzXv+hOZS4M
+9G1dr4Ld0L8t25tGwIXij2lNgon3qzYvhErEjM2KbZ554ZdxdZic7qE/NLk
mnCn0N/lwsZj6+FU4Fbm6xk+rLzf8MfUGKk1kr+upP4v2bVXarCLs/1Dx9qc
Ntw7c3Wubd+YE46v1v/plbk/7O9K4T/g8kfEWYcbXSbe1/OV658tGsxRtoz3
e2CxjqArcOZvZ3O6K5BHVuZ638/mob9S+zqbs4a7pob5jvDs7FoMfHDnBtc4
V07mRKl9UhPt2uC68LzQQfTu1Wx+Hv2apfaG2pvZY1sl10w/iDGM/Tyb21+Y
zY3PiedlTsZRa6a+vCP7W6zT4+Masu+za9HfZdemmX+B+p+qfYJdzt5/zhi1
bDgTzh41eXSfM7B/cQ2ZvWRPp2j8fdm6iE6uEHzw28KfqH0c8/NuqVlRu2IP
kTHm/bg39YAFlZ/hp+w+177N3kP28tN4XmrO1J5fF/5MeE52zeC9eFfUF6hH
z4/fDwl9bit8anJ8Qa0IPo14Av9HLYkazVnJHBxcHDnmsck1mCYhX6KYj6P2
QQ2kUTFft1xtDo/aDHwRtfIOlfkwGtwYvBEyOO2vK3PScNPUuOC64bx/y+bc
f1R/9cpc/PO898o1d75PgM+jFkRN6O/sejHffqyotklyDYRaCDWoLZL5LJ6f
mtKRwjuo9UmuKx2QzNe1rl3DoJbBxzJwe3CCcINwPsSPxIvEysTTxOrEv8TK
cAjYcmL8dwPDLUwM+06+NLayz8f3b5xcs6ZWDb8Ohwo3tk1tbrVvyOBI4S/h
K/+uXNOhdgBvSm0HfhReFb6Ta/ThWuEbU7zvVMzvsRbWdGhyDY394/0dlFxX
/yb2k32hfs61PrFX1PSo7bF/f2H7dW1a8nciLyXz2ftr/sMqf0sAxw3XDR++
YjE/vmXtGI1YDX6cb3fgO1coXjNrh998MpkzgTvhHtyLPt8W8U3KtIh3O4S+
YZvRYWJj4kx0m5pli4ivGxfHk+tHPHxlxGzXRtxGLMg3TnzrBF9+TzLf3TP8
A/w48cmGtTnKCRE/9gj7zFzwxY2Eu1auncFHU+uDT/0jm6OGq6am+2d2TZTa
Unu1fZI5HLgcakL7JX+zxLdL8NH9km0lvgMfgh0kPsXWw0HDRS8O2/Vzti/h
meH24exZC/WA7TR238rfalAP2KQ2v8S3HNQ8qF8QHy9fXN/g26u+wncm1zib
h388KfmbGeoL1C9mkytk26a5Ye+Iz56vHWOdEPYJW4dPx7djT5dJrrnx7RM1
OGpb2POZ2T4L34UN3zHiiS8ivrg1u2YE/w1f/EJyDEIsQlxDrNMh5qPGt1+x
v2qTbBOxje3DnmOzZ2T7w+WTnxHbTQ2wWfi3/sU+Dd9GzfOZ7G928H/Y54OL
vxkgHh0v3KuYT3i5dgxJrZaYjtgOzmOvbA4ELgROBW5lcciJAbcu5j/erB1z
EntiM56sHd9iS4hJX4rxx2d/gwAfSny6e3a+wbcS8Hf9s+/1WsT73JMa3/SI
n7cszl/5doRvTE7N/uaC35O/blMcI8+O+PZQyS9Wuyibkxwd8QL7QwxwULG/
bx3+En9O/M2zExMTGxMvP1qbb6e2SM2W2i3v697seI9YlJiO2I4+tWT0hWtt
It4kPnwgu97UL+zDysX1vWNr8zV8i8Q3c/Dt8N2fJdcP4Qfh479OrjceUZs/
59sk6ofUNg8RXrO4xgmGj/88eU1vRJzCWonHqL2iH3sWx6e/166B8y0b8e6i
iF93Ko4RiBWol9yZrbPUkokn0GXiJ74Vo0b7UnaNt1HgfdGV7LWzB8TexCO/
1q6B860b34jwrchM7EdxfP1VxMN9i2vs5I/E45Oy4/Oc/I0D3zq0iPiGHG2X
4nyA+zPftOx6z/za+eiwiEfaJcc4fBtH/vhp7W+e+NaCvPGtwOgN+ek7kR9s
i3/Af2bX8e/Kzk/51ukxya/Kzk/5Fgp+/fLsnJHcEX5wu+I8c17kD+SZ5Mff
Cj9X+dsMclDGICMXhUf/LPaL+/LNEd8ekU+Pyra/31f+ZoNvxch5WcNFoftw
8MzBb3l2bNWCeN/YrP8DvmZaLw==
          "]], Polygon3DBox[CompressedData["
1:eJwtlnWYV0UUhn/ce1kBKekFlpburiWFB2mW7lhAGkkRUEoQFkFaShQJaZCS
bpDulJDuRhrE93vm/PE+M983Z25MnJmMbbpHdfNCodAmiA3NEGkoH8FDqIr+
G87ByiAUahUrFMpA+QT9Be390d9Abrwafig0AW8Neh1E4jUmLjXeA7gPldDj
iNtD3aMeC+oTt5CyEV4T+jWGdHgboBP1LJS3ab+jWEhF3B24DSXR4Xz4W+JW
8NwtsBV6w0a9F/8+VOcZp4ntijcGPRZSEbMKduG9Qb+GOsQ1Jy4t3hN4DLXR
U4lbQ/00MadgBPoPG4/ztD+Ah1AIfxpxB/EPQS90C3tegI4HHdCjoDBeEXRR
mIn+By7BOp7bAS8z5R76HyYuLX4EnEUfpIzCq0hMBdiguYBMeBHoj8Cnbzu8
DBpndCyBF07/H/GWoZdCCbzteiZeco0lHETPhWN4KdEpoCVxU/BW452k3wkY
gl6rcYHszEES4nZTrwhjiJtPzDz9H32vwO/Uy9JWC2rDNjhA3Cf0SwYtiDlM
WRevEbEt4Cz6DDTG64FuCumJu641Q704ZSWeUxly2Dc0x/sLvRfqwGT6LiF2
MXyG7kb7a7x31FsR39pz6zQc7xW8hfe0bSfuK/rkpHxB+0s4BQ1pb4BfHyJo
646XzebXh2j0LojG647uBlmJO671ixeNbg9X0Avx61I/YnOvNVCKd5eEqzZm
xSh7wAf6ttQaBm3aAsTkh2s2FhV8twcnEjcXPQdKo3fCIbzU2ttwHJ0OIuAk
fScQl5/yhNXT4xeBovCnrcVrntvzTyELfmY4ozVBWwHKe/htecdw9JeQDW81
tKGeUfNF+w04BkdhlbVdpH4LWtG3H3oA/IsuzvNH4k1GT4JP0fOVY7RvA/cM
PesRtCeuL/7XkIu2SzCbehHKcvQrb3vmACyy8U5DmQs/J1y0+BLUy8BonjcL
/TMUou2y1qatyYZa+56bywZ4UcoZkJq4Edr/eIXQhWGK5/o2x+uI7qL/0NqE
QdTzUr6h/a3n9oL2YIj6B9pWo6Npv4tVVu/SuoM2kB7vP61Rlb7Li8qPe+y5
r6g/h460D1WughBxg2hPRr0nbUNgKHTWfNKcAD+xcgcxMXhF8Ippf8Fvlt/a
4fVE94HsxBXmmcPxVqCnQ0G8rMRlxAtDxwYP7wJeU7zW6LaQCe88/KK1zTOq
QjVbb1p3F6ytMOUz+nag77fKN5APbx9ebbzq6FoQHrhxSYeXCJ1Ea9D2YBu8
wehh8A49STkf7zj6mNab77yJEEb+uIRXWfkBDihfaO/R1tN3+zyr8qTWoHJ5
4OZEc9OF+kvlDuLmUK9G+147N3V+DoS8tKfTfoAExMzz3bkb6OzAq2H5r57O
XfTnkCJwc5UfLys6h+YJrz9eHrwC6LQQX99peShce1j/5rnzvCn0tPzxgXcu
gcWQ2s7NqMDlSuXM/HjplYt8d9ampE8cYp5SvsZbrrxo6zQM1tsZsFtrkbj3
UE9nt/Kv7hTExNHaDdz+Vx7YZnn1sf6b+ibqdYlvC+2UW/iGeMrJgctdu2Cl
zlvIZG2b9b1a8zDXxjul5elOvPd79EgII24ofgrqcfVe2vvpnIKauu9oviG5
cq1yDCTjHc+0tvCGKc8SlxOdB5JqbRIzC5IT9xxvkc5U5ROtPds/ozWPkIu+
ubVu4Qd0daimHG5nUBPqw6Eg9bzaQzDOc3O0De8W+qZyEbqAzU0rnac6H6A9
uihxJYgpCQt0Xtt31Q7cmGnsltm83cO/C7N9d1eZjrcTvUPnh/K/4vGO6kzS
XvfdeGncxto/jqQ+B3+D7mHo21DNclkXvNH6V42FrZcdeE/RT6Cm5htvv85a
9EtYik5qY77Ad2tno/YGz9sI8yzv7/fcXSqCvi/gue5tvssHdaiXJ6YcrPHc
/eUoXgblI7iG7kWZXR4xmWGQzVFuvDTK4fBx4O4DuhcMoJ5QedvOW527gy2H
xqHsiM5M37jafxAEbl3VwotEl9baUM7g3xJT7tB5C6d8d687onyFn1B7lL7f
UubDy6RzAhIpvxA3FW8jegOUwZuhcxnvIvoCVMKbrn2IdxZ9RuOPjm35bLKt
a63vX2E9cTfwryvH0PeQ5+5clZTvYJvn7tC6S2ezb29GXBnKSJ3zdi698t19
6KTygN3Vb3puf6yj/Qr6MlTR/QRvK9419FWYhn6t8wdvFDpGY+i7tbFPY0pb
fGhC30i8GLxpxEzVXvLd2TMCb7z2i+bO7pS6Wz6ynFI2cPdC3Q8fU9+C18B3
9+K2OgMtL/Tx3Dj/xPP2ovdBB9/l581459HnYLzv7pOT8DZrnKC8co7OdOoV
KbvQ3lW5E+rBc2uL1pgoZ9E3Fe/zdW7Q1tnOjUaeW0+dIMp3d9bt9NsNzdFP
7PvLUTZCNzZUf2VnVTc7R3We3tH9C69U4O40MXYHXqk5tzuR7kZ3aV+rfUl9
hmKpL7e8qvxaBX8cfXfJV44hpi9+Drws6GzwHfq03QVz+O7uqjvsMvylMNOe
m4zytn1XddpbQEsYaPssLHB7tDfcs+8qHbhx1Hhe9dw9rCt+L7iP/h+YSNcE

          "]]}],
       Lighting->Automatic]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0TssQ2EAhuFTquoyq0QM7SLu12jFxmBiMCEmzG1MwqxzzcyMwsxGiEXC
KO73BEFcZs+fSPr2+U6H/5yTpmcK4/lYFEULaiqLIp+o2VeLyu1WxtnBTlXY
XUywh5XsZZ+Sdj+rmGVO1fYAa1inhJul2cC2cBazHOQQRzVlT7DAWS4zzxIX
w7U27RL3uMpjrnNLb/YOy9z3gCmeMMNzPunIyz3ylz96sL95z09+6M5+5204
kzd85Yuu7WdehfPCWbq073nBU9W73yHj3A1nea5tnnGDa9q3V8Jzsxh+41J4
dxXtOc5zktMc4wiHmVO33c5GZphkil+qVez/f/0DXJo6Dw==
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{551, 547, 571, 1122, 570, 597, 1017, 1121, 615, 1027, 1129, 
       634, 1036, 1143, 655, 654, 683, 1178, 682, 709, 1045, 1177, 727, 1055, 
       1185, 747, 1063, 1199, 767, 766, 795, 1234, 794, 820, 1074, 1233, 840, 
       1082, 1241, 860, 859, 886, 1275, 885, 914, 1283, 913, 933, 1101, 1282, 
       952, 1110, 1297, 971, 970, 996}], 
      Line3DBox[{554, 549, 574, 1016, 1123, 599, 1019, 1131, 618, 1029, 1146, 
       637, 1038, 1159, 658, 660, 686, 1044, 1179, 711, 1047, 1187, 730, 1056,
        1201, 750, 1065, 1215, 770, 772, 798, 1072, 1235, 822, 1076, 1243, 
       843, 1083, 1256, 863, 865, 889, 1277, 891, 916, 1094, 1285, 935, 1103, 
       1299, 955, 1112, 1313, 974, 976, 999}], 
      Line3DBox[{555, 552, 576, 1125, 581, 601, 1021, 1135, 619, 1031, 1149, 
       638, 1039, 1162, 661, 666, 688, 1181, 693, 713, 1049, 1191, 732, 1058, 
       1205, 751, 1067, 1218, 773, 778, 800, 1237, 805, 824, 1247, 828, 845, 
       1085, 1260, 866, 870, 892, 1278, 897, 918, 1289, 921, 937, 1303, 941, 
       956, 1114, 1316, 977, 982, 1000}], 
      Line3DBox[{559, 557, 580, 1127, 586, 604, 1023, 1137, 622, 1032, 1151, 
       642, 1041, 1165, 665, 671, 692, 1183, 698, 716, 1051, 1193, 735, 1059, 
       1207, 754, 1069, 1221, 777, 783, 804, 1073, 1238, 827, 1079, 1249, 848,
        1087, 1262, 869, 875, 896, 1280, 902, 920, 1292, 925, 940, 1106, 1305,
        959, 1116, 1318, 981, 987, 1004}], 
      Line3DBox[{6, 17, 241, 28, 260, 39, 281, 50, 302, 61, 72, 325, 83, 344, 
       94, 365, 105, 386, 116, 127, 409, 138, 428, 149, 449, 160, 171, 472, 
       182, 491, 193, 512, 204, 533, 215, 226}], 
      Line3DBox[{560, 561, 582, 1128, 592, 605, 1141, 611, 623, 1034, 1155, 
       643, 1043, 1168, 667, 677, 694, 1184, 704, 717, 1197, 723, 736, 1061, 
       1211, 755, 1071, 1224, 779, 789, 806, 1240, 815, 829, 1253, 836, 849, 
       1089, 1266, 871, 880, 898, 1281, 908, 922, 1295, 929, 942, 1309, 948, 
       960, 1118, 1322, 983, 992, 1005}], 
      Line3DBox[{562, 572, 584, 1130, 1018, 606, 616, 1144, 625, 635, 1157, 
       645, 656, 1170, 669, 684, 696, 1186, 1046, 718, 728, 1200, 738, 748, 
       1213, 757, 768, 1226, 781, 796, 808, 1242, 1075, 830, 841, 1255, 850, 
       861, 1268, 873, 887, 900, 1284, 1093, 923, 1298, 1102, 943, 953, 1311, 
       961, 972, 1324, 985, 997, 1007}], 
      Line3DBox[{564, 578, 588, 602, 1134, 609, 620, 1148, 628, 640, 1161, 
       647, 663, 1172, 673, 690, 700, 714, 1190, 721, 733, 1204, 741, 752, 
       1217, 759, 775, 1228, 785, 802, 811, 825, 1246, 833, 846, 1259, 853, 
       867, 1270, 877, 894, 904, 1288, 1096, 927, 938, 1302, 946, 957, 1315, 
       964, 979, 1326, 989, 1002, 1009}], 
      Line3DBox[{566, 583, 591, 1136, 1022, 610, 624, 1150, 630, 644, 1163, 
       649, 668, 1173, 676, 695, 703, 1192, 1050, 722, 737, 1206, 743, 756, 
       1219, 761, 780, 1229, 788, 807, 814, 1248, 1078, 835, 1261, 1086, 855, 
       872, 1271, 879, 899, 907, 1290, 1097, 928, 1304, 1105, 947, 1317, 1115,
        966, 984, 1327, 991, 1006, 1012}], 
      Line3DBox[{568, 590, 594, 1140, 1025, 613, 629, 1154, 632, 648, 1167, 
       651, 675, 1175, 679, 702, 706, 1196, 1053, 725, 742, 1210, 745, 760, 
       1223, 763, 787, 1231, 791, 813, 817, 834, 1252, 838, 854, 1265, 857, 
       878, 1273, 882, 906, 910, 1294, 1099, 931, 1308, 1108, 950, 965, 1321, 
       968, 990, 1329, 994, 1011, 1014}], 
      Line3DBox[{569, 595, 565, 1142, 1026, 550, 1156, 1035, 596, 652, 1169, 
       614, 680, 1176, 633, 707, 653, 1198, 1054, 681, 1212, 1062, 708, 764, 
       1225, 726, 792, 1232, 746, 818, 765, 1254, 1081, 793, 1267, 1090, 819, 
       883, 1274, 839, 911, 858, 1296, 1100, 884, 1310, 1109, 912, 1323, 1119,
        932, 995, 1330, 951, 1015, 969}], 
      Line3DBox[{998, 975, 973, 1312, 1111, 954, 936, 1300, 934, 917, 1286, 
       915, 890, 1276, 888, 864, 862, 844, 1257, 842, 823, 1244, 821, 799, 
       1236, 797, 771, 769, 1214, 1064, 749, 731, 1202, 729, 712, 1188, 710, 
       687, 1180, 685, 659, 657, 1158, 1037, 636, 1145, 1028, 617, 600, 1132, 
       598, 575, 1124, 573, 548, 553}], 
      Line3DBox[{1003, 986, 980, 962, 1319, 958, 944, 1306, 939, 924, 1291, 
       919, 901, 1279, 895, 874, 868, 851, 1263, 847, 831, 1250, 826, 809, 
       1239, 803, 782, 776, 1220, 1068, 753, 739, 1208, 734, 719, 1194, 715, 
       697, 1182, 691, 670, 664, 1164, 1040, 641, 626, 1152, 621, 607, 1138, 
       603, 585, 1126, 579, 556, 558}], 
      Line3DBox[{1008, 1001, 988, 1325, 978, 963, 1113, 1314, 945, 1104, 1301,
        926, 1095, 1287, 903, 893, 876, 1091, 1269, 852, 1084, 1258, 832, 
       1077, 1245, 810, 801, 784, 1227, 774, 758, 1066, 1216, 740, 1057, 1203,
        720, 1048, 1189, 699, 689, 672, 1171, 662, 646, 1160, 639, 627, 1030, 
       1147, 608, 1020, 1133, 587, 577, 563}], 
      Line3DBox[{1013, 1010, 993, 1120, 1328, 967, 1117, 1320, 949, 1107, 
       1307, 930, 1098, 1293, 909, 905, 881, 1092, 1272, 856, 1088, 1264, 837,
        1080, 1251, 816, 812, 790, 1230, 786, 762, 1070, 1222, 744, 1060, 
       1209, 724, 1052, 1195, 705, 701, 678, 1174, 674, 650, 1042, 1166, 631, 
       1033, 1153, 612, 1024, 1139, 593, 589, 567}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{243, 1122, 232, 233, 1124, 234, 1123, 235, 1125, 236, 237, 
       1126, 1127, 238, 239, 1128, 240, 241, 1130, 245, 246, 1133, 249, 1134, 
       250, 1136, 253, 254, 1139, 1140, 257, 258, 1142, 261, 262}], 
      Line3DBox[{264, 242, 1121, 244, 1132, 247, 1131, 248, 251, 1135, 252, 
       1138, 255, 1137, 256, 1141, 259, 260, 266, 1144, 267, 1147, 270, 1148, 
       271, 274, 1150, 275, 1153, 278, 1154, 279, 1156, 282, 283}], 
      Line3DBox[{285, 263, 1129, 265, 268, 1145, 1146, 269, 272, 1149, 273, 
       1152, 276, 1151, 277, 280, 1155, 281, 287, 1157, 288, 291, 1160, 1161, 
       292, 295, 1163, 296, 1166, 299, 1167, 300, 303, 1169, 304}], 
      Line3DBox[{305, 284, 1143, 286, 289, 1158, 1159, 290, 293, 1162, 294, 
       297, 1164, 1165, 298, 301, 1168, 302, 306, 1170, 307, 308, 1171, 1172, 
       309, 310, 1173, 311, 312, 1174, 1175, 313, 314, 1176, 315}], 
      Line3DBox[{327, 1178, 316, 317, 1180, 318, 1179, 319, 1181, 320, 321, 
       1182, 1183, 322, 323, 1184, 324, 325, 1186, 329, 330, 1189, 333, 1190, 
       334, 1192, 337, 338, 1195, 1196, 341, 342, 1198, 345, 346}], 
      Line3DBox[{348, 326, 1177, 328, 1188, 331, 1187, 332, 335, 1191, 336, 
       1194, 339, 1193, 340, 1197, 343, 344, 350, 1200, 351, 1203, 354, 1204, 
       355, 358, 1206, 359, 1209, 362, 1210, 363, 1212, 366, 367}], 
      Line3DBox[{369, 347, 1185, 349, 1202, 352, 1201, 353, 356, 1205, 357, 
       1208, 360, 1207, 361, 364, 1211, 365, 371, 1213, 372, 1216, 375, 1217, 
       376, 379, 1219, 380, 1222, 383, 1223, 384, 387, 1225, 388}], 
      Line3DBox[{389, 368, 1199, 370, 373, 1214, 1215, 374, 377, 1218, 378, 
       381, 1220, 1221, 382, 385, 1224, 386, 390, 1226, 391, 392, 1227, 1228, 
       393, 394, 1229, 395, 396, 1230, 1231, 397, 398, 1232, 399}], 
      Line3DBox[{411, 1234, 400, 401, 1236, 402, 1235, 403, 1237, 404, 405, 
       1239, 406, 1238, 407, 1240, 408, 409, 1242, 413, 414, 1245, 417, 1246, 
       418, 1248, 421, 422, 1251, 425, 1252, 426, 1254, 429, 430}], 
      Line3DBox[{432, 410, 1233, 412, 1244, 415, 1243, 416, 1247, 419, 420, 
       1250, 423, 1249, 424, 1253, 427, 428, 434, 1255, 435, 1258, 438, 1259, 
       439, 1261, 442, 443, 1264, 446, 1265, 447, 1267, 450, 451}], 
      Line3DBox[{452, 431, 1241, 433, 1257, 436, 1256, 437, 440, 1260, 441, 
       1263, 444, 1262, 445, 448, 1266, 449, 453, 1268, 454, 1269, 455, 1270, 
       456, 457, 1271, 458, 1272, 459, 1273, 460, 461, 1274, 462}], 
      Line3DBox[{474, 1275, 463, 464, 1276, 1277, 465, 466, 1278, 467, 468, 
       1279, 1280, 469, 470, 1281, 471, 472, 1284, 476, 477, 1287, 1288, 480, 
       481, 1290, 484, 485, 1293, 1294, 488, 489, 1296, 492, 493}], 
      Line3DBox[{495, 1283, 473, 475, 1286, 478, 1285, 479, 1289, 482, 483, 
       1291, 1292, 486, 487, 1295, 490, 491, 1298, 497, 498, 1301, 501, 1302, 
       502, 1304, 505, 506, 1307, 1308, 509, 510, 1310, 513, 514}], 
      Line3DBox[{516, 494, 1282, 496, 1300, 499, 1299, 500, 1303, 503, 504, 
       1306, 507, 1305, 508, 1309, 511, 512, 518, 1311, 519, 1314, 522, 1315, 
       523, 1317, 526, 527, 1320, 530, 1321, 531, 1323, 534, 535}], 
      Line3DBox[{536, 515, 1297, 517, 520, 1312, 1313, 521, 524, 1316, 525, 
       1319, 528, 1318, 529, 532, 1322, 533, 537, 1324, 538, 539, 1325, 1326, 
       540, 541, 1327, 542, 1328, 543, 1329, 544, 545, 1330, 546}]}, {}, {}}},
   
   VertexNormals->CompressedData["
1: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
2rer9I9KcsfCU5UBBivOAZTUD/xeiLX/CT/ErE4=
    "]],
  Axes->True,
  AxesLabel->{
    FormBox["\"log(c)\"", TraditionalForm], 
    FormBox["\[Gamma]", TraditionalForm], 
    FormBox["Efficiency", TraditionalForm]},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotLabel->FormBox[
   "\"SVM Linear Soft Log c-\[Gamma]-Efficiency\"", TraditionalForm],
  PlotRange->{{-3., 2.}, {1., 6.}, {0., 0.969289827255}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6703759361233892`*^9, 3.67067764526409*^9, 3.6709312154572678`*^9, 
   3.670931274230645*^9, 3.6709313594065742`*^9, 3.6709314462857533`*^9, {
   3.6709315323791523`*^9, 3.670931579621949*^9}, 3.670931727027594*^9, 
   3.670931855930511*^9, 3.670932002863783*^9, 3.670932043691493*^9, {
   3.6709320817556334`*^9, 3.670932092729817*^9}, 3.67093213956325*^9, 
   3.670932184430917*^9, 3.670932321838228*^9, {3.6709324866350594`*^9, 
   3.670932552932519*^9}, 3.670932672382707*^9, 3.6709327650856447`*^9, {
   3.670933197895687*^9, 3.6709332254231157`*^9}, {3.6709336959536867`*^9, 
   3.670933705927161*^9}, 3.670939379753831*^9, 3.6709394173146763`*^9, 
   3.670939701547813*^9, {3.670939907118675*^9, 3.670939922320163*^9}, 
   3.671540978233749*^9, 3.671541966565967*^9, 3.671542054424143*^9, 
   3.672570344211276*^9, 3.672571593092313*^9, 3.672643896121169*^9, 
   3.6726441925908127`*^9, 3.672644358036963*^9}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
POIL8QH/McLrrOEP0p5lpt8vfVb+VlU3xvttk9F+wGfZ0ep5Ce0J5D1/QZ7G
aB/uVRD37AZxFw/6/dtr+W/4QOYN0Hg9v8Pnl9DT86N+D/ZZfdZdJ+s7SyA/
J/bzen4E+zeFv3bMkc+p6Xfqtf5izdIOm9hOVf/ot+M98neyXvkKkq+x+34j
cbzPt85eysv6Sydr3iXvu9nKr5rt9+H0Wj9e8apML61lR0j9S9utfcpqP++d
UF7Y+a1ovyrkaeQ/nCztswrJN3E9Ly1nF6n5qt/a+dSJfh9Orx1v4SXpx7fY
hp1S/032vifov5F8lveUL1b7uwEu9D/lUtmP8TK7V8XvduuXSWpeugHpn4/2
I8+GuPDv6vly3v4dum9LJH8D3Jcq/LvoSVl3w/uIB9j3bpV9ET3sdvW8b7Hj
HbpS5mM/QfI1tneqzO/h/ct1toDLxim8fznJz7xejreb6ffmVmuH1KfankBe
2PO6wTLesJ6NfNvD8jlF+52FH7/2mrTDRnaRmg+7rd0evlHW45Yj+Wb+jtqP
uR7hWT5N1e/Q/mih5/Pdcr/zOqbXJz3WzvNVvLUhPfN8/HNSn7UQF/7Sz9Ea
dN8W/uqjUn4lO0nltbusv4p3SXwx3Fdbdvttf6z0WWn9OC2qP8L9yAO232as
itNOawfNsxHJ14h92XWLnzFU/r3cyi+L8sbP7pDyn1v57gNk3yDmSfKZ42Q/
1Va2VOmz1tr/V0r/LrZF2WeDtf9zyv6dkEfGSVR3hvyNfNaLuv9htnpffGbv
+3dx4xLxs2qs5NnCrlf6rLN+bD9e4uuRfLO1/9PNElhm9TmiIuNhK0uo+W21
1cc8L5DH7L9G+9DFeLs/knnsbrZP6dNh4+c/H5Nxu5kdqPD1Nn7uX6LnPWiH
PH99sn7u9gyWf6+w443dRy/45/2znCfRfnbBP+YhPT8/pe77pY3DQy6T/J12
3Wfw0f8nn9MeNm+kBN6xcRi/D93hIJ7tc4r3m9fYI1F+HuJ19g+R/TX+wlfI
J7mJWxDPwi+zv6vjCsSz8MsR82X8oH3uJWo/fqPFBxRetveNlRd+MTiM2zz/
8P6Y/fXCPtu+I+dbw/+41eext6R/MX+Wvxz1gcD5ZAT/QNVRt8J4FvHwsbJP
D4xnEQ+fq+eiG403b+PqqlHy7/l2XCtK8v2C7iv47ztMvqeQfwX/+C0y/rfA
uBVxpee3brivXOAPXSOfL7zvHvfXmZ8agdct/u5B8m/T71xjIy7169HmJ8n7
o3rccYfKvz+w9jTzGxAvUecVNFq8pOOEGf7Y+wp7xvKIeDD4f41W+jBz312g
38bIE+celF2dVPtxkfWLmVeh/nlrh8P0886Mnj8Ddf/oR/j9EVBfM/q02PgE
++WFf+f9Us4z+DyBAfaDqJ+nrPwVrbOEHfR6Ep9LUCPOVahb/KKs/Lv9K+ST
/Piovqn99TgzdrtErbORfIk6n6ExHhd2i8eb+fjx0j7b2GCl5xrLf+sw+Z7F
8sR5DkJPg2v9X2DG/mNiz23Ix/MIPw7cLtf5+L4t1r9gv7/nx7PU/LbO+tHw
wHMSBqz9rxkh/14R2AHK14jzIpx/dd/Aeis/LoqfZ9Q8s9bKv/m+nOcxT9La
4Ug13mXWnrHyJeo8ikaL6/2l6yx/LnreIU+THW9R2eEz65cRsfIu/p9TfcMb
An1uir6bsT6QhzgHw5sfFit9llu/fxy9T+F4XV9EUr3fO4M4B/Iirsz7C+rT
wr8R9b0sUPG/ysbVUND/3BvEW06vq21c/eNpcn7G510M2HM2QHx69oTyNeJc
jrrFdR9Vj5VfGfG8Ar4X68zMG5DHxQOIW88vIG49vwAeb36A/I32vaD77bqD
OIc8zl8wbvPEfZ3d9P6QrVYfw6P72jdbfWLPISkR55B44wVx7sUPiHMvfqAd
nP66v3xLMF4g7/FDPR0/iHMvDsF5Fx6u91H02Tg0zzuIZ28+hDjuc+61cWVw
vU9mu5WH64Fe6/fjQd9Ob+AvKO/8pfsv+y1PrLxnT4i7OBmu8zzBfXVfYF9w
X8hDnNNSxn1fvYHfO3Vea/96en6H93V+B+d4UH4Xfow/X6VG4HWL6/7pnV8h
7+yv+/lCOwD5EnU+jLOz7s+rBPyQp4nAnX8blH937v++JeKcGUp/z4/HKv7K
/vXx/Ajv6/wIziHx/AjPaXF+PF/dd8CO18zzUL5GnFdTJ3Bn5zsVf2gHIF+i
zrdpjMc9+0Dc+etsOR9O371//hJxHo6n53UpbS9sZ6hnPp7H8xe8r+PR/3+0
r97zV5Oul1l/tdwrvx/xOTbOj88o3l2BH6F8jThvx/lRv+/2BfKrdD0xkIc8
zu+6n7IWrsfUfBXaGfCUqHN+XDzo9cne4L6Qx8WJPkdjV+AvKO/iR+//rwf6
XK3rzoE+kIc4X8gbr97vvSuIBzhep6fev7QvGBeQ9+IN6uP4b1I8NTs/vBbF
G4hDL95AHHr2gfI14vyiOoE7f4F48+wG4i14D0Y8wfvd8OP3rJFvIuIH9z8b
eWK8Yf6BYz1B/Hh+AfFDzQOUPsF73OjjeECcePPJAr+fzat3g74sr98D9H96
9UHQZ0X1bXr1Qdg3lbQ47Kt09UHQ7+T37fh9kl59EPRJevVB0K/o1XOn+f1L
3nhB35HXJwD6jqh+Qm+8sI/IjRf0/3jjAv1+3rhAP49Xt1VAOeyTBP053rhu
9/tkvHGBPhlvXLCPxem/3e8n8foWQD+JNy7Q/+aN6yC/D8QbF6h3C330Ocmz
Yd1WjOu0vbKespaB/hAvPkG9VfAce7r8HlnIQF9H0HfXb8d74/X6vAvYd+Hi
8x6/7inGq88xLjPQR+GNF/RRePEJ+hk8P4I6phjvrxfIOtpmWH8U4zrlFzIv
3Qn7CsS4Hjxa17UvBPXEJH9F5Sc3sOf9OqDQv+s2OT98wUDdX+i/KqrPnujX
9YS/DnxN1wcX+XV8T39Qp/Pqs6BeJuLw2QbZL9ED62Uy/3Cz1GcLy/p1djGu
b4/X5xjAOlcyqktugfUmEZ/pbfL7sQfWm8R4db11M9vo18HFeG/7J1mPWA3r
RGK8J50v80Jd7Ft+ntyr14A8s+A38/BCP6/r5fNf9utKIm5tvtHPxwp+wzPg
14OEHeLrMnm7vwPkRYU+Jg8D6ixivEYe1DuEH0epc2x6YN7S+34H+UPvO/1t
v+4g9DTrT5j3w/lnUy/I85vi8nJengfUBYT+Jn8I8mlevhHk88W4TF0D5MmF
niYPD/LSgv/1aN8NyL956wHwfSrsYPJUIG/mrRNA3ixY93ZbOxgc5J289z7I
O3nvfZD/8d77k/zvO+97AeRtvHGB7zVv/QbyMN64YP4kH//d5K3HQJ7EGxfI
k3jjAvkNb70Kvne8cYHvDm9dCr47qLyENy74vZAk8gn5+PW8N16QN/Dze/46
3FuXgjyA50fwPRusA8P1m+YN9+lAvE7gNQJP8lgc911beeJcTbxPqhT2mUN5
3Hcdrj8hTuiP+7QNHvSTh+tVIB/0acesV32csg/u6y6F61jIg+1G7Qsz672B
ePtge8aseyFO2Dnoew/3X0CeZLw8tmeJ6NsvUX3+4b4VqCc+FzRcVwN5bM8S
1f8frqshjp8vYr9AKdwvAHmS8fJBHIbrc8hD2DOIw3B/AeQnnl8qDim7BfET
4aQdiPEGfjf8hP6Bnu77YvqVcl2Bz/EbYPecKdexbyO8zhasluuo5xBeI84z
TMafW1gKzy3UV+LcwiBuu6yeZyzSfT5QHtu/3+q/+Lty3WvO1+q3+s+7wj8f
LOz3BnjgL/c9dcQd/vmBYV83lG/kTX+SeSd0XqKwz6g/yHXyUsgT+D3s94Y8
+DzAcF+M/umw9oTntrn+4TkNfxYv4NcivMvasybbe8/tQniNNT7l9wn3W3vG
nssn7Pnte+V4n0Y8Sf4fq+R6YxPyV57/fhI8x09fxffd1TJu10Nc2POQWbrv
FPBw4py9oL/XfQ+e+EfJsw7pH57LZ+x2wDny+TL9Ch3WPvHn2tUZPtfO2O2E
U2LOtRN2++gYac81iCfJ7xrr9zV1Wbs9NkHaZzWUF/bZfIp/LlCHteeBc/0+
oi5rtxmHSnl0Tp2w29xla9S+AMjfxIeN0X2bUH9htwbZd/QRkm+OP19O2OGb
i3UfJsCFHVa8r/swof55Pukc3VcJcKH/h8fo/knI38LPu8OP2w6r5+MP6H5s
jZvvuAH2+cFx56pR58XViXPhXN8jxJP8k1i8Mf48t1J4XpyxP8Tbrf5PoHPD
jP37QJ7cjLdOnM9WC85/0zxZPh+cR7HI+gufz2bG+y44T8aMF5/DZuQb488Z
K4XnuamL8PvDm6Se6Dw04fch4Bw2w9MUz1MOz2czdnso6i+Cdq4T55vhfgDD
g89Ji/AyPves3doNnzNm7HYeOq/M2C32PLFSeB6asduV4FwOo2cL7wTnz7Rb
u8G+CKN/kf/2KGk3LN/M18fZhzpPTNgh/tywfDwu9F8Lvh/brf5fjzvXTuj5
TNSvq3Hz/hkgzvuqETh1PliSXwT6RTdZ+38c5VWgfCMf+4LfB7LJ2jn+PJ8B
4nyngfjzvoK6T5/VP/6crhrBg+tEYf4H8iT5hudjxhXUg/qsfeLHRZyTFuQN
jJ64DtVH2NPo7/ISGg/r0ZAH27Ni7RnvL1xP7CPs2UfYM+z3gPahzjvCdqvs
386BPcP8FeTB9uyz9oR12Iq120pgt7COD3HCnoHdKoTdwjo+tA+2W1iXB3hg
twphtwpht7COD/Un4pCyW2CHsC4Px0WMN9A/rLNDfuff/wc3rXo3
   "], {{
     {RGBColor[0, 1, 0], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
r8Kfin5mxa7KO1RX1NzfRfv/AZ2wUCM=
          "]], Polygon3DBox[CompressedData["
1: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
CbkJOWAfXV+IDgpfLbxpcQ5HLncTPio7R2Q8Oc1mxTka+kFO1LM4ZxkT8/Uo
5gBvIJavzA2+LzxW+BLhDYo5wBG1c0K4QZ5paOgzz0qORq4GBwRRQU5MbnyZ
4PrFv+G36Od62ZzYZbVzTriyFmrLqb1SnG/C6Z0S863F2dDv166cDw0pjnmJ
fbvo2uXxPOwVPGPzOCOcFbilZrGPl9bOKZeNGIJYIqsVtV81xy/Je856WC/c
JxzUStn7c1Po33r4Io39I/mZW8Rc+HZ8fI51XF6bA1whe01co09uDT8FfwCn
2DL7zPwvfwiMzqK72IelYr+GhT1YOptvha8bHPJmsVby/g5qf/NOa+cwg4g9
1M7MztNHqg1Uu6UyR3FiNl8B3zA2MMHunNry87LngOOA22Du7bJ1CZ3C9pBv
jauc41yQnTORO5GjnR/PxNpYY7OwD5NDP+BC0M8pwhdW5haOy875yPXOiUaf
vJ9caljkD+PjfnDecN83cI+wfz+oddH1rmE/yc2wieA5YQ/Q7zVCZ9ALuOnV
o9Enz1877M3U8A+bFD8jzzoo9BkdRpfxJx3DHo2u/Y55192zdZ8z0DXbxmGv
2JPuoRfoCv6qS+gI1+gzHh+G7PSYv2vIusXcH8V5xR5slu3/xoW93bDYh00K
+7iR+ltlyxiDL+T8XlxbH+Fe0G98LT77ufBf+KMBuvZTsv8ZVFsHG+IMoffw
UKtGQzeRI2PPu4QPeyb8xZCI/9cN+3dl7fPTKuzHzbU5Fri2DbPfFe8MW75j
9lpZM7aKMYzlfLfOXgNrOTcw8QNc8qHCfyXzUeg6On96Nuf2am0ODy4O/g2u
4daQN8e2cKaL+RI4FLgUOIwLk6/BpXSvPBYO52LsVDK3Q8xFnNUU31PM4a9R
m/OB24fzuJTfJHMh9NvX5oi4xvnjLN+sNkD9g9QOVDs4G9PH9vP8XCNe/Eat
k+bpXByfn0zcq3ZeMqe0iuZvV5lrgjNaOeLFpYpzol6VOSf4ANbSrjZmTSPV
rkmuM90dDf6O9SCjJrJe7XyGXAyOCK4IjqpFcf6yIbqua1cU839wu3C8NySv
6eCwOaydPWLubUNOjeCa4pyO3A4ObbWYH25tiNr5ye+M98E7uCqeeWTsMft6
rdp1yXNtUDu/HRtjWSt7wG/gLJ+prTPozo/CTwmPEt6qmGOcyVqq4B6zY4sJ
apdhq7NtFTZraDbHBFcCZ7JzMd9xb+UaHnwQnO8HtXUQXWQOfjc85oZDfrc2
5wq3DMc8t7Y+Y8vhxODGqJlcn23D4YzhirHtJ8UzDY25l9S1j2vb70vDxmJr
4VaR9dbvti/mMW9Ruz17bu7R0OAaA7UGOMabkv0psQExLbEt8d4jtfUXLhZO
Dm4OzvbIeD58DT7pmOx2dDwzssOzOb6jQ3Zc+JvZmuOX4jmZmzNyRPb62PuX
JP+9mM+DGxwTcuKp++L9wf3CiRCfXif8H/W/VZsR8esW6u+ZLWMMsSw2grPG
mdtf/X3Vrq/MN/9QfD55HmK0hXEGOYtwGE9EjDM88hniB2qAA8O+dijmiJZO
5qjgjuCo2qq9nM1d0V8yuQbItfHZnB1cXesGc0JLEBdV5oqe5neV65PtJZsu
/Kja3rrXPpz9BnNNT7IfxZzel7U5PLg+aozUGuFI9yrm5L6urbPoLhzfD7U5
bri/NYWba/yLwgcUP9PftTkunpWaILXBWcK7Sr6H2u7FPN5D2ZzXv+hOZS4M
+9G1dr4Ld0L8t25tGwIXij2lNgon3qzYvhErEjM2KbZ554ZdxdZic7qE/NLk
mnCn0N/lwsZj6+FU4Fbm6xk+rLzf8MfUGKk1kr+upP4v2bVXarCLs/1Dx9qc
Ntw7c3Wubd+YE46v1v/plbk/7O9K4T/g8kfEWYcbXSbe1/OV658tGsxRtoz3
e2CxjqArcOZvZ3O6K5BHVuZ638/mob9S+zqbs4a7pob5jvDs7FoMfHDnBtc4
V07mRKl9UhPt2uC68LzQQfTu1Wx+Hv2apfaG2pvZY1sl10w/iDGM/Tyb21+Y
zY3PiedlTsZRa6a+vCP7W6zT4+Masu+za9HfZdemmX+B+p+qfYJdzt5/zhi1
bDgTzh41eXSfM7B/cQ2ZvWRPp2j8fdm6iE6uEHzw28KfqH0c8/NuqVlRu2IP
kTHm/bg39YAFlZ/hp+w+177N3kP28tN4XmrO1J5fF/5MeE52zeC9eFfUF6hH
z4/fDwl9bit8anJ8Qa0IPo14Av9HLYkazVnJHBxcHDnmsck1mCYhX6KYj6P2
QQ2kUTFft1xtDo/aDHwRtfIOlfkwGtwYvBEyOO2vK3PScNPUuOC64bx/y+bc
f1R/9cpc/PO898o1d75PgM+jFkRN6O/sejHffqyotklyDYRaCDWoLZL5LJ6f
mtKRwjuo9UmuKx2QzNe1rl3DoJbBxzJwe3CCcINwPsSPxIvEysTTxOrEv8TK
cAjYcmL8dwPDLUwM+06+NLayz8f3b5xcs6ZWDb8Ohwo3tk1tbrVvyOBI4S/h
K/+uXNOhdgBvSm0HfhReFb6Ta/ThWuEbU7zvVMzvsRbWdGhyDY394/0dlFxX
/yb2k32hfs61PrFX1PSo7bF/f2H7dW1a8nciLyXz2ftr/sMqf0sAxw3XDR++
YjE/vmXtGI1YDX6cb3fgO1coXjNrh998MpkzgTvhHtyLPt8W8U3KtIh3O4S+
YZvRYWJj4kx0m5pli4ivGxfHk+tHPHxlxGzXRtxGLMg3TnzrBF9+TzLf3TP8
A/w48cmGtTnKCRE/9gj7zFzwxY2Eu1auncFHU+uDT/0jm6OGq6am+2d2TZTa
Unu1fZI5HLgcakL7JX+zxLdL8NH9km0lvgMfgh0kPsXWw0HDRS8O2/Vzti/h
meH24exZC/WA7TR238rfalAP2KQ2v8S3HNQ8qF8QHy9fXN/g26u+wncm1zib
h388KfmbGeoL1C9mkytk26a5Ye+Iz56vHWOdEPYJW4dPx7djT5dJrrnx7RM1
OGpb2POZ2T4L34UN3zHiiS8ivrg1u2YE/w1f/EJyDEIsQlxDrNMh5qPGt1+x
v2qTbBOxje3DnmOzZ2T7w+WTnxHbTQ2wWfi3/sU+Dd9GzfOZ7G928H/Y54OL
vxkgHh0v3KuYT3i5dgxJrZaYjtgOzmOvbA4ELgROBW5lcciJAbcu5j/erB1z
EntiM56sHd9iS4hJX4rxx2d/gwAfSny6e3a+wbcS8Hf9s+/1WsT73JMa3/SI
n7cszl/5doRvTE7N/uaC35O/blMcI8+O+PZQyS9Wuyibkxwd8QL7QwxwULG/
bx3+En9O/M2zExMTGxMvP1qbb6e2SM2W2i3v697seI9YlJiO2I4+tWT0hWtt
It4kPnwgu97UL+zDysX1vWNr8zV8i8Q3c/Dt8N2fJdcP4Qfh479OrjceUZs/
59sk6ofUNg8RXrO4xgmGj/88eU1vRJzCWonHqL2iH3sWx6e/166B8y0b8e6i
iF93Ko4RiBWol9yZrbPUkokn0GXiJ74Vo0b7UnaNt1HgfdGV7LWzB8TexCO/
1q6B860b34jwrchM7EdxfP1VxMN9i2vs5I/E45Oy4/Oc/I0D3zq0iPiGHG2X
4nyA+zPftOx6z/za+eiwiEfaJcc4fBtH/vhp7W+e+NaCvPGtwOgN+ek7kR9s
i3/Af2bX8e/Kzk/51ukxya/Kzk/5Fgp+/fLsnJHcEX5wu+I8c17kD+SZ5Mff
Cj9X+dsMclDGICMXhUf/LPaL+/LNEd8ekU+Pyra/31f+ZoNvxch5WcNFoftw
8MzBb3l2bNWCeN/YrP8DvmZaLw==
          "]], Polygon3DBox[CompressedData["
1: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

          "]]}],
       Lighting->Automatic]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0TssQ2EAhuFTquoyq0QM7SLu12jFxmBiMCEmzG1MwqxzzcyMwsxGiEXC
KO73BEFcZs+fSPr2+U6H/5yTpmcK4/lYFEULaiqLIp+o2VeLyu1WxtnBTlXY
XUywh5XsZZ+Sdj+rmGVO1fYAa1inhJul2cC2cBazHOQQRzVlT7DAWS4zzxIX
w7U27RL3uMpjrnNLb/YOy9z3gCmeMMNzPunIyz3ylz96sL95z09+6M5+5204
kzd85Yuu7WdehfPCWbq073nBU9W73yHj3A1nea5tnnGDa9q3V8Jzsxh+41J4
dxXtOc5zktMc4wiHmVO33c5GZphkil+qVez/f/0DXJo6Dw==
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{551, 547, 571, 1122, 570, 597, 1017, 1121, 615, 1027, 1129, 
       634, 1036, 1143, 655, 654, 683, 1178, 682, 709, 1045, 1177, 727, 1055, 
       1185, 747, 1063, 1199, 767, 766, 795, 1234, 794, 820, 1074, 1233, 840, 
       1082, 1241, 860, 859, 886, 1275, 885, 914, 1283, 913, 933, 1101, 1282, 
       952, 1110, 1297, 971, 970, 996}], 
      Line3DBox[{554, 549, 574, 1016, 1123, 599, 1019, 1131, 618, 1029, 1146, 
       637, 1038, 1159, 658, 660, 686, 1044, 1179, 711, 1047, 1187, 730, 1056,
        1201, 750, 1065, 1215, 770, 772, 798, 1072, 1235, 822, 1076, 1243, 
       843, 1083, 1256, 863, 865, 889, 1277, 891, 916, 1094, 1285, 935, 1103, 
       1299, 955, 1112, 1313, 974, 976, 999}], 
      Line3DBox[{555, 552, 576, 1125, 581, 601, 1021, 1135, 619, 1031, 1149, 
       638, 1039, 1162, 661, 666, 688, 1181, 693, 713, 1049, 1191, 732, 1058, 
       1205, 751, 1067, 1218, 773, 778, 800, 1237, 805, 824, 1247, 828, 845, 
       1085, 1260, 866, 870, 892, 1278, 897, 918, 1289, 921, 937, 1303, 941, 
       956, 1114, 1316, 977, 982, 1000}], 
      Line3DBox[{559, 557, 580, 1127, 586, 604, 1023, 1137, 622, 1032, 1151, 
       642, 1041, 1165, 665, 671, 692, 1183, 698, 716, 1051, 1193, 735, 1059, 
       1207, 754, 1069, 1221, 777, 783, 804, 1073, 1238, 827, 1079, 1249, 848,
        1087, 1262, 869, 875, 896, 1280, 902, 920, 1292, 925, 940, 1106, 1305,
        959, 1116, 1318, 981, 987, 1004}], 
      Line3DBox[{6, 17, 241, 28, 260, 39, 281, 50, 302, 61, 72, 325, 83, 344, 
       94, 365, 105, 386, 116, 127, 409, 138, 428, 149, 449, 160, 171, 472, 
       182, 491, 193, 512, 204, 533, 215, 226}], 
      Line3DBox[{560, 561, 582, 1128, 592, 605, 1141, 611, 623, 1034, 1155, 
       643, 1043, 1168, 667, 677, 694, 1184, 704, 717, 1197, 723, 736, 1061, 
       1211, 755, 1071, 1224, 779, 789, 806, 1240, 815, 829, 1253, 836, 849, 
       1089, 1266, 871, 880, 898, 1281, 908, 922, 1295, 929, 942, 1309, 948, 
       960, 1118, 1322, 983, 992, 1005}], 
      Line3DBox[{562, 572, 584, 1130, 1018, 606, 616, 1144, 625, 635, 1157, 
       645, 656, 1170, 669, 684, 696, 1186, 1046, 718, 728, 1200, 738, 748, 
       1213, 757, 768, 1226, 781, 796, 808, 1242, 1075, 830, 841, 1255, 850, 
       861, 1268, 873, 887, 900, 1284, 1093, 923, 1298, 1102, 943, 953, 1311, 
       961, 972, 1324, 985, 997, 1007}], 
      Line3DBox[{564, 578, 588, 602, 1134, 609, 620, 1148, 628, 640, 1161, 
       647, 663, 1172, 673, 690, 700, 714, 1190, 721, 733, 1204, 741, 752, 
       1217, 759, 775, 1228, 785, 802, 811, 825, 1246, 833, 846, 1259, 853, 
       867, 1270, 877, 894, 904, 1288, 1096, 927, 938, 1302, 946, 957, 1315, 
       964, 979, 1326, 989, 1002, 1009}], 
      Line3DBox[{566, 583, 591, 1136, 1022, 610, 624, 1150, 630, 644, 1163, 
       649, 668, 1173, 676, 695, 703, 1192, 1050, 722, 737, 1206, 743, 756, 
       1219, 761, 780, 1229, 788, 807, 814, 1248, 1078, 835, 1261, 1086, 855, 
       872, 1271, 879, 899, 907, 1290, 1097, 928, 1304, 1105, 947, 1317, 1115,
        966, 984, 1327, 991, 1006, 1012}], 
      Line3DBox[{568, 590, 594, 1140, 1025, 613, 629, 1154, 632, 648, 1167, 
       651, 675, 1175, 679, 702, 706, 1196, 1053, 725, 742, 1210, 745, 760, 
       1223, 763, 787, 1231, 791, 813, 817, 834, 1252, 838, 854, 1265, 857, 
       878, 1273, 882, 906, 910, 1294, 1099, 931, 1308, 1108, 950, 965, 1321, 
       968, 990, 1329, 994, 1011, 1014}], 
      Line3DBox[{569, 595, 565, 1142, 1026, 550, 1156, 1035, 596, 652, 1169, 
       614, 680, 1176, 633, 707, 653, 1198, 1054, 681, 1212, 1062, 708, 764, 
       1225, 726, 792, 1232, 746, 818, 765, 1254, 1081, 793, 1267, 1090, 819, 
       883, 1274, 839, 911, 858, 1296, 1100, 884, 1310, 1109, 912, 1323, 1119,
        932, 995, 1330, 951, 1015, 969}], 
      Line3DBox[{998, 975, 973, 1312, 1111, 954, 936, 1300, 934, 917, 1286, 
       915, 890, 1276, 888, 864, 862, 844, 1257, 842, 823, 1244, 821, 799, 
       1236, 797, 771, 769, 1214, 1064, 749, 731, 1202, 729, 712, 1188, 710, 
       687, 1180, 685, 659, 657, 1158, 1037, 636, 1145, 1028, 617, 600, 1132, 
       598, 575, 1124, 573, 548, 553}], 
      Line3DBox[{1003, 986, 980, 962, 1319, 958, 944, 1306, 939, 924, 1291, 
       919, 901, 1279, 895, 874, 868, 851, 1263, 847, 831, 1250, 826, 809, 
       1239, 803, 782, 776, 1220, 1068, 753, 739, 1208, 734, 719, 1194, 715, 
       697, 1182, 691, 670, 664, 1164, 1040, 641, 626, 1152, 621, 607, 1138, 
       603, 585, 1126, 579, 556, 558}], 
      Line3DBox[{1008, 1001, 988, 1325, 978, 963, 1113, 1314, 945, 1104, 1301,
        926, 1095, 1287, 903, 893, 876, 1091, 1269, 852, 1084, 1258, 832, 
       1077, 1245, 810, 801, 784, 1227, 774, 758, 1066, 1216, 740, 1057, 1203,
        720, 1048, 1189, 699, 689, 672, 1171, 662, 646, 1160, 639, 627, 1030, 
       1147, 608, 1020, 1133, 587, 577, 563}], 
      Line3DBox[{1013, 1010, 993, 1120, 1328, 967, 1117, 1320, 949, 1107, 
       1307, 930, 1098, 1293, 909, 905, 881, 1092, 1272, 856, 1088, 1264, 837,
        1080, 1251, 816, 812, 790, 1230, 786, 762, 1070, 1222, 744, 1060, 
       1209, 724, 1052, 1195, 705, 701, 678, 1174, 674, 650, 1042, 1166, 631, 
       1033, 1153, 612, 1024, 1139, 593, 589, 567}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{243, 1122, 232, 233, 1124, 234, 1123, 235, 1125, 236, 237, 
       1126, 1127, 238, 239, 1128, 240, 241, 1130, 245, 246, 1133, 249, 1134, 
       250, 1136, 253, 254, 1139, 1140, 257, 258, 1142, 261, 262}], 
      Line3DBox[{264, 242, 1121, 244, 1132, 247, 1131, 248, 251, 1135, 252, 
       1138, 255, 1137, 256, 1141, 259, 260, 266, 1144, 267, 1147, 270, 1148, 
       271, 274, 1150, 275, 1153, 278, 1154, 279, 1156, 282, 283}], 
      Line3DBox[{285, 263, 1129, 265, 268, 1145, 1146, 269, 272, 1149, 273, 
       1152, 276, 1151, 277, 280, 1155, 281, 287, 1157, 288, 291, 1160, 1161, 
       292, 295, 1163, 296, 1166, 299, 1167, 300, 303, 1169, 304}], 
      Line3DBox[{305, 284, 1143, 286, 289, 1158, 1159, 290, 293, 1162, 294, 
       297, 1164, 1165, 298, 301, 1168, 302, 306, 1170, 307, 308, 1171, 1172, 
       309, 310, 1173, 311, 312, 1174, 1175, 313, 314, 1176, 315}], 
      Line3DBox[{327, 1178, 316, 317, 1180, 318, 1179, 319, 1181, 320, 321, 
       1182, 1183, 322, 323, 1184, 324, 325, 1186, 329, 330, 1189, 333, 1190, 
       334, 1192, 337, 338, 1195, 1196, 341, 342, 1198, 345, 346}], 
      Line3DBox[{348, 326, 1177, 328, 1188, 331, 1187, 332, 335, 1191, 336, 
       1194, 339, 1193, 340, 1197, 343, 344, 350, 1200, 351, 1203, 354, 1204, 
       355, 358, 1206, 359, 1209, 362, 1210, 363, 1212, 366, 367}], 
      Line3DBox[{369, 347, 1185, 349, 1202, 352, 1201, 353, 356, 1205, 357, 
       1208, 360, 1207, 361, 364, 1211, 365, 371, 1213, 372, 1216, 375, 1217, 
       376, 379, 1219, 380, 1222, 383, 1223, 384, 387, 1225, 388}], 
      Line3DBox[{389, 368, 1199, 370, 373, 1214, 1215, 374, 377, 1218, 378, 
       381, 1220, 1221, 382, 385, 1224, 386, 390, 1226, 391, 392, 1227, 1228, 
       393, 394, 1229, 395, 396, 1230, 1231, 397, 398, 1232, 399}], 
      Line3DBox[{411, 1234, 400, 401, 1236, 402, 1235, 403, 1237, 404, 405, 
       1239, 406, 1238, 407, 1240, 408, 409, 1242, 413, 414, 1245, 417, 1246, 
       418, 1248, 421, 422, 1251, 425, 1252, 426, 1254, 429, 430}], 
      Line3DBox[{432, 410, 1233, 412, 1244, 415, 1243, 416, 1247, 419, 420, 
       1250, 423, 1249, 424, 1253, 427, 428, 434, 1255, 435, 1258, 438, 1259, 
       439, 1261, 442, 443, 1264, 446, 1265, 447, 1267, 450, 451}], 
      Line3DBox[{452, 431, 1241, 433, 1257, 436, 1256, 437, 440, 1260, 441, 
       1263, 444, 1262, 445, 448, 1266, 449, 453, 1268, 454, 1269, 455, 1270, 
       456, 457, 1271, 458, 1272, 459, 1273, 460, 461, 1274, 462}], 
      Line3DBox[{474, 1275, 463, 464, 1276, 1277, 465, 466, 1278, 467, 468, 
       1279, 1280, 469, 470, 1281, 471, 472, 1284, 476, 477, 1287, 1288, 480, 
       481, 1290, 484, 485, 1293, 1294, 488, 489, 1296, 492, 493}], 
      Line3DBox[{495, 1283, 473, 475, 1286, 478, 1285, 479, 1289, 482, 483, 
       1291, 1292, 486, 487, 1295, 490, 491, 1298, 497, 498, 1301, 501, 1302, 
       502, 1304, 505, 506, 1307, 1308, 509, 510, 1310, 513, 514}], 
      Line3DBox[{516, 494, 1282, 496, 1300, 499, 1299, 500, 1303, 503, 504, 
       1306, 507, 1305, 508, 1309, 511, 512, 518, 1311, 519, 1314, 522, 1315, 
       523, 1317, 526, 527, 1320, 530, 1321, 531, 1323, 534, 535}], 
      Line3DBox[{536, 515, 1297, 517, 520, 1312, 1313, 521, 524, 1316, 525, 
       1319, 528, 1318, 529, 532, 1322, 533, 537, 1324, 538, 539, 1325, 1326, 
       540, 541, 1327, 542, 1328, 543, 1329, 544, 545, 1330, 546}]}, {}, {}}},
   
   VertexNormals->CompressedData["
1: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
    "]],
  Axes->True,
  AxesLabel->{
    FormBox["\"log(c)\"", TraditionalForm], 
    FormBox["\[Gamma]", TraditionalForm], 
    FormBox["Efficiency", TraditionalForm]},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotLabel->FormBox[
   "\"SVM Circle Hard Log c-\[Gamma]-Efficiency\"", TraditionalForm],
  PlotRange->{{-3., 2.}, {1., 6.}, {0., 0.983870967742}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6703759361233892`*^9, 3.67067764526409*^9, 3.6709312154572678`*^9, 
   3.670931274230645*^9, 3.6709313594065742`*^9, 3.6709314462857533`*^9, {
   3.6709315323791523`*^9, 3.670931579621949*^9}, 3.670931727027594*^9, 
   3.670931855930511*^9, 3.670932002863783*^9, 3.670932043691493*^9, {
   3.6709320817556334`*^9, 3.670932092729817*^9}, 3.67093213956325*^9, 
   3.670932184430917*^9, 3.670932321838228*^9, {3.6709324866350594`*^9, 
   3.670932552932519*^9}, 3.670932672382707*^9, 3.6709327650856447`*^9, {
   3.670933197895687*^9, 3.6709332254231157`*^9}, {3.6709336959536867`*^9, 
   3.670933705927161*^9}, 3.670939379753831*^9, 3.6709394173146763`*^9, 
   3.670939701547813*^9, {3.670939907118675*^9, 3.670939922320163*^9}, 
   3.671540978233749*^9, 3.671541966565967*^9, 3.671542054424143*^9, 
   3.672570344211276*^9, 3.672571593092313*^9, 3.672643896121169*^9, 
   3.6726441925908127`*^9, 3.672644358063919*^9}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJyFXHuYXEWV7/R00j1JM3S6ezqj5NPErAirIKCyZPGzykFlza4sy8pDfKCg
IqASHsu6gqRR8MFCQDeKn/AhTxWCGhEwKsm08khcFJKYZAkOMOSdmQnMTDKT
TufRW497quqcuifMH7kzPw6/OnXOuXXrcerMPv/SMz6XzWQyJ0zOZDoy8FNo
2OeIyKAfwJsMnpHpeI7BCwxeZPASg5cZvMrgNQbvcfiSA231MznBvR0w3mRw
bweM5xi8wOBFBi8xeJnBqwxeY3Bvh2kHNd6R4N4OGG8yuLcDxnMMXmDwIoOX
GLzM4FUGrzG4t8N5+iXJZBPc2wHjTQb3dsB4jsELDF5k8BKDlxm8yuA1Bvd2
SH4SnI4PgNPxAXA6PgBOxwfA6fgAOB0fAKfjA+B0fACcjg+A0/EB8CAe9uk4
2ddn/wriAeFNBs8wPDkGLzB4kcFLDF5m8CqD1xjc26G2X+N7IjtgvMngGYYn
x+AFBi8yeInBywxeZfAag3s7LM/pf3c7O+w/qTD7+tJGgfGmKCx8bdmel54h
eIbhyTF4gcGLDF5i8DKDVxm8xuB0fBhxdjj51HlH379oUGC8Ka6deX2pt7CD
4Bm5uW/9uZf8fAvBc/IPo8psV79M8IIszXz56teWrSB4Ub4j06sccBfBS/LL
0zReJ3iZwen4MBLZAeNBPEzoONnm7LDhYu33IYHxpvjRJ37+6PpzKZ6RHz/t
EvUfBgmekzOlMucZFC/IZX//dM8FN+0geDGx2zaCl+T9v1p0xryjtxC8nLS7
keBVmVuhaF57keA12bxMuXH2WoL3yOKZ2+644tk/ibNHNP6ys8Pbvq/lhwne
FL+94Nm52+4YInhGpuM5Bi8weFGCnTFekl8986bjn+6heNnZH+NVad9ritfk
nXOUW+btIHiPHGgqsy3bJppl/fcqZwfQE+NNBs9IiB+M5xi8wOBFBi8xeJnB
qwxek+n69zg8g358PGC8KU69Q7nlAopnZDqek5+/V4Xz/RQvMHiRwUsMXmbw
KoPXGLzH4d+w9oHxxvUX402RLp+R33zwCmVQiucYvMDgRQYvMXiZwasMXkvG
mZ0E75FPLVWv4yU7xbq8/nvA2QHkMd4U6fLeDhjPMXiBwYsMXpLp+pQZvMr0
q5Z81yje4/Dr7fgZ2QHjPh4wnpHpuLcDxgsynb/I4CVGzzKDVxm8xuDeDtB/
ageMeztg3McDxnMynafAtFtk8BKDlxm8yuA1Bvd2uNvOryI7YNzbAeMZmS6f
Y/gLLm4xXmTwEsNTZvAqg9cY/h6n/2CH7Se1A8a9HTCece1iPMfgBQYvMnjJ
6Y/xMoP7cRLjNQnfQYz3OLzXrr+cHYAH401nH4x7O2A8x+CFZL5HcR8PGPff
TYyX3fca437+gPEa019vB+gP2IF8ZyXYAb9fbn3l+oXxnOsXxgtkPAG8SOch
EuyQjkfzBwl2SMej+YMEOyC8PrmxpaB/mcDzjHq8P4nlDzLyZH9G4Zeb97Ij
wu0vOUY+z8gXGPlpjDzd5+lovEOHRXsXoz/dj4r3J3G7hzPt0n0kaHcfwx/b
ba7eP6tPZ/jpflRH4weGf1KE22dsZ8tfYfjpuhX4JzP8sV8sfzfDT9e/wN/J
8BM/Ov4ZDD/ZT6hnGneb/elRxv7E73VuHxL0PIzRk/jdtbuX4af7mR2NZwx/
HD/2SfyueFaZ/WYaP9y+KPDH8WOfxO+On8YPt78K/HH82Cfxu+On8cPt0wJ/
HD/2SfeR9vf1duon51/6vu9P1pv0fQc9aRxy+8bQLo0f4I/99QVNvyCOH/sL
9df+PjvfofED/LG/LH8cP/YX6i/gp/ED/LG/LH8cP/YX6i/gp/ED/LGdLX8c
P/aX2O/2GfvXtkvjCuRjP56eTcftM/aLlY9x+4ztbOVj3D5ju1n5GLdPaoc9
fXUzH5wQ571B7zv9UQBun03R+0k9j1ossPzBCE8II/7GJP3siHD7pPED8nlG
nsYDyE9j5Kkfx/rsvG+XaM+64Kbjnx4g+o8QO4w5Ozw2VT+9vG2XfN8z8bkA
bnefePs/6n3pDYQ/I2/boOeT6xz/gH7Q73smPl8AHvsdmUR4xpydqzOWq4np
c4SffN8z8TkF5p9MeMacX048Se+T/4bwk+97Jj7vwPydhGfM+fEPFb1/fivh
J9/3THxuYn8G+8amGD7x50V6/TJE+EfEUR/U+95bBcjbZ1PcMlXHyaCTt3oe
RvQZc37veLPG5zse225LLFii1wU7CH9G9h5p99WBx35HKM+Y8zvl/y/zPk6S
H3+njtvthD8n33S/jodthJ/yjDF+B/7J8u9W3aEWKlsIf0H+qa7XC5sJfxw/
9kn9DvydcsX39PpoE+EvynUX6XHmFcIfx499Ur8P9K01+2Ej4nOLwvXdoPP7
X2dp+0M8DDi/fwXtJ4Oeh8l336vt+QrhKckPmvXmy47HttsUe84PeQac3zE+
2Pe4Hk/qlGfQ+f1TH9Prvn7HY9fxGXlVKn+O4MBfluvWzlIDUD/hr8p/+r0S
v2I94c/JRz6Txl8gOPBTnkHn945vKzMf/yzhL8hfnJfGX5SrzrHnKZif8gw6
v19wkZZ/gvCMiK3I79BuUd54Vsg/4Py4+F/teQ3g45Ms/rmPYBz88s0P2XMc
LF+Wj/diHOw861h7voPlq/Lfj8Y42O03VXvug+Vr8tjpGAc77N5mz4Ps3yv7
NjX1+zIubhzR+JDD7bMpbj5Bn6MNEfkD4sE9+knlM5Lil5vz6myE22dOPjRX
92uYyE+JcPssMPJTGfkiwRtunw/vk4D8CLFDQ4AdlpjxkLbbxbRbYtrdT3iA
PyPfiPZbVvbN1ePYgukMfznit/O6rFx1pP4eUf4cwYG/wvBXGf4pDH+B4e+W
t1xp99kwf43gwD+V4S8y/DMY/h6C94vjzL7TmFh4jJ5f7ST8I+K7Paq7vcNO
3j6b4p4x/V3bSfTsYvQsERzabYlfvFu/jzsJPz0vaIijzPs7neEvR/w9Jq4m
EZ5+5/d0/grDX2X4JzP8dH8S+LsZ/pqcS3gsfyfDX2T4ZxAe4O+R9yL/9jv/
fmNIvdZ7aLuHMe2W5I8u1eO55yma/aIYB7+ky8c42JnGg5Wvyt9epb87VL4m
/3KynodQ+Zrc8DX9faTyPQTfnpx37REd94XjDMwH6XkWyLcj3D4z8hGC2/VL
B7EnyOfkWoJb+Tw5FwP5gux9GONWflqE22eR4KPJezohcByCPD3XG2XtYNs9
nJyXAQ89j4N2D4rVX9Df92HCn5EnD4dxuF3Y9cJ0hp+e640m8d8h0/XPycPf
E8YV8FcYfno+CPz5CAe/vPNaHFeWv5vhp+eMwD+N8Iw6P6bzz2D46bnthPhv
M97uFs0HwngbZfw+wfgd9Dyc0ZP6HdrdLyqLw3bduYj8B3S+MyoW6Ued+n2U
8fuE+JAZr7IRbp+5iMfyU7+PMn4H/imy673hODPh/I5x4Kd+H3V+x3YD/qkM
f5Hhn8HYv0d+FcnvE8+37P78DvTeTTB+9+eVFx8bfi9Azy7GziV5e2q7e8UA
Gs/jc0/gmWPGh+mEZ8L5nfJ/8YDdn8c88fkp5q8w/FXZeSLW0/JTHn8Oe+EN
eh5F+bvlux5Oe49q8uyjwvEW+CmPP889v6XzAyn/DFlH36kJ53eM+/PoOWhc
hXaL5FzVnxe/D8XJPvHYQbt/TnHwy+P34HatfFl+Hc3n/fnyG78aritBvip7
H9X7PENEvkbOl0E+xsEOgL/FfKXzDYuPQ9xlPmD+/ykJ3nL4Y1q+D+TbDkf3
Dhrc/RTP/7yRB/4sI+/bxXibwT1PS/tPJPx1vw/8RbOPD/rTfeBCJI/5OXl/
brhQ96tvSoRj+S4GZ+4HNfw+LbrnwtqZ7rsmuGTuE0X7qNCu519j7Annm96P
+N6Nx1FcBf3F8i2Gx/t3t8YX5F5HPuv4UdwG9kRxy9kz8Dvm935/yY53UbuY
x/sdx3mFkQ/iQcuLXKTPCmOHWB/Mw9yrCvqL3osgHtB7EcQDtoPXf4fG+0DP
znR5ydzbCvjR+9Jg7u80uPtN4+njTxAnGPdxNc/s92VfRz7r2n3c9De2J5IP
/IV58ox8J4P7eFir9ZTZQ/MHfsfjMKNn4EcDNICf0Ucy986icSM5D+X8GPjr
QTM+xP3F8t4vGG8zeNbx/MDEVWwHJB/YE/PkGXlvn/eYf2N7Ynnfr3/R/8jM
odsN/Ijj3+s/y7ynsf2x/ow+krk3F/KE96Si7wucd3s/XmPic1LCQ79rIE+/
44DT7zjgWcfzQ8MLdvP2qWj9G0m7DXqOGdsZ89PvOMh7/x5n1m8Jf/Q9BXmm
v9F3HN4Lr+cKM/6A3Zj3iGs3+o5Du55ns0WTdpn7XwF+n/b7gpbFA//ie3N0
fnjQ4uH7i+RbDI/3+3aDNyP5q4w+sTzmybp2v236leQhBPa337V20t9gHAh5
wvcR8fs4+Z3B90btYh76HTyQyFcYeW+3tulvM9LnZiPfivTBPMx9yaC/uw1/
Yp8gfuz8BPzIjAOB/qsNz96ov0heMvcxA/6ZZj5zIIpDdC8vwM80fpxwcXiN
uff0jMD3GX18ongO7Izlfbxh3MfbIjNOjjt5uz/5JGk36/hRPAd+QfEc+AXx
BH7H/N7vF5t/J6J2MY/3C47bCiPv7fOAPr+s7470kSZOJiJ9MA9zXzXoL4rz
IE5QnAdxgu3g9V9gxs/xqL9IXjL3YQN+FM/R927k0PGp4m1WXp/7rCf3YX2c
YLyd3J+9Xdjvy6iT/1S33veg922zrt23m/cltieSD/yFefKMfCeD+3iw398R
x/+dd+l9ob9hPQO/4/eX0TPwo/0Ojjp9qpv0PtIyzC+Z+7yBH9H9TeWvY36q
921WJ+/xiPPXDV/U+4E7xB5z/jHm+tub0fb/NpFviXOe0vkA2wneFv95iR5/
toquvbrdHU7+S4+GeTgjzo/n96tuPbpRHKn1r+9y9vm8ubd7OpZXdp73Vr2v
+CLhycsJcx6xish3yoV36/Pohvi0Ga/GnJ0t/3wi3yUfmaP9+F2x1Zyrb3ft
tkqafxuRZ+4dK/0Bv8XkPeyK/IL1ryTyRJ9oPjMS8aB7qcq/t/1V23M7ubc7
LsZm23ybb5n3fdj196Y+7ZfVRL4lpm7Q57P0/nJbzLlVv7/0nnJWvje5D26/
m686OwwM6v3Dx7C8suf8FzU/5cnLbpMnQO47Kz/acWC7+LQZD4ec3c4y93nX
EPkuueRoHSdbCV6Sa87Rem7GuNLzSbOvuEnY+clOZ+f9T2v7LCN6VuSrP9R2
GMC48peN537Sbre09+XXi5PMvvag89f8hXq/90/4Xm3D37f9qNFng/Nj+j3o
cdF7os0nOdXE7WZnB7gnjuVbDE/b4aebvMu1kfxDu7X8i5E85sk6/VcZfV5x
9n+4YusDDBv7bHX2F5fq8X8T5qlz98HzDv+Z+V4879r98DabZ4J5OuVhk/T7
NST+w+izifhxM5Hvkkcu1ePbkLivSwNrnD7jH9bxNiQyZnz7m9PnOpPvR9uF
/hLc9XdQHDT6DLj42XeSzSd8o8G3uPjZY+7j9xM7VORDT+i8r0Gxf7L+e73r
b6o+iv/09fp9JPfZFf/4dh0nO8S9pt2NLg5P3qrf041u3gc4nOs9NkMDT0Zx
iO+J+7hF8azsfO3X9PhM5VsC9Md4W4D9Lb7EyQ8fbvNMsHzW3UdD8az88ru0
eFZ+GVqt7TOIeercffy8w8cN3nDt3voNe46AeTqdPI7bihxMbbeL8N/l9Pmo
OYei/Mx9f9UvwFE8q3iA7wKKZxUP8L3G/a04nvkz9d9LXb+O/7LOryD6KH7s
r1WOH/yL4lbF1c9u1+PhIL5XrvB/q2r/7sRxqOLq9rn63I3ex28xdQbaDn/q
CP33SgHyd35Gj89UPivXJ+dQx83Wf//Z2dP6i9Q9qHP1CvIOr9s4EcA/gfIo
gKcznUfFA+CfnWX0EdDuPd/RfqHyTN0DPb9KcOvHlc4v910R5nfBT8XJv8W+
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
k8fzVSQf5WmnzFdDnLMPzYOqx/NYzEPtxt0Lg/neeLp9qD1T5r0YZ+wc5b3H
9y8wTzZdntqzzuTt17k8//jeCtaT1gWN59VIntqzzuX/x/NqjNP3i7kvUI/v
C2CebLp8FIfx/BzzMPaM4jC+X4D5mfeXi0POblH8JDhrB6a/kd+Bn9E/0tOv
L5adq7+DtI7fOFPP0K9TMN5i6hlmSbtxHjiWZ+oWRnE76PTc9pydD2N5av8x
p//y4/T3BeZ5Y07/B+dovJ/wUH/F+cmYJysXrsF1CO2T+nHM9XfPX7T8U1if
elxv0Dwiv8f53piH1gOM78XYnwFnz0knhvWsfP7w1f+sv9c3Jvigs+fUL9h8
Y4y3xEW/DvOEx5w9U+vmKXvSunz2mZXve0jzbCP+onm/g86es009sc0YV/bc
tFyvI7ZinsieY4w9/Xrw8pv1+mUT0T+uywd2O+YYbU94vwacfdLr2rUFrWsH
dkuta6fsdtzDOv77CU82ql8Hdpt1pN5/fgHL17k6dfmoTh3YLbVOnbLbB96g
54erCX+nPOXA+03eJta/Jn95vl53/JnId8mzH7Z5mxhX65dpNg8T4Tqv40Kb
h4n1r8jnltq8SoQr/S9aYfMnMX+37HrB5k9i/ppc/Eebj21xWMeNi8nJutX+
Detirl5cm6kL1xJnptbp4urC5dPrktXjenFgf4z3O/0nbtH74TuJPK3bBv1t
ixOT/V6Mt6L6b5aH1nlb6fyVzq/6S+qY2Setwwby+fQ6WvW4npt5KL+v7NHx
Q/WkddiApzOdpxHXZwO70fpgYLfThnF9LbDbxaguCvDQOmkJ3qB1z/qd3Wgd
MLBbunw+va5XPa6HBnZLt3O3vAzlOfQ7u6XyNOL6ZmC3V4v6F1Kni6snpuyQ
XjesIt+E8hn6nf7fO9Oeu2H+bjkZ1Vfpd3rS+mD2SfM6AG8xdcC4+mBZ+YG3
pdTdUvZfmpzHYfm8fMf8sL/bnZ17U+vM+H0P+zeXr7Ld2f/ofaEdRp3+VyB/
jbr+4rwU4KF5HfH+D+bJyv+9NKVfGaYuk7LP/6HzL59nsjyt3SgPBPRk6jIp
e9L6WlZ/WqfLn0f3IX/5/SVa3wns+VP0vk84e+L84VHGnqOMPX2+x9mpdqb2
nHB2S603FeR7IJ7InvH+FebpjOpWgT1T7aPPH1G78Tk+xv2+FuahdagmnN1o
/SiwW7p9aJ0ofy7/4+QcHOH1uN4U2O2t3WHe+4Sz2y934rpMYLd5iN/vjy1+
yuYtY/ku2Xtr+B335/KVtHpNyg53PZHCo/q7+nvh+a/ff/vyjPC7GZ+zY35/
zv7/BsrGvg==
   "], {{
     {RGBColor[0, 1, 0], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
r8Kfin5mxa7KO1RX1NzfRfv/AZ2wUCM=
          "]], Polygon3DBox[CompressedData["
1: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
CbkJOWAfXV+IDgpfLbxpcQ5HLncTPio7R2Q8Oc1mxTka+kFO1LM4ZxkT8/Uo
5gBvIJavzA2+LzxW+BLhDYo5wBG1c0K4QZ5paOgzz0qORq4GBwRRQU5MbnyZ
4PrFv+G36Od62ZzYZbVzTriyFmrLqb1SnG/C6Z0S863F2dDv166cDw0pjnmJ
fbvo2uXxPOwVPGPzOCOcFbilZrGPl9bOKZeNGIJYIqsVtV81xy/Je856WC/c
JxzUStn7c1Po33r4Io39I/mZW8Rc+HZ8fI51XF6bA1whe01co09uDT8FfwCn
2DL7zPwvfwiMzqK72IelYr+GhT1YOptvha8bHPJmsVby/g5qf/NOa+cwg4g9
1M7MztNHqg1Uu6UyR3FiNl8B3zA2MMHunNry87LngOOA22Du7bJ1CZ3C9pBv
jauc41yQnTORO5GjnR/PxNpYY7OwD5NDP+BC0M8pwhdW5haOy875yPXOiUaf
vJ9caljkD+PjfnDecN83cI+wfz+oddH1rmE/yc2wieA5YQ/Q7zVCZ9ALuOnV
o9Enz1877M3U8A+bFD8jzzoo9BkdRpfxJx3DHo2u/Y55192zdZ8z0DXbxmGv
2JPuoRfoCv6qS+gI1+gzHh+G7PSYv2vIusXcH8V5xR5slu3/xoW93bDYh00K
+7iR+ltlyxiDL+T8XlxbH+Fe0G98LT77ufBf+KMBuvZTsv8ZVFsHG+IMoffw
UKtGQzeRI2PPu4QPeyb8xZCI/9cN+3dl7fPTKuzHzbU5Fri2DbPfFe8MW75j
9lpZM7aKMYzlfLfOXgNrOTcw8QNc8qHCfyXzUeg6On96Nuf2am0ODy4O/g2u
4daQN8e2cKaL+RI4FLgUOIwLk6/BpXSvPBYO52LsVDK3Q8xFnNUU31PM4a9R
m/OB24fzuJTfJHMh9NvX5oi4xvnjLN+sNkD9g9QOVDs4G9PH9vP8XCNe/Eat
k+bpXByfn0zcq3ZeMqe0iuZvV5lrgjNaOeLFpYpzol6VOSf4ANbSrjZmTSPV
rkmuM90dDf6O9SCjJrJe7XyGXAyOCK4IjqpFcf6yIbqua1cU839wu3C8NySv
6eCwOaydPWLubUNOjeCa4pyO3A4ObbWYH25tiNr5ye+M98E7uCqeeWTsMft6
rdp1yXNtUDu/HRtjWSt7wG/gLJ+prTPozo/CTwmPEt6qmGOcyVqq4B6zY4sJ
apdhq7NtFTZraDbHBFcCZ7JzMd9xb+UaHnwQnO8HtXUQXWQOfjc85oZDfrc2
5wq3DMc8t7Y+Y8vhxODGqJlcn23D4YzhirHtJ8UzDY25l9S1j2vb70vDxmJr
4VaR9dbvti/mMW9Ruz17bu7R0OAaA7UGOMabkv0psQExLbEt8d4jtfUXLhZO
Dm4OzvbIeD58DT7pmOx2dDwzssOzOb6jQ3Zc+JvZmuOX4jmZmzNyRPb62PuX
JP+9mM+DGxwTcuKp++L9wf3CiRCfXif8H/W/VZsR8esW6u+ZLWMMsSw2grPG
mdtf/X3Vrq/MN/9QfD55HmK0hXEGOYtwGE9EjDM88hniB2qAA8O+dijmiJZO
5qjgjuCo2qq9nM1d0V8yuQbItfHZnB1cXesGc0JLEBdV5oqe5neV65PtJZsu
/Kja3rrXPpz9BnNNT7IfxZzel7U5PLg+aozUGuFI9yrm5L6urbPoLhzfD7U5
bri/NYWba/yLwgcUP9PftTkunpWaILXBWcK7Sr6H2u7FPN5D2ZzXv+hOZS4M
+9G1dr4Ld0L8t25tGwIXij2lNgon3qzYvhErEjM2KbZ554ZdxdZic7qE/NLk
mnCn0N/lwsZj6+FU4Fbm6xk+rLzf8MfUGKk1kr+upP4v2bVXarCLs/1Dx9qc
Ntw7c3Wubd+YE46v1v/plbk/7O9K4T/g8kfEWYcbXSbe1/OV658tGsxRtoz3
e2CxjqArcOZvZ3O6K5BHVuZ638/mob9S+zqbs4a7pob5jvDs7FoMfHDnBtc4
V07mRKl9UhPt2uC68LzQQfTu1Wx+Hv2apfaG2pvZY1sl10w/iDGM/Tyb21+Y
zY3PiedlTsZRa6a+vCP7W6zT4+Masu+za9HfZdemmX+B+p+qfYJdzt5/zhi1
bDgTzh41eXSfM7B/cQ2ZvWRPp2j8fdm6iE6uEHzw28KfqH0c8/NuqVlRu2IP
kTHm/bg39YAFlZ/hp+w+177N3kP28tN4XmrO1J5fF/5MeE52zeC9eFfUF6hH
z4/fDwl9bit8anJ8Qa0IPo14Av9HLYkazVnJHBxcHDnmsck1mCYhX6KYj6P2
QQ2kUTFft1xtDo/aDHwRtfIOlfkwGtwYvBEyOO2vK3PScNPUuOC64bx/y+bc
f1R/9cpc/PO898o1d75PgM+jFkRN6O/sejHffqyotklyDYRaCDWoLZL5LJ6f
mtKRwjuo9UmuKx2QzNe1rl3DoJbBxzJwe3CCcINwPsSPxIvEysTTxOrEv8TK
cAjYcmL8dwPDLUwM+06+NLayz8f3b5xcs6ZWDb8Ohwo3tk1tbrVvyOBI4S/h
K/+uXNOhdgBvSm0HfhReFb6Ta/ThWuEbU7zvVMzvsRbWdGhyDY394/0dlFxX
/yb2k32hfs61PrFX1PSo7bF/f2H7dW1a8nciLyXz2ftr/sMqf0sAxw3XDR++
YjE/vmXtGI1YDX6cb3fgO1coXjNrh998MpkzgTvhHtyLPt8W8U3KtIh3O4S+
YZvRYWJj4kx0m5pli4ivGxfHk+tHPHxlxGzXRtxGLMg3TnzrBF9+TzLf3TP8
A/w48cmGtTnKCRE/9gj7zFzwxY2Eu1auncFHU+uDT/0jm6OGq6am+2d2TZTa
Unu1fZI5HLgcakL7JX+zxLdL8NH9km0lvgMfgh0kPsXWw0HDRS8O2/Vzti/h
meH24exZC/WA7TR238rfalAP2KQ2v8S3HNQ8qF8QHy9fXN/g26u+wncm1zib
h388KfmbGeoL1C9mkytk26a5Ye+Iz56vHWOdEPYJW4dPx7djT5dJrrnx7RM1
OGpb2POZ2T4L34UN3zHiiS8ivrg1u2YE/w1f/EJyDEIsQlxDrNMh5qPGt1+x
v2qTbBOxje3DnmOzZ2T7w+WTnxHbTQ2wWfi3/sU+Dd9GzfOZ7G928H/Y54OL
vxkgHh0v3KuYT3i5dgxJrZaYjtgOzmOvbA4ELgROBW5lcciJAbcu5j/erB1z
EntiM56sHd9iS4hJX4rxx2d/gwAfSny6e3a+wbcS8Hf9s+/1WsT73JMa3/SI
n7cszl/5doRvTE7N/uaC35O/blMcI8+O+PZQyS9Wuyibkxwd8QL7QwxwULG/
bx3+En9O/M2zExMTGxMvP1qbb6e2SM2W2i3v697seI9YlJiO2I4+tWT0hWtt
It4kPnwgu97UL+zDysX1vWNr8zV8i8Q3c/Dt8N2fJdcP4Qfh479OrjceUZs/
59sk6ofUNg8RXrO4xgmGj/88eU1vRJzCWonHqL2iH3sWx6e/166B8y0b8e6i
iF93Ko4RiBWol9yZrbPUkokn0GXiJ74Vo0b7UnaNt1HgfdGV7LWzB8TexCO/
1q6B860b34jwrchM7EdxfP1VxMN9i2vs5I/E45Oy4/Oc/I0D3zq0iPiGHG2X
4nyA+zPftOx6z/za+eiwiEfaJcc4fBtH/vhp7W+e+NaCvPGtwOgN+ek7kR9s
i3/Af2bX8e/Kzk/51ukxya/Kzk/5Fgp+/fLsnJHcEX5wu+I8c17kD+SZ5Mff
Cj9X+dsMclDGICMXhUf/LPaL+/LNEd8ekU+Pyra/31f+ZoNvxch5WcNFoftw
8MzBb3l2bNWCeN/YrP8DvmZaLw==
          "]], Polygon3DBox[CompressedData["
1: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

          "]]}],
       Lighting->Automatic]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0TssQ2EAhuFTquoyq0QM7SLu12jFxmBiMCEmzG1MwqxzzcyMwsxGiEXC
KO73BEFcZs+fSPr2+U6H/5yTpmcK4/lYFEULaiqLIp+o2VeLyu1WxtnBTlXY
XUywh5XsZZ+Sdj+rmGVO1fYAa1inhJul2cC2cBazHOQQRzVlT7DAWS4zzxIX
w7U27RL3uMpjrnNLb/YOy9z3gCmeMMNzPunIyz3ylz96sL95z09+6M5+5204
kzd85Yuu7WdehfPCWbq073nBU9W73yHj3A1nea5tnnGDa9q3V8Jzsxh+41J4
dxXtOc5zktMc4wiHmVO33c5GZphkil+qVez/f/0DXJo6Dw==
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{551, 547, 571, 1122, 570, 597, 1017, 1121, 615, 1027, 1129, 
       634, 1036, 1143, 655, 654, 683, 1178, 682, 709, 1045, 1177, 727, 1055, 
       1185, 747, 1063, 1199, 767, 766, 795, 1234, 794, 820, 1074, 1233, 840, 
       1082, 1241, 860, 859, 886, 1275, 885, 914, 1283, 913, 933, 1101, 1282, 
       952, 1110, 1297, 971, 970, 996}], 
      Line3DBox[{554, 549, 574, 1016, 1123, 599, 1019, 1131, 618, 1029, 1146, 
       637, 1038, 1159, 658, 660, 686, 1044, 1179, 711, 1047, 1187, 730, 1056,
        1201, 750, 1065, 1215, 770, 772, 798, 1072, 1235, 822, 1076, 1243, 
       843, 1083, 1256, 863, 865, 889, 1277, 891, 916, 1094, 1285, 935, 1103, 
       1299, 955, 1112, 1313, 974, 976, 999}], 
      Line3DBox[{555, 552, 576, 1125, 581, 601, 1021, 1135, 619, 1031, 1149, 
       638, 1039, 1162, 661, 666, 688, 1181, 693, 713, 1049, 1191, 732, 1058, 
       1205, 751, 1067, 1218, 773, 778, 800, 1237, 805, 824, 1247, 828, 845, 
       1085, 1260, 866, 870, 892, 1278, 897, 918, 1289, 921, 937, 1303, 941, 
       956, 1114, 1316, 977, 982, 1000}], 
      Line3DBox[{559, 557, 580, 1127, 586, 604, 1023, 1137, 622, 1032, 1151, 
       642, 1041, 1165, 665, 671, 692, 1183, 698, 716, 1051, 1193, 735, 1059, 
       1207, 754, 1069, 1221, 777, 783, 804, 1073, 1238, 827, 1079, 1249, 848,
        1087, 1262, 869, 875, 896, 1280, 902, 920, 1292, 925, 940, 1106, 1305,
        959, 1116, 1318, 981, 987, 1004}], 
      Line3DBox[{6, 17, 241, 28, 260, 39, 281, 50, 302, 61, 72, 325, 83, 344, 
       94, 365, 105, 386, 116, 127, 409, 138, 428, 149, 449, 160, 171, 472, 
       182, 491, 193, 512, 204, 533, 215, 226}], 
      Line3DBox[{560, 561, 582, 1128, 592, 605, 1141, 611, 623, 1034, 1155, 
       643, 1043, 1168, 667, 677, 694, 1184, 704, 717, 1197, 723, 736, 1061, 
       1211, 755, 1071, 1224, 779, 789, 806, 1240, 815, 829, 1253, 836, 849, 
       1089, 1266, 871, 880, 898, 1281, 908, 922, 1295, 929, 942, 1309, 948, 
       960, 1118, 1322, 983, 992, 1005}], 
      Line3DBox[{562, 572, 584, 1130, 1018, 606, 616, 1144, 625, 635, 1157, 
       645, 656, 1170, 669, 684, 696, 1186, 1046, 718, 728, 1200, 738, 748, 
       1213, 757, 768, 1226, 781, 796, 808, 1242, 1075, 830, 841, 1255, 850, 
       861, 1268, 873, 887, 900, 1284, 1093, 923, 1298, 1102, 943, 953, 1311, 
       961, 972, 1324, 985, 997, 1007}], 
      Line3DBox[{564, 578, 588, 602, 1134, 609, 620, 1148, 628, 640, 1161, 
       647, 663, 1172, 673, 690, 700, 714, 1190, 721, 733, 1204, 741, 752, 
       1217, 759, 775, 1228, 785, 802, 811, 825, 1246, 833, 846, 1259, 853, 
       867, 1270, 877, 894, 904, 1288, 1096, 927, 938, 1302, 946, 957, 1315, 
       964, 979, 1326, 989, 1002, 1009}], 
      Line3DBox[{566, 583, 591, 1136, 1022, 610, 624, 1150, 630, 644, 1163, 
       649, 668, 1173, 676, 695, 703, 1192, 1050, 722, 737, 1206, 743, 756, 
       1219, 761, 780, 1229, 788, 807, 814, 1248, 1078, 835, 1261, 1086, 855, 
       872, 1271, 879, 899, 907, 1290, 1097, 928, 1304, 1105, 947, 1317, 1115,
        966, 984, 1327, 991, 1006, 1012}], 
      Line3DBox[{568, 590, 594, 1140, 1025, 613, 629, 1154, 632, 648, 1167, 
       651, 675, 1175, 679, 702, 706, 1196, 1053, 725, 742, 1210, 745, 760, 
       1223, 763, 787, 1231, 791, 813, 817, 834, 1252, 838, 854, 1265, 857, 
       878, 1273, 882, 906, 910, 1294, 1099, 931, 1308, 1108, 950, 965, 1321, 
       968, 990, 1329, 994, 1011, 1014}], 
      Line3DBox[{569, 595, 565, 1142, 1026, 550, 1156, 1035, 596, 652, 1169, 
       614, 680, 1176, 633, 707, 653, 1198, 1054, 681, 1212, 1062, 708, 764, 
       1225, 726, 792, 1232, 746, 818, 765, 1254, 1081, 793, 1267, 1090, 819, 
       883, 1274, 839, 911, 858, 1296, 1100, 884, 1310, 1109, 912, 1323, 1119,
        932, 995, 1330, 951, 1015, 969}], 
      Line3DBox[{998, 975, 973, 1312, 1111, 954, 936, 1300, 934, 917, 1286, 
       915, 890, 1276, 888, 864, 862, 844, 1257, 842, 823, 1244, 821, 799, 
       1236, 797, 771, 769, 1214, 1064, 749, 731, 1202, 729, 712, 1188, 710, 
       687, 1180, 685, 659, 657, 1158, 1037, 636, 1145, 1028, 617, 600, 1132, 
       598, 575, 1124, 573, 548, 553}], 
      Line3DBox[{1003, 986, 980, 962, 1319, 958, 944, 1306, 939, 924, 1291, 
       919, 901, 1279, 895, 874, 868, 851, 1263, 847, 831, 1250, 826, 809, 
       1239, 803, 782, 776, 1220, 1068, 753, 739, 1208, 734, 719, 1194, 715, 
       697, 1182, 691, 670, 664, 1164, 1040, 641, 626, 1152, 621, 607, 1138, 
       603, 585, 1126, 579, 556, 558}], 
      Line3DBox[{1008, 1001, 988, 1325, 978, 963, 1113, 1314, 945, 1104, 1301,
        926, 1095, 1287, 903, 893, 876, 1091, 1269, 852, 1084, 1258, 832, 
       1077, 1245, 810, 801, 784, 1227, 774, 758, 1066, 1216, 740, 1057, 1203,
        720, 1048, 1189, 699, 689, 672, 1171, 662, 646, 1160, 639, 627, 1030, 
       1147, 608, 1020, 1133, 587, 577, 563}], 
      Line3DBox[{1013, 1010, 993, 1120, 1328, 967, 1117, 1320, 949, 1107, 
       1307, 930, 1098, 1293, 909, 905, 881, 1092, 1272, 856, 1088, 1264, 837,
        1080, 1251, 816, 812, 790, 1230, 786, 762, 1070, 1222, 744, 1060, 
       1209, 724, 1052, 1195, 705, 701, 678, 1174, 674, 650, 1042, 1166, 631, 
       1033, 1153, 612, 1024, 1139, 593, 589, 567}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{243, 1122, 232, 233, 1124, 234, 1123, 235, 1125, 236, 237, 
       1126, 1127, 238, 239, 1128, 240, 241, 1130, 245, 246, 1133, 249, 1134, 
       250, 1136, 253, 254, 1139, 1140, 257, 258, 1142, 261, 262}], 
      Line3DBox[{264, 242, 1121, 244, 1132, 247, 1131, 248, 251, 1135, 252, 
       1138, 255, 1137, 256, 1141, 259, 260, 266, 1144, 267, 1147, 270, 1148, 
       271, 274, 1150, 275, 1153, 278, 1154, 279, 1156, 282, 283}], 
      Line3DBox[{285, 263, 1129, 265, 268, 1145, 1146, 269, 272, 1149, 273, 
       1152, 276, 1151, 277, 280, 1155, 281, 287, 1157, 288, 291, 1160, 1161, 
       292, 295, 1163, 296, 1166, 299, 1167, 300, 303, 1169, 304}], 
      Line3DBox[{305, 284, 1143, 286, 289, 1158, 1159, 290, 293, 1162, 294, 
       297, 1164, 1165, 298, 301, 1168, 302, 306, 1170, 307, 308, 1171, 1172, 
       309, 310, 1173, 311, 312, 1174, 1175, 313, 314, 1176, 315}], 
      Line3DBox[{327, 1178, 316, 317, 1180, 318, 1179, 319, 1181, 320, 321, 
       1182, 1183, 322, 323, 1184, 324, 325, 1186, 329, 330, 1189, 333, 1190, 
       334, 1192, 337, 338, 1195, 1196, 341, 342, 1198, 345, 346}], 
      Line3DBox[{348, 326, 1177, 328, 1188, 331, 1187, 332, 335, 1191, 336, 
       1194, 339, 1193, 340, 1197, 343, 344, 350, 1200, 351, 1203, 354, 1204, 
       355, 358, 1206, 359, 1209, 362, 1210, 363, 1212, 366, 367}], 
      Line3DBox[{369, 347, 1185, 349, 1202, 352, 1201, 353, 356, 1205, 357, 
       1208, 360, 1207, 361, 364, 1211, 365, 371, 1213, 372, 1216, 375, 1217, 
       376, 379, 1219, 380, 1222, 383, 1223, 384, 387, 1225, 388}], 
      Line3DBox[{389, 368, 1199, 370, 373, 1214, 1215, 374, 377, 1218, 378, 
       381, 1220, 1221, 382, 385, 1224, 386, 390, 1226, 391, 392, 1227, 1228, 
       393, 394, 1229, 395, 396, 1230, 1231, 397, 398, 1232, 399}], 
      Line3DBox[{411, 1234, 400, 401, 1236, 402, 1235, 403, 1237, 404, 405, 
       1239, 406, 1238, 407, 1240, 408, 409, 1242, 413, 414, 1245, 417, 1246, 
       418, 1248, 421, 422, 1251, 425, 1252, 426, 1254, 429, 430}], 
      Line3DBox[{432, 410, 1233, 412, 1244, 415, 1243, 416, 1247, 419, 420, 
       1250, 423, 1249, 424, 1253, 427, 428, 434, 1255, 435, 1258, 438, 1259, 
       439, 1261, 442, 443, 1264, 446, 1265, 447, 1267, 450, 451}], 
      Line3DBox[{452, 431, 1241, 433, 1257, 436, 1256, 437, 440, 1260, 441, 
       1263, 444, 1262, 445, 448, 1266, 449, 453, 1268, 454, 1269, 455, 1270, 
       456, 457, 1271, 458, 1272, 459, 1273, 460, 461, 1274, 462}], 
      Line3DBox[{474, 1275, 463, 464, 1276, 1277, 465, 466, 1278, 467, 468, 
       1279, 1280, 469, 470, 1281, 471, 472, 1284, 476, 477, 1287, 1288, 480, 
       481, 1290, 484, 485, 1293, 1294, 488, 489, 1296, 492, 493}], 
      Line3DBox[{495, 1283, 473, 475, 1286, 478, 1285, 479, 1289, 482, 483, 
       1291, 1292, 486, 487, 1295, 490, 491, 1298, 497, 498, 1301, 501, 1302, 
       502, 1304, 505, 506, 1307, 1308, 509, 510, 1310, 513, 514}], 
      Line3DBox[{516, 494, 1282, 496, 1300, 499, 1299, 500, 1303, 503, 504, 
       1306, 507, 1305, 508, 1309, 511, 512, 518, 1311, 519, 1314, 522, 1315, 
       523, 1317, 526, 527, 1320, 530, 1321, 531, 1323, 534, 535}], 
      Line3DBox[{536, 515, 1297, 517, 520, 1312, 1313, 521, 524, 1316, 525, 
       1319, 528, 1318, 529, 532, 1322, 533, 537, 1324, 538, 539, 1325, 1326, 
       540, 541, 1327, 542, 1328, 543, 1329, 544, 545, 1330, 546}]}, {}, {}}},
   
   VertexNormals->CompressedData["
1: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
3o0BxvRptopl0Oa69gtXbw+cF3OU0h9qxZ87Et95yeWCcj3KOCkPwpNPo2Im
pHIsvP5FvfJ6BhS+sHAOKh2BL2+9J35JNuKuUZsXtFtz4ZLZzgGDhiH4bryq
RE+jAJOUvvCjRQRI98i6HDP473u3cM2ztKPh5tWYUmBYSBMQD65c26e8lUb+
+K6g0k3vDl3rLsxTjjAZa8yBvun+feI8fXCrxqTqnHQXctfL2LhI5sOapxad
sL/vj+8H3r6qwswRb4Til1O0jC2vw3ejPZX1BD6x/H4gSZt8nqq/TD5P/emd
QJbwpnnGrR2YqCpFel+ZByrb/O86DfWDSTvV0VNaXch8kUO/5Uou3JHXCZc4
2/fH9wD/hHOXXyzq3NWC/id4uQx9PoGZrJlwcv3gH+OBy/DRb/4hPbX7b/7h
+WX+4fBbfsX7krX4Prk+vf5kOCQwJZ7z2D0CM+o6r6Mzm1BUj/XoYmYy5Cl7
Vj/THYLWc2Se8EdtMk9YrJPME9Z+6G6Vf7sGQ1/Rm0pIOsNc+uGUfMkR8O4b
NdBzqUYmVn/lV5RW8Jkl0cnUcAT0TvhaVbu3oWXggwd3jLPATdZ5TTTrICj6
kXm/wtVk3u/H5ff3WFRVe43lujCAVc8mckcm/GhkVIp93AdnJhJ/ONV24KeA
6+wTTdnQIPN5AN37QYJSmfW6dyVKq/rId5q9hOENMlNKeSOQ3Hz/8E/xClwM
jvh5Vt0FdM70yOLoCBhMsJ+3KerCyftGO7WFEqBD9UTx05N9f3xPr0JvnU5z
TA9ODBh9YvgWBVfY2Td3PO8Bfy/X37zN9MMOv3mbHsu8zXChud+8zfHEwt+8
TcFl3mbF8rt2Hprk86Do8rt2r/eHH90z2IuKK57MaO2LhcMLZyK19nfDU7ay
37zNGwOHf/M2Tb6ReZvFC9tvfO/uxW7pDe5tLgmg8LOhtoe9G84zL/zmZ/rv
s/nNzxyKJvMz2R+R+ZlflMj8zK4+Mj/zVH6/SEtrL8pQ9gu7H0qFtMNTu123
dMPttYUfN2v2ouPRItGaO6lwSC/ddsK9G5LZ837zNpkkyLzNI2Jk3iaDldq1
TZG9WLmv9d7dL2nQ35S9lftyN+TdJvM2M2fIvM07oWTeZqA2mYfpdpLMw1yz
8O03D3OrIJmH+fMYmYeZuZ/Mw9y4l8yr5OYi8yr7VMi8yk+pZP5kvz6ZP9mX
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
zQVFzTW7BHg9/AN0tl8j
    "]],
  Axes->True,
  AxesLabel->{
    FormBox["\"log(c)\"", TraditionalForm], 
    FormBox["\[Gamma]", TraditionalForm], 
    FormBox["Efficiency", TraditionalForm]},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotLabel->FormBox[
   "\"SVM Circle Soft Log c-\[Gamma]-Efficiency\"", TraditionalForm],
  PlotRange->{{-3., 2.}, {1., 6.}, {0., 0.935483870968}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6703759361233892`*^9, 3.67067764526409*^9, 3.6709312154572678`*^9, 
   3.670931274230645*^9, 3.6709313594065742`*^9, 3.6709314462857533`*^9, {
   3.6709315323791523`*^9, 3.670931579621949*^9}, 3.670931727027594*^9, 
   3.670931855930511*^9, 3.670932002863783*^9, 3.670932043691493*^9, {
   3.6709320817556334`*^9, 3.670932092729817*^9}, 3.67093213956325*^9, 
   3.670932184430917*^9, 3.670932321838228*^9, {3.6709324866350594`*^9, 
   3.670932552932519*^9}, 3.670932672382707*^9, 3.6709327650856447`*^9, {
   3.670933197895687*^9, 3.6709332254231157`*^9}, {3.6709336959536867`*^9, 
   3.670933705927161*^9}, 3.670939379753831*^9, 3.6709394173146763`*^9, 
   3.670939701547813*^9, {3.670939907118675*^9, 3.670939922320163*^9}, 
   3.671540978233749*^9, 3.671541966565967*^9, 3.671542054424143*^9, 
   3.672570344211276*^9, 3.672571593092313*^9, 3.672643896121169*^9, 
   3.6726441925908127`*^9, 3.672644358089999*^9}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
   "], {{
     {RGBColor[0, 1, 0], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
r8Kfin5mxa7KO1RX1NzfRfv/AZ2wUCM=
          "]], Polygon3DBox[CompressedData["
1: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
CbkJOWAfXV+IDgpfLbxpcQ5HLncTPio7R2Q8Oc1mxTka+kFO1LM4ZxkT8/Uo
5gBvIJavzA2+LzxW+BLhDYo5wBG1c0K4QZ5paOgzz0qORq4GBwRRQU5MbnyZ
4PrFv+G36Od62ZzYZbVzTriyFmrLqb1SnG/C6Z0S863F2dDv166cDw0pjnmJ
fbvo2uXxPOwVPGPzOCOcFbilZrGPl9bOKZeNGIJYIqsVtV81xy/Je856WC/c
JxzUStn7c1Po33r4Io39I/mZW8Rc+HZ8fI51XF6bA1whe01co09uDT8FfwCn
2DL7zPwvfwiMzqK72IelYr+GhT1YOptvha8bHPJmsVby/g5qf/NOa+cwg4g9
1M7MztNHqg1Uu6UyR3FiNl8B3zA2MMHunNry87LngOOA22Du7bJ1CZ3C9pBv
jauc41yQnTORO5GjnR/PxNpYY7OwD5NDP+BC0M8pwhdW5haOy875yPXOiUaf
vJ9caljkD+PjfnDecN83cI+wfz+oddH1rmE/yc2wieA5YQ/Q7zVCZ9ALuOnV
o9Enz1877M3U8A+bFD8jzzoo9BkdRpfxJx3DHo2u/Y55192zdZ8z0DXbxmGv
2JPuoRfoCv6qS+gI1+gzHh+G7PSYv2vIusXcH8V5xR5slu3/xoW93bDYh00K
+7iR+ltlyxiDL+T8XlxbH+Fe0G98LT77ufBf+KMBuvZTsv8ZVFsHG+IMoffw
UKtGQzeRI2PPu4QPeyb8xZCI/9cN+3dl7fPTKuzHzbU5Fri2DbPfFe8MW75j
9lpZM7aKMYzlfLfOXgNrOTcw8QNc8qHCfyXzUeg6On96Nuf2am0ODy4O/g2u
4daQN8e2cKaL+RI4FLgUOIwLk6/BpXSvPBYO52LsVDK3Q8xFnNUU31PM4a9R
m/OB24fzuJTfJHMh9NvX5oi4xvnjLN+sNkD9g9QOVDs4G9PH9vP8XCNe/Eat
k+bpXByfn0zcq3ZeMqe0iuZvV5lrgjNaOeLFpYpzol6VOSf4ANbSrjZmTSPV
rkmuM90dDf6O9SCjJrJe7XyGXAyOCK4IjqpFcf6yIbqua1cU839wu3C8NySv
6eCwOaydPWLubUNOjeCa4pyO3A4ObbWYH25tiNr5ye+M98E7uCqeeWTsMft6
rdp1yXNtUDu/HRtjWSt7wG/gLJ+prTPozo/CTwmPEt6qmGOcyVqq4B6zY4sJ
apdhq7NtFTZraDbHBFcCZ7JzMd9xb+UaHnwQnO8HtXUQXWQOfjc85oZDfrc2
5wq3DMc8t7Y+Y8vhxODGqJlcn23D4YzhirHtJ8UzDY25l9S1j2vb70vDxmJr
4VaR9dbvti/mMW9Ruz17bu7R0OAaA7UGOMabkv0psQExLbEt8d4jtfUXLhZO
Dm4OzvbIeD58DT7pmOx2dDwzssOzOb6jQ3Zc+JvZmuOX4jmZmzNyRPb62PuX
JP+9mM+DGxwTcuKp++L9wf3CiRCfXif8H/W/VZsR8esW6u+ZLWMMsSw2grPG
mdtf/X3Vrq/MN/9QfD55HmK0hXEGOYtwGE9EjDM88hniB2qAA8O+dijmiJZO
5qjgjuCo2qq9nM1d0V8yuQbItfHZnB1cXesGc0JLEBdV5oqe5neV65PtJZsu
/Kja3rrXPpz9BnNNT7IfxZzel7U5PLg+aozUGuFI9yrm5L6urbPoLhzfD7U5
bri/NYWba/yLwgcUP9PftTkunpWaILXBWcK7Sr6H2u7FPN5D2ZzXv+hOZS4M
+9G1dr4Ld0L8t25tGwIXij2lNgon3qzYvhErEjM2KbZ554ZdxdZic7qE/NLk
mnCn0N/lwsZj6+FU4Fbm6xk+rLzf8MfUGKk1kr+upP4v2bVXarCLs/1Dx9qc
Ntw7c3Wubd+YE46v1v/plbk/7O9K4T/g8kfEWYcbXSbe1/OV658tGsxRtoz3
e2CxjqArcOZvZ3O6K5BHVuZ638/mob9S+zqbs4a7pob5jvDs7FoMfHDnBtc4
V07mRKl9UhPt2uC68LzQQfTu1Wx+Hv2apfaG2pvZY1sl10w/iDGM/Tyb21+Y
zY3PiedlTsZRa6a+vCP7W6zT4+Masu+za9HfZdemmX+B+p+qfYJdzt5/zhi1
bDgTzh41eXSfM7B/cQ2ZvWRPp2j8fdm6iE6uEHzw28KfqH0c8/NuqVlRu2IP
kTHm/bg39YAFlZ/hp+w+177N3kP28tN4XmrO1J5fF/5MeE52zeC9eFfUF6hH
z4/fDwl9bit8anJ8Qa0IPo14Av9HLYkazVnJHBxcHDnmsck1mCYhX6KYj6P2
QQ2kUTFft1xtDo/aDHwRtfIOlfkwGtwYvBEyOO2vK3PScNPUuOC64bx/y+bc
f1R/9cpc/PO898o1d75PgM+jFkRN6O/sejHffqyotklyDYRaCDWoLZL5LJ6f
mtKRwjuo9UmuKx2QzNe1rl3DoJbBxzJwe3CCcINwPsSPxIvEysTTxOrEv8TK
cAjYcmL8dwPDLUwM+06+NLayz8f3b5xcs6ZWDb8Ohwo3tk1tbrVvyOBI4S/h
K/+uXNOhdgBvSm0HfhReFb6Ta/ThWuEbU7zvVMzvsRbWdGhyDY394/0dlFxX
/yb2k32hfs61PrFX1PSo7bF/f2H7dW1a8nciLyXz2ftr/sMqf0sAxw3XDR++
YjE/vmXtGI1YDX6cb3fgO1coXjNrh998MpkzgTvhHtyLPt8W8U3KtIh3O4S+
YZvRYWJj4kx0m5pli4ivGxfHk+tHPHxlxGzXRtxGLMg3TnzrBF9+TzLf3TP8
A/w48cmGtTnKCRE/9gj7zFzwxY2Eu1auncFHU+uDT/0jm6OGq6am+2d2TZTa
Unu1fZI5HLgcakL7JX+zxLdL8NH9km0lvgMfgh0kPsXWw0HDRS8O2/Vzti/h
meH24exZC/WA7TR238rfalAP2KQ2v8S3HNQ8qF8QHy9fXN/g26u+wncm1zib
h388KfmbGeoL1C9mkytk26a5Ye+Iz56vHWOdEPYJW4dPx7djT5dJrrnx7RM1
OGpb2POZ2T4L34UN3zHiiS8ivrg1u2YE/w1f/EJyDEIsQlxDrNMh5qPGt1+x
v2qTbBOxje3DnmOzZ2T7w+WTnxHbTQ2wWfi3/sU+Dd9GzfOZ7G928H/Y54OL
vxkgHh0v3KuYT3i5dgxJrZaYjtgOzmOvbA4ELgROBW5lcciJAbcu5j/erB1z
EntiM56sHd9iS4hJX4rxx2d/gwAfSny6e3a+wbcS8Hf9s+/1WsT73JMa3/SI
n7cszl/5doRvTE7N/uaC35O/blMcI8+O+PZQyS9Wuyibkxwd8QL7QwxwULG/
bx3+En9O/M2zExMTGxMvP1qbb6e2SM2W2i3v697seI9YlJiO2I4+tWT0hWtt
It4kPnwgu97UL+zDysX1vWNr8zV8i8Q3c/Dt8N2fJdcP4Qfh479OrjceUZs/
59sk6ofUNg8RXrO4xgmGj/88eU1vRJzCWonHqL2iH3sWx6e/166B8y0b8e6i
iF93Ko4RiBWol9yZrbPUkokn0GXiJ74Vo0b7UnaNt1HgfdGV7LWzB8TexCO/
1q6B860b34jwrchM7EdxfP1VxMN9i2vs5I/E45Oy4/Oc/I0D3zq0iPiGHG2X
4nyA+zPftOx6z/za+eiwiEfaJcc4fBtH/vhp7W+e+NaCvPGtwOgN+ek7kR9s
i3/Af2bX8e/Kzk/51ukxya/Kzk/5Fgp+/fLsnJHcEX5wu+I8c17kD+SZ5Mff
Cj9X+dsMclDGICMXhUf/LPaL+/LNEd8ekU+Pyra/31f+ZoNvxch5WcNFoftw
8MzBb3l2bNWCeN/YrP8DvmZaLw==
          "]], Polygon3DBox[CompressedData["
1:eJwtlnWYV0UUhn/ce1kBKekFlpburiWFB2mW7lhAGkkRUEoQFkFaShQJaZCS
bpDulJDuRhrE93vm/PE+M983Z25MnJmMbbpHdfNCodAmiA3NEGkoH8FDqIr+
G87ByiAUahUrFMpA+QT9Be390d9Abrwafig0AW8Neh1E4jUmLjXeA7gPldDj
iNtD3aMeC+oTt5CyEV4T+jWGdHgboBP1LJS3ab+jWEhF3B24DSXR4Xz4W+JW
8NwtsBV6w0a9F/8+VOcZp4ntijcGPRZSEbMKduG9Qb+GOsQ1Jy4t3hN4DLXR
U4lbQ/00MadgBPoPG4/ztD+Ah1AIfxpxB/EPQS90C3tegI4HHdCjoDBeEXRR
mIn+By7BOp7bAS8z5R76HyYuLX4EnEUfpIzCq0hMBdiguYBMeBHoj8Cnbzu8
DBpndCyBF07/H/GWoZdCCbzteiZeco0lHETPhWN4KdEpoCVxU/BW452k3wkY
gl6rcYHszEES4nZTrwhjiJtPzDz9H32vwO/Uy9JWC2rDNjhA3Cf0SwYtiDlM
WRevEbEt4Cz6DDTG64FuCumJu641Q704ZSWeUxly2Dc0x/sLvRfqwGT6LiF2
MXyG7kb7a7x31FsR39pz6zQc7xW8hfe0bSfuK/rkpHxB+0s4BQ1pb4BfHyJo
646XzebXh2j0LojG647uBlmJO671ixeNbg9X0Avx61I/YnOvNVCKd5eEqzZm
xSh7wAf6ttQaBm3aAsTkh2s2FhV8twcnEjcXPQdKo3fCIbzU2ttwHJ0OIuAk
fScQl5/yhNXT4xeBovCnrcVrntvzTyELfmY4ozVBWwHKe/htecdw9JeQDW81
tKGeUfNF+w04BkdhlbVdpH4LWtG3H3oA/IsuzvNH4k1GT4JP0fOVY7RvA/cM
PesRtCeuL/7XkIu2SzCbehHKcvQrb3vmACyy8U5DmQs/J1y0+BLUy8BonjcL
/TMUou2y1qatyYZa+56bywZ4UcoZkJq4Edr/eIXQhWGK5/o2x+uI7qL/0NqE
QdTzUr6h/a3n9oL2YIj6B9pWo6Npv4tVVu/SuoM2kB7vP61Rlb7Li8qPe+y5
r6g/h460D1WughBxg2hPRr0nbUNgKHTWfNKcAD+xcgcxMXhF8Ippf8Fvlt/a
4fVE94HsxBXmmcPxVqCnQ0G8rMRlxAtDxwYP7wJeU7zW6LaQCe88/KK1zTOq
QjVbb1p3F6ytMOUz+nag77fKN5APbx9ebbzq6FoQHrhxSYeXCJ1Ea9D2YBu8
wehh8A49STkf7zj6mNab77yJEEb+uIRXWfkBDihfaO/R1tN3+zyr8qTWoHJ5
4OZEc9OF+kvlDuLmUK9G+147N3V+DoS8tKfTfoAExMzz3bkb6OzAq2H5r57O
XfTnkCJwc5UfLys6h+YJrz9eHrwC6LQQX99peShce1j/5rnzvCn0tPzxgXcu
gcWQ2s7NqMDlSuXM/HjplYt8d9ampE8cYp5SvsZbrrxo6zQM1tsZsFtrkbj3
UE9nt/Kv7hTExNHaDdz+Vx7YZnn1sf6b+ibqdYlvC+2UW/iGeMrJgctdu2Cl
zlvIZG2b9b1a8zDXxjul5elOvPd79EgII24ofgrqcfVe2vvpnIKauu9oviG5
cq1yDCTjHc+0tvCGKc8SlxOdB5JqbRIzC5IT9xxvkc5U5ROtPds/ozWPkIu+
ubVu4Qd0daimHG5nUBPqw6Eg9bzaQzDOc3O0De8W+qZyEbqAzU0rnac6H6A9
uihxJYgpCQt0Xtt31Q7cmGnsltm83cO/C7N9d1eZjrcTvUPnh/K/4vGO6kzS
XvfdeGncxto/jqQ+B3+D7mHo21DNclkXvNH6V42FrZcdeE/RT6Cm5htvv85a
9EtYik5qY77Ad2tno/YGz9sI8yzv7/fcXSqCvi/gue5tvssHdaiXJ6YcrPHc
/eUoXgblI7iG7kWZXR4xmWGQzVFuvDTK4fBx4O4DuhcMoJ5QedvOW527gy2H
xqHsiM5M37jafxAEbl3VwotEl9baUM7g3xJT7tB5C6d8d687onyFn1B7lL7f
UubDy6RzAhIpvxA3FW8jegOUwZuhcxnvIvoCVMKbrn2IdxZ9RuOPjm35bLKt
a63vX2E9cTfwryvH0PeQ5+5clZTvYJvn7tC6S2ezb29GXBnKSJ3zdi698t19
6KTygN3Vb3puf6yj/Qr6MlTR/QRvK9419FWYhn6t8wdvFDpGY+i7tbFPY0pb
fGhC30i8GLxpxEzVXvLd2TMCb7z2i+bO7pS6Wz6ynFI2cPdC3Q8fU9+C18B3
9+K2OgMtL/Tx3Dj/xPP2ovdBB9/l581459HnYLzv7pOT8DZrnKC8co7OdOoV
KbvQ3lW5E+rBc2uL1pgoZ9E3Fe/zdW7Q1tnOjUaeW0+dIMp3d9bt9NsNzdFP
7PvLUTZCNzZUf2VnVTc7R3We3tH9C69U4O40MXYHXqk5tzuR7kZ3aV+rfUl9
hmKpL7e8qvxaBX8cfXfJV44hpi9+Drws6GzwHfq03QVz+O7uqjvsMvylMNOe
m4zytn1XddpbQEsYaPssLHB7tDfcs+8qHbhx1Hhe9dw9rCt+L7iP/h+YSNcE

          "]]}],
       Lighting->Automatic]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0TssQ2EAhuFTquoyq0QM7SLu12jFxmBiMCEmzG1MwqxzzcyMwsxGiEXC
KO73BEFcZs+fSPr2+U6H/5yTpmcK4/lYFEULaiqLIp+o2VeLyu1WxtnBTlXY
XUywh5XsZZ+Sdj+rmGVO1fYAa1inhJul2cC2cBazHOQQRzVlT7DAWS4zzxIX
w7U27RL3uMpjrnNLb/YOy9z3gCmeMMNzPunIyz3ylz96sL95z09+6M5+5204
kzd85Yuu7WdehfPCWbq073nBU9W73yHj3A1nea5tnnGDa9q3V8Jzsxh+41J4
dxXtOc5zktMc4wiHmVO33c5GZphkil+qVez/f/0DXJo6Dw==
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{551, 547, 571, 1122, 570, 597, 1017, 1121, 615, 1027, 1129, 
       634, 1036, 1143, 655, 654, 683, 1178, 682, 709, 1045, 1177, 727, 1055, 
       1185, 747, 1063, 1199, 767, 766, 795, 1234, 794, 820, 1074, 1233, 840, 
       1082, 1241, 860, 859, 886, 1275, 885, 914, 1283, 913, 933, 1101, 1282, 
       952, 1110, 1297, 971, 970, 996}], 
      Line3DBox[{554, 549, 574, 1016, 1123, 599, 1019, 1131, 618, 1029, 1146, 
       637, 1038, 1159, 658, 660, 686, 1044, 1179, 711, 1047, 1187, 730, 1056,
        1201, 750, 1065, 1215, 770, 772, 798, 1072, 1235, 822, 1076, 1243, 
       843, 1083, 1256, 863, 865, 889, 1277, 891, 916, 1094, 1285, 935, 1103, 
       1299, 955, 1112, 1313, 974, 976, 999}], 
      Line3DBox[{555, 552, 576, 1125, 581, 601, 1021, 1135, 619, 1031, 1149, 
       638, 1039, 1162, 661, 666, 688, 1181, 693, 713, 1049, 1191, 732, 1058, 
       1205, 751, 1067, 1218, 773, 778, 800, 1237, 805, 824, 1247, 828, 845, 
       1085, 1260, 866, 870, 892, 1278, 897, 918, 1289, 921, 937, 1303, 941, 
       956, 1114, 1316, 977, 982, 1000}], 
      Line3DBox[{559, 557, 580, 1127, 586, 604, 1023, 1137, 622, 1032, 1151, 
       642, 1041, 1165, 665, 671, 692, 1183, 698, 716, 1051, 1193, 735, 1059, 
       1207, 754, 1069, 1221, 777, 783, 804, 1073, 1238, 827, 1079, 1249, 848,
        1087, 1262, 869, 875, 896, 1280, 902, 920, 1292, 925, 940, 1106, 1305,
        959, 1116, 1318, 981, 987, 1004}], 
      Line3DBox[{6, 17, 241, 28, 260, 39, 281, 50, 302, 61, 72, 325, 83, 344, 
       94, 365, 105, 386, 116, 127, 409, 138, 428, 149, 449, 160, 171, 472, 
       182, 491, 193, 512, 204, 533, 215, 226}], 
      Line3DBox[{560, 561, 582, 1128, 592, 605, 1141, 611, 623, 1034, 1155, 
       643, 1043, 1168, 667, 677, 694, 1184, 704, 717, 1197, 723, 736, 1061, 
       1211, 755, 1071, 1224, 779, 789, 806, 1240, 815, 829, 1253, 836, 849, 
       1089, 1266, 871, 880, 898, 1281, 908, 922, 1295, 929, 942, 1309, 948, 
       960, 1118, 1322, 983, 992, 1005}], 
      Line3DBox[{562, 572, 584, 1130, 1018, 606, 616, 1144, 625, 635, 1157, 
       645, 656, 1170, 669, 684, 696, 1186, 1046, 718, 728, 1200, 738, 748, 
       1213, 757, 768, 1226, 781, 796, 808, 1242, 1075, 830, 841, 1255, 850, 
       861, 1268, 873, 887, 900, 1284, 1093, 923, 1298, 1102, 943, 953, 1311, 
       961, 972, 1324, 985, 997, 1007}], 
      Line3DBox[{564, 578, 588, 602, 1134, 609, 620, 1148, 628, 640, 1161, 
       647, 663, 1172, 673, 690, 700, 714, 1190, 721, 733, 1204, 741, 752, 
       1217, 759, 775, 1228, 785, 802, 811, 825, 1246, 833, 846, 1259, 853, 
       867, 1270, 877, 894, 904, 1288, 1096, 927, 938, 1302, 946, 957, 1315, 
       964, 979, 1326, 989, 1002, 1009}], 
      Line3DBox[{566, 583, 591, 1136, 1022, 610, 624, 1150, 630, 644, 1163, 
       649, 668, 1173, 676, 695, 703, 1192, 1050, 722, 737, 1206, 743, 756, 
       1219, 761, 780, 1229, 788, 807, 814, 1248, 1078, 835, 1261, 1086, 855, 
       872, 1271, 879, 899, 907, 1290, 1097, 928, 1304, 1105, 947, 1317, 1115,
        966, 984, 1327, 991, 1006, 1012}], 
      Line3DBox[{568, 590, 594, 1140, 1025, 613, 629, 1154, 632, 648, 1167, 
       651, 675, 1175, 679, 702, 706, 1196, 1053, 725, 742, 1210, 745, 760, 
       1223, 763, 787, 1231, 791, 813, 817, 834, 1252, 838, 854, 1265, 857, 
       878, 1273, 882, 906, 910, 1294, 1099, 931, 1308, 1108, 950, 965, 1321, 
       968, 990, 1329, 994, 1011, 1014}], 
      Line3DBox[{569, 595, 565, 1142, 1026, 550, 1156, 1035, 596, 652, 1169, 
       614, 680, 1176, 633, 707, 653, 1198, 1054, 681, 1212, 1062, 708, 764, 
       1225, 726, 792, 1232, 746, 818, 765, 1254, 1081, 793, 1267, 1090, 819, 
       883, 1274, 839, 911, 858, 1296, 1100, 884, 1310, 1109, 912, 1323, 1119,
        932, 995, 1330, 951, 1015, 969}], 
      Line3DBox[{998, 975, 973, 1312, 1111, 954, 936, 1300, 934, 917, 1286, 
       915, 890, 1276, 888, 864, 862, 844, 1257, 842, 823, 1244, 821, 799, 
       1236, 797, 771, 769, 1214, 1064, 749, 731, 1202, 729, 712, 1188, 710, 
       687, 1180, 685, 659, 657, 1158, 1037, 636, 1145, 1028, 617, 600, 1132, 
       598, 575, 1124, 573, 548, 553}], 
      Line3DBox[{1003, 986, 980, 962, 1319, 958, 944, 1306, 939, 924, 1291, 
       919, 901, 1279, 895, 874, 868, 851, 1263, 847, 831, 1250, 826, 809, 
       1239, 803, 782, 776, 1220, 1068, 753, 739, 1208, 734, 719, 1194, 715, 
       697, 1182, 691, 670, 664, 1164, 1040, 641, 626, 1152, 621, 607, 1138, 
       603, 585, 1126, 579, 556, 558}], 
      Line3DBox[{1008, 1001, 988, 1325, 978, 963, 1113, 1314, 945, 1104, 1301,
        926, 1095, 1287, 903, 893, 876, 1091, 1269, 852, 1084, 1258, 832, 
       1077, 1245, 810, 801, 784, 1227, 774, 758, 1066, 1216, 740, 1057, 1203,
        720, 1048, 1189, 699, 689, 672, 1171, 662, 646, 1160, 639, 627, 1030, 
       1147, 608, 1020, 1133, 587, 577, 563}], 
      Line3DBox[{1013, 1010, 993, 1120, 1328, 967, 1117, 1320, 949, 1107, 
       1307, 930, 1098, 1293, 909, 905, 881, 1092, 1272, 856, 1088, 1264, 837,
        1080, 1251, 816, 812, 790, 1230, 786, 762, 1070, 1222, 744, 1060, 
       1209, 724, 1052, 1195, 705, 701, 678, 1174, 674, 650, 1042, 1166, 631, 
       1033, 1153, 612, 1024, 1139, 593, 589, 567}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{243, 1122, 232, 233, 1124, 234, 1123, 235, 1125, 236, 237, 
       1126, 1127, 238, 239, 1128, 240, 241, 1130, 245, 246, 1133, 249, 1134, 
       250, 1136, 253, 254, 1139, 1140, 257, 258, 1142, 261, 262}], 
      Line3DBox[{264, 242, 1121, 244, 1132, 247, 1131, 248, 251, 1135, 252, 
       1138, 255, 1137, 256, 1141, 259, 260, 266, 1144, 267, 1147, 270, 1148, 
       271, 274, 1150, 275, 1153, 278, 1154, 279, 1156, 282, 283}], 
      Line3DBox[{285, 263, 1129, 265, 268, 1145, 1146, 269, 272, 1149, 273, 
       1152, 276, 1151, 277, 280, 1155, 281, 287, 1157, 288, 291, 1160, 1161, 
       292, 295, 1163, 296, 1166, 299, 1167, 300, 303, 1169, 304}], 
      Line3DBox[{305, 284, 1143, 286, 289, 1158, 1159, 290, 293, 1162, 294, 
       297, 1164, 1165, 298, 301, 1168, 302, 306, 1170, 307, 308, 1171, 1172, 
       309, 310, 1173, 311, 312, 1174, 1175, 313, 314, 1176, 315}], 
      Line3DBox[{327, 1178, 316, 317, 1180, 318, 1179, 319, 1181, 320, 321, 
       1182, 1183, 322, 323, 1184, 324, 325, 1186, 329, 330, 1189, 333, 1190, 
       334, 1192, 337, 338, 1195, 1196, 341, 342, 1198, 345, 346}], 
      Line3DBox[{348, 326, 1177, 328, 1188, 331, 1187, 332, 335, 1191, 336, 
       1194, 339, 1193, 340, 1197, 343, 344, 350, 1200, 351, 1203, 354, 1204, 
       355, 358, 1206, 359, 1209, 362, 1210, 363, 1212, 366, 367}], 
      Line3DBox[{369, 347, 1185, 349, 1202, 352, 1201, 353, 356, 1205, 357, 
       1208, 360, 1207, 361, 364, 1211, 365, 371, 1213, 372, 1216, 375, 1217, 
       376, 379, 1219, 380, 1222, 383, 1223, 384, 387, 1225, 388}], 
      Line3DBox[{389, 368, 1199, 370, 373, 1214, 1215, 374, 377, 1218, 378, 
       381, 1220, 1221, 382, 385, 1224, 386, 390, 1226, 391, 392, 1227, 1228, 
       393, 394, 1229, 395, 396, 1230, 1231, 397, 398, 1232, 399}], 
      Line3DBox[{411, 1234, 400, 401, 1236, 402, 1235, 403, 1237, 404, 405, 
       1239, 406, 1238, 407, 1240, 408, 409, 1242, 413, 414, 1245, 417, 1246, 
       418, 1248, 421, 422, 1251, 425, 1252, 426, 1254, 429, 430}], 
      Line3DBox[{432, 410, 1233, 412, 1244, 415, 1243, 416, 1247, 419, 420, 
       1250, 423, 1249, 424, 1253, 427, 428, 434, 1255, 435, 1258, 438, 1259, 
       439, 1261, 442, 443, 1264, 446, 1265, 447, 1267, 450, 451}], 
      Line3DBox[{452, 431, 1241, 433, 1257, 436, 1256, 437, 440, 1260, 441, 
       1263, 444, 1262, 445, 448, 1266, 449, 453, 1268, 454, 1269, 455, 1270, 
       456, 457, 1271, 458, 1272, 459, 1273, 460, 461, 1274, 462}], 
      Line3DBox[{474, 1275, 463, 464, 1276, 1277, 465, 466, 1278, 467, 468, 
       1279, 1280, 469, 470, 1281, 471, 472, 1284, 476, 477, 1287, 1288, 480, 
       481, 1290, 484, 485, 1293, 1294, 488, 489, 1296, 492, 493}], 
      Line3DBox[{495, 1283, 473, 475, 1286, 478, 1285, 479, 1289, 482, 483, 
       1291, 1292, 486, 487, 1295, 490, 491, 1298, 497, 498, 1301, 501, 1302, 
       502, 1304, 505, 506, 1307, 1308, 509, 510, 1310, 513, 514}], 
      Line3DBox[{516, 494, 1282, 496, 1300, 499, 1299, 500, 1303, 503, 504, 
       1306, 507, 1305, 508, 1309, 511, 512, 518, 1311, 519, 1314, 522, 1315, 
       523, 1317, 526, 527, 1320, 530, 1321, 531, 1323, 534, 535}], 
      Line3DBox[{536, 515, 1297, 517, 520, 1312, 1313, 521, 524, 1316, 525, 
       1319, 528, 1318, 529, 532, 1322, 533, 537, 1324, 538, 539, 1325, 1326, 
       540, 541, 1327, 542, 1328, 543, 1329, 544, 545, 1330, 546}]}, {}, {}}},
   
   VertexNormals->CompressedData["
1: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
W2Ylv5niTcpvaq3mN+2/mOZ1zUfA+3tiBpPbQ4A3YI28Do4rx2ek9lDoUz75
9/Z0JZI4pcmWNCIXWuWfH+nfGejXht6mijGDcnvgoxGP68D8WPw3JR4mHVR8
OOQtxZI5bL7ul0HM18Syk/KYL0XzVvKYUqv5O0o9Ep9J/x/ym0zKwSGefmiP
f7yumacJyqClvkXMU4sEWvlpenohQ939lw946qOGb9YJxPXqsCIpH/qiLGLn
HPYb82qe5Z7qn/Okf/B5AYOCfHILFGd+xMGHXBldIZjOf8eccFfclJFKB+3S
IeProZRFHrwbyn9h/qWAlFcV30HKq25czav+FedaJGcr9XQE9l2B90LILSCG
X0qamNeQ5s7jI+bPjEOT37zAZaOkktvfyd85nJ29NfTDHN6qMytn4XkQ+Eqs
npgnWv51celBSRQIG8qye7vch3pX/q/BeHxjFVQUJhZsQfcqg9e3JVtQZDk6
/hrXXxq3eXTZ0wtGDpRTPJG/Di0PrA9FYk7xsI7Dl8wV3tKEyN3xtAbTzKet
JZhrWZ+9f4FCB+28Xy94Gj+n7r803UP0T3nJHIEX158x9c37sawNOuxnCUQ/
1Bhx1p4k04HlxKmWuxTKqDnpzUp9+/M72p5hXrur9nkHHsdxv4t8c5jLu8c/
ySS7A4pNCubuOG6pWC7mEfOkX0xVtMo9/WDt520P2vD/q+5WaDYm5kObP6YJ
kikjB67q1HFcvrw56bD0H/yZrw5DPp73YehD7iZhMiNgyytZJiPmqaUHtj4m
uwlT1htt2Zk95S6YMTwP/Bvjwh76PYuG3A4MWtuPhTN7lnvGHLAk5sePvqpc
ysLxLUwn7XUKl/Je57t+/g37O7THzp3HcSXubM8zjcuFuuypfGyn4FbwfDFe
17goK6oVlwIgknwPCy2e72uzLKneYz/+shg/cqvSDSp5zpuU4vr8Y9nc1OQ6
iIe3IagXr/fOYq9XxuWOb1d4N56Pbgc9mk5jP0/K8q7MR5+9pg0xnh7AvSlu
U6CXB6COqxPemO9SovCNx37jkZhgm5R3hpG5xgTiuKh1lmx0wXZc4kX6t+L5
VaN9Y4E4v7Su95PvxfPk4EInGQGXlzdWrviB5XVDcoa8N0SIejUNVtjDs2+T
c8T1/9Lb4vkbeNx9r4rxCZDJwtj8hULTv+G3nEAaCS9sv0px2bUex8mmkgdB
8diO+wuee6aYv1GpfxUsfx3JVTYJ3vkb9ic/2EVGY/8wTFML03lZoQrX3Q7E
593RHTsVNMjsYEpBr8aB3AhVn998u/Nv2B/eZyzYsWwLoTkHpT/iecYetc0y
j/i8WFTOPorn55et9GLGXvpob1fkJuJzXMpHjFCF+7lcSCxlQeXxd9rl3/nT
3/w3/81/89/8N//Nf/Pf/P9Q3rhXjdFcsgny2qjenLKrQBySXA/djCeQ8445
PrWBKlA+f6ro0NMkJG7PTDYb8tf73ikrGa3u4GdQ4x/iZbGYijruLH9FrQR0
5WugLU/dHWBQzS6I0PBClM5lUf34PHVS4r2pHVUbMMiNf1ffWIYsmv2Gow+M
I5PeBQtCdzacM2jznI8MRin0h3hTx/779tuaQtbW9gfr4eq7zZmMSY/QmBef
uDrvP9ceXvmrp5VE66BKoz3yYVAGev60yTDzKAEx9LI0SDBlAhkh8bPe/AOk
25zGWDz53+eHHVzsDhdiY+Cpv4i2tNYDtMN49Bfdwj/XHurUov71x5NBg3yt
m7C2P7odfvd05CwBvaw9eVHiZy+c7VflNRCuQcbVWayf9IZQQ9GpTVylX+Hi
8Xu8tlo1KCR+Xlond+Qv7ScWTDVfcugCMyclmgs0gI51XdhLETqKdlXMf6ye
7wB1k8pJoZJ0tCd7bt1DpzGU+D3R0YN1EO5aUWcH0lcg8iAev5Ov+pHsW9Og
7R+bYcMncjpKunS06Nt2OH/txH+5v7pOowpmU3XQpuoixS+YhUy7CnoapAnI
WVj7fb5nEbwb6X4TohyPthpuzd7RjM/XzOfCjNW+QsLB5G2fGyvQcnd2H5/E
6D82LiVxt1nLk7rBj3HscRhDFXqoVbm178gIGrYl6WdQCEk/w+9J0s/8V+3/
U1znG62UHcMn4K7hUWvrS0Td72zuZlH81/3/V7zk0cy450gvPO7kC7ewS0J6
63TzPlIMo9EDi+eFjYZB807+GybyGjTPYjwom9GD+N5eJ1yiHYawN57S285V
IxYeGt3OI71ozQdBZL88CJt2e27YIPYKyVzZgd5p96HiOWv9ZJs+sNgcm3tJ
qQy1Pxc0PnR+CHEp2H8brOmHL13Xe/Zfq0Hp8/uec1YPIDLKCM53cengtTZP
nW+TFWpZF8/LOUVAiWeiu04q90KiwGiO4PkqxPOUcO3KxmFEvsNRUvx1N7ju
dbp1NLMA6b9OPTV3fQS93XZQ27jiKzw9maEaY/kEHdxpqzYsPYo67yVUjUR2
gtIvBgsLpQiUEl+tTKM9hnKPj9N9uTAEhiUxn+pEi1H843Ulmp59aIs3WW7J
/nZ4ta1o8urBWJTKEa/BITiOuv3tqoJDmmFJ+M6vsPJ4xNzlkXmFbQLdPsGr
Va/9DoRFqzduRPGIdpiXcpGMgMZ5x3bs3jwIohx1yVUBOcgpwEH864YBxEBW
7Hfcpwqypz5bmVTHoLqHld77IwlI5FHjsemUZ3A9doNv8OZgpGGXrS3ZTUBD
wxGqt/xGYF2huWDI9yz05Z779tKabkTmIiXINtkDVKEOPjHBxYhj57nbRiHD
6HDYtjWDZ3phn4fWk1d30lHUE7iVbz2MYgX23Rbf2AdHZSs4ggqLUA63u8nT
0iEUTBugpc85AD5BjMbXe0qR+OU34+afBtCkKEmHQ/+EpMMZayTpcFKoa5RL
hwbhslYhy7foUlRbq529d7YPld7WSp2eb4U53oT+XR5PUIrG3SVqi3Hkya7j
aKI7DDmUlVeOrStBe10KDGb39SJxZC99nXMEdsgefrhtsQjVKNTFmUn1ICl/
IW8VkxHQUpbdErytCHXq2ntSN3WjXFqSDueEJkmHIxFG0uFUKTUnl+YOA7eJ
Rz1ldDHaU6kyGl3Tg8ioLdkCm76CcPmk6w6WbET3+kJsJO8o2hbqPKyRMQSw
Q5HG43YpUuVNkXy1oQ/p5cjfpecchJCySpOPhmVoHU1eSf77fiSQltDS/aIO
hBmHdoS1xyIOivat5ooEZCY1FOR0qR/et5hGHIl6jvaRzUbeDBtEB+21H59M
7QXeyzXmjoL5aHl5OHUN5zBSqTMILEjoAYXz+5KKFNPQq76eMu8fwyh0PdrD
2/sFTC+rnumUj0MmEZPm3uRjiLAvJXxmuR6cUphd3C+HovRmelUrVgKKrrlv
E5Y/CBzcvzjWbytE7af3SY8o96M8aQqlifxGKIihXke7KxqZqPDa+JVOoA4f
0d3ifJ+gOeChjfPPJETv/cPj+eI4mj52v7ejsh0u9X7fsmCWhtzaqHTSqcfR
qxswe7lxAG5qsulE1ZagF7bFUcK7B1CNpCivlFAXyPdYlJHbZqCy+gW/yp5R
FN/h/pjbtxsIQp+K8rIy0DN60x+nno2gB90vi0G2F6r5Qs8kXclALdFFrR5e
w0gs+JucquUA3I8curftSB46VXX+bnfuAPr1jVKleNcAKPlmXHXiykT+87ta
LlAOonXk3qI3TQahul1t55oHWYhSQ35DTnE/Gq3kWefqMwRfHtn6bX2YjTTv
exak2PUh2/C1wmqmfbCUwzF//XwK4qYc3UofPoRuaDjyXjUYhhcS1eqTE1lI
lLDvvK5eL4rnRwl3WUagoP7ptIhpJtoUWLdFyKIHPascog13HoGnQrJWe59m
ohDb8HvZnd3ITFZBj3//MIw9nkvOan+KfvZ1XHCL6kVGufYib8eqgeeQfe7F
T7eQ+dfFs8cCCejhEbGvdKFZcE1a923FETWgy6tRu4z3OaLfWB/W6ubDfeqn
AqxHnaAk40fT134CCttrWGA23w27/Cqq8w4mI73zqsmBViM4rqQfnFZ9BmHn
nWXeH5YFJsHd20N6CWjw+ELBXfcisOmyy060NkYbHxy9frmdgORf5yc4ZqeC
1Y+DBymYdCD2F4/r0x8E5NB5pcJoSyHsitVPlco1ROPq4lqPvxDQxCk2bskd
5eALL3Kt9nshVpfojpc1xO9bNeQXZz+DqbbpFvmuGDToWec5UTWGhGtjelsP
DoLPTpXq/qlMFMggZrV3uB/Nzdeaq9i9gCRpnvRltwCk4PvqbFwqATWa7NsS
8b0GXi27vq9UCEBHRMRD/Z0JqGvaSFPhaCFkfLMu3vbAFqkdnGJe6iQgl6ht
Vza6voF5FXvjLQ/9kfXTG8xH5Qlo8sVpgxMveiGC1kc6jekJ2tjGsvMY1zDe
X1WpgUoTtBnrRj9mfYDe/Sy///LJBEpq2cfEzpcNYRwOgWkdpmjPj+DaRAIB
sfGf/pBNUQ208c+XspVuoqTiLy8/hBMQq6GXDeezj6B+7rjLepZH6GfnLTJ1
hQlEbbNLf+ZkC7DYcy1askUjzuRj2Xp144i24Nb6L5+7YIhv5i1ZViISNrvK
s+f5KDIVPfF+hmUI4jqDb0rcSEc0zsq+z+f7UG9DuuKD9e1Afep+Xbx+HNo3
/8knSHIchdNXFxxVqARnn7xN8vN6qGDTeVXGZwQkqHJrSepVB3yh3VpsLpqA
HqgXr0u+N4YiQuRUZbW7YCmvhc47JxF5sybQlnSOogHrg2Wijn1QMlxyUjAm
DTG8+0hz/vYQuhlM4XysMQPOVt90VvzugrrhQMXgNwKKt4x+3ucSB2SJW4LY
bB1BNYTRnQnvr9QXXquedI6DgqCfiWL6+lD4rJJWEvPILUxpjJJvwS/n7JXS
F75o1ujxe7p9BPQ0SuPk2Jt40CkZdV5DMAfJTRs3X50noA+Sft8uMSWDVdIB
8msz5pDJ6HhTfY6AKkw4J9aYJ8H94ycs3Fy84CNH6WtfzG3AV+9YSTKMmUXz
Ck8rgYeJ9plRvE/+aTzjlaZQBYyZBCeL+BuodEOulkI8AfkXpKl9uNkMsRnM
vlcYI5GztYNNBOcE2pCbkd9E8wT2XmY/Mu+lhk7V7d41M0NAsh+ufP8WmAns
mrt/3rXSB1qJqle62A/MheWne4uT4aG8j+CTUSVYvD4XRvzdO3cZfeTlcuDO
Rf2wCmt9OGJzOFRvnIBmvq61VAlshB17+mP5foYgSmH7tDtVE4hF42iCb1cu
GEn+Op/kqIY62NYP5A0T0NmzL5eqmZ/C4pqhzFAmW/gmO6Z2dZqA+nIEXZgK
8sHieJHVMQd9pP4yOI0LrwMaZ5Mr5N2KYDqIZf19YTPEobkt1ADPa/omGTjO
+AqUnbPZPRjvIu0jfUqLjgR0ZneVmHBFO5hxsxyac49DxRqT7g3rx9G1jJkE
K58yCO2JiXSockGHpMzdBWux/08dUfXNzQaJxb26LfucYW42U9dggoAaAisi
EswqoYsl0ytP9CYqWPfM5GIeAe303zJwhbYaPh3tqqFW9EV8B4sOWuH5Mr6G
InDMuBF+OJM3VPDcR3IH4ssu1k2gHhYtw0fRj4H17uwcmb4NypMvGC9dJCBp
3n3Uu58mQMHRUvmWnz6geZVj4uZPAvI4d/3NRzMcD2Gcew/geDAJiB4jxkNa
vBiV341k+ES1+fMRJ2vg+X6Umxxz85f+5/YJxYIrbYqZIrsPUD1qafDG8Vm/
c+fheMcn8ISjwz3e3hpGlYSEH+Bxv87Wq18lUATW3PqU0d8N0XprVw/jzwTU
4f/4bVNnGlxY7yAgEOwAv46nLwbjcWnR0AveuCMTxKMTI4c0b0CTxi0XJxwn
55RIurKnsiRdmcSqrszocFmXglUWHJ5VsHiL/Ym06rL08DqfsHigaf/hbKC+
xiRcZKsPjC1fr1rj9efHFesJi/w4iN8O87d/+UBeAV/kU2zHQ2RrindINmzN
3XIvY8IcjqfaQgUel4UizQanoGy4z7CLNWDSHJTO6v+sxvzJGZKurF+CpCvL
FyXpyuQ0DU89f5AN13X9WnOXlCBSZWIj8T6EzCvyE7f8E0EqoufErJs1bOB6
waiO/X85duZY+r1s+G5trcMoYoDM7qef+YDr71l0DJIPwHHir3DrcL49elo0
1Ue8h4HeVkJS1xX7t9L715FD19HLlDeFzcTv9J+8X7T9FQEhjZvPKNf7g9r+
Qc6Tvwjo0FwsK1pIhbgbsc3wzBg+PhCiN8PPo4O+G46c2hYBv7i3RTvjceQZ
ZRgqwfVfPOgTezMcChT3dqtu17GBcIkxAXccP/VZJP0Y5TxJP7ZhVT9WLln7
oXk+AqQ7nRZpFlzA4JzMugpsZzpUj5amIhPSjji0LoqZwYHNa+7twePoBWFp
nOtj4M6oT+O37T4gaSD95BOOn6EWW+MbHZGQVg5F6i4eQLVjuceTeD9D96cg
hsUImDo+O+fDbgsXNseItWBO+yJwfMNSBOjMj5NHL2pDuI6dFPF+BrvPqWa0
nQ+hS0P7sjjuVxQXRzUx/mMZQqkG3UPhwFfm1vY5JRAU27E9BXPyV0ZF0p73
oejaQjkbhTpK49AWXoP7lcZWzSn3IA2O2mgO6xXaI7LmNvUWHJ8SHvL7wsju
gGX97fYmch10UL9+5f6HZ/vsyMQq7sJrYHOR9NJHtzROj7Fjrpywfj0nCoZp
+c7byMsaOQ1/1HdeIqCosM8qKp7WKNK1aJewpxqamqdJHcX1e4TWh7LGPEC2
D1VS9Crt4XKkyPk3uH7mCemsve6O6F7ojQs74zzB6JT1xYe4vqLMjkXZd0HA
wn5ifyUygC/VqfqhuL7GmZ9V+Z5eqDckfit9rCeI5bCeuorrPwpqX5NiZw39
r3hoLgn5wtdxwySiHkCiio6Zb9oFmBrvqNDufQAns35dqMV2FL1TH7RMuUAY
Y3R35Ft/GAeeSn5cfyOdkonIfADs7priXld2C5LJ49aV4PptFH78j2J9Yftx
r9o9Ny6hd51r710j6gwvurr51QeBbMpg1v2D3lA/tu3zIVzfp2v4wnU3Dxij
sWFkWrYFk3XzDsm4/qn8C+sPEe9xuFS7Pdv5PjxiIqs+hccr2C6Jz5/MAth1
GfmJOh3GHN2V79zNvG625JC5wi3ah5GUFMqoKEJ1P1HPE2xQxypHrozC6Ddz
LeNyU2TTiv5EdYhsaTeZLPSk9P0axeX43l9RxPx7T+fI5h1kRmBxfdvHHFzy
RdlIEXURtT+u3+ghM0ITkm2K18mN0HKW7T4id1g6ni1MLov6LYULJnGZTf9j
xQ6bWlXfN/dAeLHn6ZV+cgsUMsoUVYn7m2N0SNJ00RwsXX0Ur1EqwxLtpiWi
HfbzZ5tdyezQ4A2vB14U6sAXeehZD1GHc+8H5c9fLiAhx/xd8YYaWLd+bakn
6m0ecMf9mHcBWnsHu0wcbxd33z5Wh/mAurjdgbK7wD+sJiZJYYES+2ditvwH
XQE3+e5N8c/vgpRkyAI3Hnebc3GIHbeTbV1OzBU6C9ReUKwv5O4H+7aVFBN1
fa3j81aeXD7o6vjyc238u4aBNwnEOCyl/D6sgZ8rot2qfLd1g4ChhzFbnhjn
sVrb78sEQ/ep7AD1OyFAo6BUPIjnqcrpKO5spxi4YPlCvjTiMXh/uas3hdfD
qG2QvqnkETAEn6eksXgImQRGYRFc34dvZrh9wQeanu4tjMDrdnAw71tu/Ls3
LvRX1Hh6IP6mhj2MLEHlZujZXCXmv9Zu5r9Npo7MQ/mfc3CZlO8/MaxIHHf1
sxxt7phTmYWUbCJyntEVPt0kOF6F7Xzk2nRnI7ZjqV+xYqfWvVQz6PwrOe5n
nzurlgzh/O6G7UQ9TGStQZDP1zsoqmhuFzf/vfK9b774EHVQvM+LU8/Ma4OV
+M6OCAodAOanX4n1USupfs/UZn5ifaHV+i2jaIMLVwD6tCcnXsDTBF2eYUyS
w1wwXqrZueIWitHQ8qRbUkKXTkQ1ui0T7+GxiTDG81rO+gy/6BpZmNVbL0PU
mQQ+ebBPC68nfq7ay3FemtBtlnBjBPNzqdpUrbGeqM233GSEQhZd7U/OLMZc
yezFsdczhuDMZ5lzgMIIUWQFyhLjkDbkwuN4MleUWhaxlEGuDL3pfivz6Kde
0dVqTz9k7bPp+wxer8xZm3JNMM/2DhK6huOBivWo7GEyQUTvW5BB1M02qFkK
BWN/akkfEBfD/t5QaitfQVyvNNlsTuN2amyWFu2osERuqmJruv5DfE6GKaiU
ucbBXTauQCbBx3D+9vetnDhOyuzXzrPifUgx2YcZDxxXBtvV7x3Gz3HnXXR1
qjLhcG0Tj7F8RjDYsrfYvMXPF+rCNScV8b5B835A/6Mod0BH3c8T9T/U/F7H
ts7ZwkhawVjMQWeYEZR1eY75+8ATUTGUrqhnY6NayrwSvAu2FSb6YZpmstxX
/ja6Ex12U0veDHlcsJ04jvmbxYnFYjwuD/kYWiI99dHEtS8xRN1jVNQDkzSy
myje7NiBW3j9KP/14cNtor40X29XrJcJahU/8yuXShA8P7kEzhDXpW6pjlxP
D8iSOvP2lZ4NRL943ZGO+elp8WJJcjsQCJi/vYlcHQ6FhOYR14cQGpJOUk7p
zzpJS9+D+ec8vUBjV7BHPV4vi/JG9xDvwSi4aiOp4WkNUWNMl6TwOnlYmGPr
GOahHRlWPmQ68GF38FQStpNaRNIB3mS7pGLH5QPbn9bL/8J20h3LHO/9gzql
RDL+05RugSD6RIQrzM0P3PciAWm8bqQm3e+3+W4Or3KzyL8dvA7PeotSiPrV
K0EiHu4Udoh7KZhlG7UC4k35Nt9L1L+xZ5zwWlYCsbPxDR889aE9PMhmHnMq
/zpbjgKKsucf+ejYyDb+Sw98lYbpy1m8vp/fmmtgR66OnPxuX57F9T+5GzL5
eHnApmOM9Spel8CwSpS5nPgcJ7+6I8TTD7J3vxw19TSB+Y+0K3pXgUiSHlJ4
kqSHpFjVQ3bl9g16Y7/JdnqOAeYaypdW/Fb+5ZQEA5ky0j1yX8pJ3gDag+ys
ieuDUL+a3dGNgVB4lT5XxPMS7HM6MtmK/WCsU7XmPZkFUif0DTYuygC90KkV
/XbK2ghLRcw36Mp3vKswRumcQ0+I+4e7UiT93lX4s37v3o/YN0x4P1HG1DdL
i38/orez68s/OI5Hr/bUXPfQh+/zn9ut5a9DlcdeeqKucmpKrzoez4ehlJba
cQ812DdsQkUcF+7170QyiHo8LpkOQS8rGBt5Z0+cj82CrbxC74OAifxt6w4u
WwjRJSv0wX5QFu/ZLyEfDMrNM2+psT8fRQtxemF+y2lQXw77gSdmKLES+6FQ
4eeKHyh1h38qizyAm4XiJt/x7z4LqCuYw/WFFV5rJch7QyeXbWwUbpcCxbcA
4n1BdGiO8QWeF00Bvi9vYj55mnpFp2fZTtXujP+usZ8al2qQYGu+0v5jVFqq
rnh8f7hUNdWTyaJpSyc/4rp3mtV4KgjPc155YqkO707cWomrRz/lF6pxvYtC
h3ApCIS40hf/nXq/MovMxQ84PnQVM9Y1VrqB+sv2xy+J+s/+uOELePw2vzq0
qUrEE26WHVIhrhv9Up6vRZZlIEZi4bPsOkGUEV2y0v5htDUxEvvtUrVn03u8
z1wMulJMrL9x+YbI3kPOYKu28ZFotyskJVHWxWIetF9P0BOvk+IebPEleBxu
5b8v1yDqhJuOVSxgO4ueBL2TuD0Wrc+8n2FeN9Z/8RFexyTVWI7vwvu97fYX
BVL+ht+ktx3mtiO7CQUj3twJZApI7MMeZaJ+eCPT5WcGmJt8EeCc8bRCcQHL
0kRdK1VwI0MgmR1QnjXKKcDxJnq3TqgVc395VhkVvRsgOni89YWeDVL+eMfh
0X9oz83kqF2aeJ3h/PzjiRNeZ4DKdyUecmMupF/G8ZFSOkP/FLenpehJ6yJx
/7a3lSkCzwvOfTrJa72sUGW3zIpO9Z8a97/i8TJ2K+3cxiFleqrSHllyT5e3
/oO/u4VzXjZOzx+1eT95EbHRC3zXyOz9931p/KVNT1ixfzTKGlf2Y9nigiEh
+Lk53Owqc584X8PJN0hibjv+TPMjjlu7a+83F1e4AbX8UMTLf7Oz8fjDwGg8
XjEDNvA/cx/RuSbXIif8HFyjPirz7/O0Nt5gdju5HbIlX7eiG/+Df4uq4BLF
ftvVEpDwn/Yzf9Xfv9vO3/w3/1/BL1Q4v07tfwZ/kBeJxwTnuwmI/BpJn/Pp
f9DnOKzqc7b9D/qc/672Hz0QN5WR0wXqYqa3Qk5nIOXg4+xOZaOITTDdd9eW
QSBXrVuTfOwF6ksRDMvN7EdxLMIs+tWv4bNKu1TstCeqOWy0bsCQgE58m/sw
ojAIaa+UZNhP1KBI7Tb/O3L9yHqAtaD3QjMM8dTRF+1+jBjXbttrzz+BOGtJ
9128NyXdd6EdT7rvImcmadKorRq4OEfilK8Gowd07TxsgQS064SF0ynDXiiX
8afcqpiHMtofp+4/P4zSefo+sUS+AI4JezFEE43Mv1H2GSYR0Lp00v0VfOqk
+yv0V++vyBO4WFF4IR4uKPi6TTh7oUJKuz3X8PmIooIl1TS+E+yb1A/QTmUj
nR3t6mHHx1Bxy7kHqot9YKBzRqePvQSFBrH0XRoZRGQVD4/xCw6AZnbSG1Gp
ItT7LXtPadcAeiucPCNO3gtzT88WvpPJR/v5LyaPRg+jqprJusatQ5BwJyjy
hlwBapvYoSX4tQ95D52RLxroBhqGjK9ySXno8O355S2mI4g5W63YJqUfls5s
MqB6mIvmZDr5OW0GkYDHoy2RW1qB/iqvSeKnaGRw5fDs47hxZLifu3FL7ytg
O3zuHK+WD5oWNWDLsMLjcsN/z2WhKphzvbCjtt8H3ZP59ZEtgYBiho4qPGv/
CB3+rzclGCQirqPv86gPTCDD1XsMbGaKVu4xYFq9x8Dg4MH+n/lNUNibH6Ba
EYMmHqYFcjyaQHeP7ZlxqH8N+WS3JjoLg9GRHCZOEQO8/3xB+dFU+AtIZfCL
vHR9gjLuF5cuCI4hg0ve3Bniw1C3wOd942wG6t3mJmAQ34te9iev6aRvBerx
N2c4qWNQfcY9nzMJ44haloFXyjsZpm8pz3O6WIMRe08CGR7HxkjSd+gKyqTv
0N1Wv0MP4dCIuK4TDzmvW4o+RfhCh6xmuDAe396UbO26vhzgm29jqXBUQ5ZW
CUE/RjEXMHdZjE8CpqFt41RaNmD8bv5GGLZPWcbtJFmRC8+Oc+1HE9ogFlXU
uzBMQOI2c12HRJ+DukpR+qsIc/T1+bUGETyvdWzuUml7P4Xbkq48bPM+oJkb
U1kyRUAtZ7vr79bkweyBd6Gsiibo04zdPtdBAtq0foyOoeM56Ahln2q85Yly
7lZZfGwmfq99VayUHZ/bDS5Mdu31hYt6YkN9iwQUOBFIE5MWDKIVrIcrna0g
/d6PfEu8bpS7u7znqo0Hx89ZDMou+jCV4s3jgPu7RVS5ulY2GBQpXw4Kld0C
yruOoetx/cFu0vfFL1a/LzZZ/b64PYM2rVY2HPLsHhz0cvGAG6Wj3pvw7zIy
NZy/cCsEmBjeZgfIGaBHF9cMniN+v6mSP5R60R86a88OcVYaQ1Qr/zJxv8ry
KttR1TQGKDd+tqqNcECqVLxyFL8I6Ee3wsr3uaFA+j63evX73CJzr9lH7l7A
8FL/pROVMlAFFBcS93WHjEnv/Y76/Pm9X0xRV979BiVQr2YRDfpiB0KSSlrd
mI/Pf5N4TOYKpzncDJ/g/XJhreTKd39v/FqDPfG+6MXiGxsCPv/Gf7+08r2e
7lv40orPR4cieXc34P3MDhW+le+8GO8WLdrhc2CcflmFApkgMlR+Lkzc55Qz
EBS0cHtko4VZ9hHfk8Gvlfb81bpq3eyit9HZGr7l5P84Q/zel+7+BLE9Bi4Z
X97gfWx265nPqXo2cHvD05X3GC7wkVkT75Ocdj+S7vVUQx7FpdeI59DtYu/c
FMh1UFnjL30K7L+oqzUr7x8OSjWnCeJ+3blB/H5QB7knk86zle+1vnhU3AWL
OfZ0WXwej5ngPs36D+6jLkdR7zLB5yBzHfHMBlzyOXxPa8T2E7RJ39mxr/vz
d3Zt6nsoiefWp+s42FUr7KHjmEmGG46fHeYqFTHY/4Xd/rYWZLIgfurayvmd
llU8P9PTD54+OZudjMfR8ZZDhcZ/aD9H9exrTvx7NzqkbMLw+bL2Yy9jyX+o
/3BLGsVdeWcokR91HZQ3Q2xb1vDX/d5n/ub/k3zPJpJ+W1WYpN/+/v+h3/7N
/x7/P2Vf/Zv/Z+46EHHh+ekB0NkxLel5phJNMO5ke39zAJVaHS+zGOuBnUE1
PpT4HBESxpx3QmwYCevt8Rjg6waW0KH4Fp08tMl60G3t0AhKi8/fkXm+B+ZH
Nq49nQOosMvDPWR0GM2bKBqrn/kMenx+Me87C5Hyq7znt1+PIeb9BPnoyQ9w
JYjVWPVkAfpYPNTkeWwC8V4k6a5dXUm6a+PVewt1XDJ+qG6ohg3uh1FYRThS
mWWfX3hMQKHWRmurZz6CagLc7/2RiMol79C/kpj4y3sFbcqzxsnrByC77CPb
t8kX6PMjMvHw7/0otadT2ZR1AHaKkVvJxVYgnU/nLphUDyCN1fsDzVfvD/y2
en+gnw7PsE1REYyoJx8ocPRC7waYa8zaCOjpW9J5Kt+IdJ4yjCGdp6pX7wnM
XL0nMPOP+wZ9Xjg0d/VD43GVTKYrz1BH5GfeT+KDSM5VOc8cj4uGa8+CZRmg
ZnPTUMnHA+jF6n2AjKv3Abqsnqf+ikfOLG9YGOuHCTp4dTokG1Wyur+RkhpE
l1fv/VNevfevY/XeP77tbCv6w7botBX94ak/9IcPWrIzy/tAiPKlEGd3NlLa
dFB3WWEIPTQ8FK0r0AFu05eex9/LQuz1Z0Wn0sbQsAJJJ5z1kqQTfl9P0gk3
yMYwL1zphVIRj6DdTHkoISjKiEp9GI2L55g0Xe0GOtonVgP0+eicmT91ZOEI
Wlt+8mrRoa8AfUb2lq+zEUfgE85Ul1GkuI2k+7W9RNL91oaQdL/tVXr8Yp29
0FZaK+hqlYNsa1rXnFoaQrSpWe3hoj3AcpXQvvFdDorWm+KfOzCC7r3gWkoX
b4Nfu9cevvktAzF6l8l1aY2jW2daU6sbmiFSeO0mMo1EtGstK0/3hgkkcnPn
XP2XPtB0VKz4oZKDuDgdQ8UEhlAZ61HPjKUPEFn7i+rC9Qg0ZVAk3np5AlUS
EsJd6wZA7EUhDePJXDRGmCc81BxA8UUk3ebxl1Yrus3Le0i6TfUAkm4zU8xh
Rbd55D5Jt3nHlXQefEROutcuP5F0HryrqLJ3dv0QJKML7HVv85BG+u4+15k+
FJZM0m3WslSt6DbrnUi6TTtR8QHWuUEgmDare6XkIOp477IfzP1on2Ddij5T
4yFJn2l7k6TPlAwn6TM367it6DOXhUj6zJhXvftZPYeAS6vx9k/qLNSx/3nP
Yfc+dCt0u69o9hCMf5dQ9nRPR88d1rdMHOtDMU0k3aboU5Ju0/MJSbfZFviW
uzR9GKJGPlo/l81Au9OXjXdR9qKFapJu83MQSbcZ9YOk25T1JOkwqZxJOkzu
NpIOk+keSYd5KZKkwwyLJekwU4ZJusogHZKuUmqapKs8bETSTz7aQtJP2p8i
6SdN00n6SQ8g6SdrGUn6ybRdJD32eheSHrs7eFWPzbWwp9k1Dmr4Ihx2r/cD
ieXPBSn43Jf6taJe1yUOFJxlkyfFrsPNTAqunQsEpFmhvoMDn6NnJ8IGPuNz
yd4bmwuI5+i2dQTVlKcJYClvlntp1hZOCZyXasXnQY7GWE3mkmTYtYfXZJig
BEhmtz1Rf3g0gnTupnInnbs9Vs/drFlhNIVDT6Bh0SiQvvsocL2nPqI8g881
zJpb9NbkwKzPuR8c16zgoKX3h/pxfI4OH2YzdbOGW/GXjR/Je4NjiZwU8X4q
7yWLN3rSuRC4flalCJ/TN+7jsZLG5/Tog7kWC3lx0GiX/WWTtg3EenDOUOF+
+Q5lGTiNxcGnguXzKbLe8IWaYSkK++GwmQRl24Z8qO249ebbtBKa7HvJ934A
x493r7zL5kIYmCOXbhvXRsjc/EHsFwIyUiPp6FJXdXSiqzq60yVkyyLaJdBx
/IQpT60tYpc8nPrrPQHJ8h8qMtqVAgzz2jHRMt7Amkg/egj753CC49vmuCRQ
2y1EZ0PnBY0MTGnG2M/hJ0692RJQDukOwpf2d3uiJJUoG4mXBKS6eg/b9z1/
vodt/ssrw9zCZKiny2D5JHsdRsHJuQXbZ1JXexxaWgmGMnriM2d80Hb/LRoP
sgloWERdpv1hCljWy7DVzhpCyfoTncT7zU4Pqi0rOHnB2/GXTwbqbwCdRdJh
beznb5Qk3Zo7g8yf7j2r+vVg97mQFDgiYt7wCNuh6xRaPIbtHOlWdwmZSoT0
7I2LrN/OgXJnb/YOHCdvF+73TUY+gNlnd4O4ym6BNqjlm+F9F+XqPWZyU31/
usfMvWcqVGYxAG5ShT+hd3cE6XcXk4j5jjVUllaTgo8hxoC5RoTdB+YKlFO8
FvHvtrI5ljAkgskG2Vrt/QaIJf5oZRa2w0h75IPiaCIc/RmSorNgi64d7Fah
x1z88f4cQeQN6U8fcRPvDbtxU3vlvrIUGRVNL994MBj3CDji7IgUxjVKXfH4
hj0aWKrD53PBlybbPBdkYPNl7g9EPYPF8ImV9xVRIX++T2xmw2RDOD5Xj5fQ
1RP1VHTJ5u1EztVsYZi3bAvvW3cIMO91KM+RLrtGzIO8zH/d9VHOGz49P/Dx
7BpZcNsQL5lAzKNZ3DNPW/SB80JpYo3kRoiiwek7Uf9gy9RO+xD78UBoZ4vd
DStU6vBGzIqob5HKWtEdlb77s+5oqyJJX+Q6TNIX0a3qi+oqSfqiPZokfRHF
qr6ofPrHil7I6xZJL/RoVS80osO5ov8RWXs5/N/1P1rMQiv6H+0PI75E/Y/F
qv7ndCVJt3NvbRP3v+t85hPoU43treD/2Qrv3lMH7Kr2//YNrgbNQxnpT/hy
l2fh/tMTNzyx9Jm2X/tRq18zML4050HMkedJMgCZYwA15/W19ycfzbtmd33/
HamtcUX7u36sewFat7P6nPG+RpvJ+7/HvlNLndO3v1UydN5iYDo5twuy/mfO
/2Dw+p8f0PU/v1wg638UH0DW/zyCrv9x2ll427Gx0X7rsonJD5h97D+3ZS8A
jTvdKIKs87lpgbrOZ4vMks+7geHA/GzVutaGeHsTlXIJ0PoHLSvIOpNL1ajr
TE5nQdb/sEHX//BB1/8wK6Cu/+GHrv/RV/kveag+cf+ibTuV1IHuNOtfcQ80
TpVVAVkPmR2Nuh7y/0v77wkOxfvF5s5ht1es3v9dOugqaP3SJf7SK8D42n/L
1fvl5oSi/VvnbQaPL81Ksp/y3754/zaWeWm6DRH7+zTW1T0DiqtobVq071v0
/ge6fn0a9Rn7b9SsmAgah9l8eUVUBkPp/vIC454ehtT9pS714PN/TFznbWxg
iNm/4Lp5S0NjhL3/icjpoHn/0ATIeo+YLZD1HmzQ9R5e0z8r891N22cpdGbB
Y6B/38y6BU5Xz/NaBKc6dO3vvlmS8uV/yP4lEi0/A4Hi0l9y/m0EihtJfpDe
2xC/X1et54I/GeMzOserecUdq/ZLT7/ldVu0YN9tD//XV/CYY62xYMeshkT7
ztP6HzgbAvf3lWWC1zN0m0PGtebzoI5r7e0papqq0LLfo63hEzcw/Ld/+789
ByguJ3T8+nqGHPurWjscu/9b72/0SwWPa0Wcy8g0AJp/wY/j1LWGCPuCudXg
+E1folyyhKF1v0Pk5ki7xvz9EQ0CZk0wd756CzmP7/Vb+Ll87nl3m4qB9aXX
XT29m0B7BBTtxKYD1R/J8JnQ/KB1v7KO37ZiRh17xbP2Ph1khFuo94ZVkw/U
7j/sxpsqdzDXnu+q6/VdeMwx9N/2Lh6YHmZEXvq0CFge/r57FDw+Saq9tBYH
AGu1gQY=
    "]],
  Axes->True,
  AxesLabel->{
    FormBox["\"log(c)\"", TraditionalForm], 
    FormBox["\[Gamma]", TraditionalForm], 
    FormBox["Efficiency", TraditionalForm]},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotLabel->FormBox[
   "\"SVM Two Circle Hard Log c-\[Gamma]-Efficiency\"", TraditionalForm],
  PlotRange->{{-3., 2.}, {1., 6.}, {0., 0.974358974359}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6703759361233892`*^9, 3.67067764526409*^9, 3.6709312154572678`*^9, 
   3.670931274230645*^9, 3.6709313594065742`*^9, 3.6709314462857533`*^9, {
   3.6709315323791523`*^9, 3.670931579621949*^9}, 3.670931727027594*^9, 
   3.670931855930511*^9, 3.670932002863783*^9, 3.670932043691493*^9, {
   3.6709320817556334`*^9, 3.670932092729817*^9}, 3.67093213956325*^9, 
   3.670932184430917*^9, 3.670932321838228*^9, {3.6709324866350594`*^9, 
   3.670932552932519*^9}, 3.670932672382707*^9, 3.6709327650856447`*^9, {
   3.670933197895687*^9, 3.6709332254231157`*^9}, {3.6709336959536867`*^9, 
   3.670933705927161*^9}, 3.670939379753831*^9, 3.6709394173146763`*^9, 
   3.670939701547813*^9, {3.670939907118675*^9, 3.670939922320163*^9}, 
   3.671540978233749*^9, 3.671541966565967*^9, 3.671542054424143*^9, 
   3.672570344211276*^9, 3.672571593092313*^9, 3.672643896121169*^9, 
   3.6726441925908127`*^9, 3.6726443581171618`*^9}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
z301sK4a6Zmifcf8/rLG2FqIM3+JOoTVqN0Kuqbj43WrT1tGjvby2o3KX4sy
7x42ca+58Fwtwz89mM/jTeRCT58Vyo/B56lzJPWcyFue4sXtBmWHvnN4fdcm
JF9Q+ykQL5Kn/H3kc3vw35cq+bv8/P+7W7n8KiV/92fczpgnTB9rEXUOiz19
1ir73zePDf/D6kmzZ59Nyv67Lj2BDXDrIQ8fV3vx8+n4fHeUPr0XrxtsIm96
88Vy1W5fP48NecroBsLrS5vI7Z4+65UfW739lI1IvpzGp/Lzqo1kWjkHlih9
Fh/Kx+EWEvLGtxqlz/TVot4D8iTon3/kcYXOm7P+yvery9OnTsVP+/FsGvzn
ZtLXwzeq+Ik+fjkbCGqQHVI0U8nLYxvIzlL++zLV39u+5HVKSB/Gf+xZvG4B
nXNn/CdM+TE3Z0E9meq1u07F4Z77nrFn/5myDtD/YfjsWl7H20xm9uHAtyoO
++wj6prgOfEcuYD2uvCHm1tgPDM7X3tRLRuw8LnyAqnuL+peIF4kY3YXdSMC
/0DJv1p65djZ8VYkH6bnJUV9CIhn5pfPe4n6FhDPzC9fLOLjYSPkYX5vqeB2
wPpE6TB/fyTn4dWq3UzhLq9eC/KU0Xm3sOF8zxYUtyk66Ilw+aLNuN1y+ua/
hR8F/6tKn345fv8D5k/Q7+fxgQOd32f9alrON2CaYTyzeAgfwsL/2SYYzywe
DjmHF/o0oP6maKL+MzagNJNb+vHfP1X9OuJ08V4AecZ/XGE35jDkX8b/UKWw
P4hbHm+/inszwLnyauvcnP+TI2/E/vfMaVF8P0CB/G27sA/Ei+TKxtWnTR7S
Sr7bg/8+l0j54HsGwur+gUH9+e8LlT0P+kHYGYgzv4xoYa/XkZgnSt/36/ey
Ik6I5L8N1JVJnjL6Xb/Sfi/8iO4rYPEw9vzr2ETYQq7fx9OHyHZH7ns7m2ix
fIKuBvvO/g/Tf6C/Xyb8OFf5JQPqyuRPil7o76MNEO87kXoOPsIfD80f5ve7
/HkB6lNBX54r6vfAeXnm37PeaHrqua/wfQI5csAvzPxXtZJqz1+fEmmHd67n
9eH4foMCkfaHeJE8tpPXhbaS4Qn+e62SH+/Xj0F5PW4If71KpN0GvfjRsPwv
SE9m/8qB/2QdwDxRerxfJwbly+i1Q/n7hfFyutjfJy319Fyt+APvecg67nNg
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
fsRei/eayf8Dq9Df+w==
   "], {{
     {RGBColor[0, 1, 0], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
r8Kfin5mxa7KO1RX1NzfRfv/AZ2wUCM=
          "]], Polygon3DBox[CompressedData["
1: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
CbkJOWAfXV+IDgpfLbxpcQ5HLncTPio7R2Q8Oc1mxTka+kFO1LM4ZxkT8/Uo
5gBvIJavzA2+LzxW+BLhDYo5wBG1c0K4QZ5paOgzz0qORq4GBwRRQU5MbnyZ
4PrFv+G36Od62ZzYZbVzTriyFmrLqb1SnG/C6Z0S863F2dDv166cDw0pjnmJ
fbvo2uXxPOwVPGPzOCOcFbilZrGPl9bOKZeNGIJYIqsVtV81xy/Je856WC/c
JxzUStn7c1Po33r4Io39I/mZW8Rc+HZ8fI51XF6bA1whe01co09uDT8FfwCn
2DL7zPwvfwiMzqK72IelYr+GhT1YOptvha8bHPJmsVby/g5qf/NOa+cwg4g9
1M7MztNHqg1Uu6UyR3FiNl8B3zA2MMHunNry87LngOOA22Du7bJ1CZ3C9pBv
jauc41yQnTORO5GjnR/PxNpYY7OwD5NDP+BC0M8pwhdW5haOy875yPXOiUaf
vJ9caljkD+PjfnDecN83cI+wfz+oddH1rmE/yc2wieA5YQ/Q7zVCZ9ALuOnV
o9Enz1877M3U8A+bFD8jzzoo9BkdRpfxJx3DHo2u/Y55192zdZ8z0DXbxmGv
2JPuoRfoCv6qS+gI1+gzHh+G7PSYv2vIusXcH8V5xR5slu3/xoW93bDYh00K
+7iR+ltlyxiDL+T8XlxbH+Fe0G98LT77ufBf+KMBuvZTsv8ZVFsHG+IMoffw
UKtGQzeRI2PPu4QPeyb8xZCI/9cN+3dl7fPTKuzHzbU5Fri2DbPfFe8MW75j
9lpZM7aKMYzlfLfOXgNrOTcw8QNc8qHCfyXzUeg6On96Nuf2am0ODy4O/g2u
4daQN8e2cKaL+RI4FLgUOIwLk6/BpXSvPBYO52LsVDK3Q8xFnNUU31PM4a9R
m/OB24fzuJTfJHMh9NvX5oi4xvnjLN+sNkD9g9QOVDs4G9PH9vP8XCNe/Eat
k+bpXByfn0zcq3ZeMqe0iuZvV5lrgjNaOeLFpYpzol6VOSf4ANbSrjZmTSPV
rkmuM90dDf6O9SCjJrJe7XyGXAyOCK4IjqpFcf6yIbqua1cU839wu3C8NySv
6eCwOaydPWLubUNOjeCa4pyO3A4ObbWYH25tiNr5ye+M98E7uCqeeWTsMft6
rdp1yXNtUDu/HRtjWSt7wG/gLJ+prTPozo/CTwmPEt6qmGOcyVqq4B6zY4sJ
apdhq7NtFTZraDbHBFcCZ7JzMd9xb+UaHnwQnO8HtXUQXWQOfjc85oZDfrc2
5wq3DMc8t7Y+Y8vhxODGqJlcn23D4YzhirHtJ8UzDY25l9S1j2vb70vDxmJr
4VaR9dbvti/mMW9Ruz17bu7R0OAaA7UGOMabkv0psQExLbEt8d4jtfUXLhZO
Dm4OzvbIeD58DT7pmOx2dDwzssOzOb6jQ3Zc+JvZmuOX4jmZmzNyRPb62PuX
JP+9mM+DGxwTcuKp++L9wf3CiRCfXif8H/W/VZsR8esW6u+ZLWMMsSw2grPG
mdtf/X3Vrq/MN/9QfD55HmK0hXEGOYtwGE9EjDM88hniB2qAA8O+dijmiJZO
5qjgjuCo2qq9nM1d0V8yuQbItfHZnB1cXesGc0JLEBdV5oqe5neV65PtJZsu
/Kja3rrXPpz9BnNNT7IfxZzel7U5PLg+aozUGuFI9yrm5L6urbPoLhzfD7U5
bri/NYWba/yLwgcUP9PftTkunpWaILXBWcK7Sr6H2u7FPN5D2ZzXv+hOZS4M
+9G1dr4Ld0L8t25tGwIXij2lNgon3qzYvhErEjM2KbZ554ZdxdZic7qE/NLk
mnCn0N/lwsZj6+FU4Fbm6xk+rLzf8MfUGKk1kr+upP4v2bVXarCLs/1Dx9qc
Ntw7c3Wubd+YE46v1v/plbk/7O9K4T/g8kfEWYcbXSbe1/OV658tGsxRtoz3
e2CxjqArcOZvZ3O6K5BHVuZ638/mob9S+zqbs4a7pob5jvDs7FoMfHDnBtc4
V07mRKl9UhPt2uC68LzQQfTu1Wx+Hv2apfaG2pvZY1sl10w/iDGM/Tyb21+Y
zY3PiedlTsZRa6a+vCP7W6zT4+Masu+za9HfZdemmX+B+p+qfYJdzt5/zhi1
bDgTzh41eXSfM7B/cQ2ZvWRPp2j8fdm6iE6uEHzw28KfqH0c8/NuqVlRu2IP
kTHm/bg39YAFlZ/hp+w+177N3kP28tN4XmrO1J5fF/5MeE52zeC9eFfUF6hH
z4/fDwl9bit8anJ8Qa0IPo14Av9HLYkazVnJHBxcHDnmsck1mCYhX6KYj6P2
QQ2kUTFft1xtDo/aDHwRtfIOlfkwGtwYvBEyOO2vK3PScNPUuOC64bx/y+bc
f1R/9cpc/PO898o1d75PgM+jFkRN6O/sejHffqyotklyDYRaCDWoLZL5LJ6f
mtKRwjuo9UmuKx2QzNe1rl3DoJbBxzJwe3CCcINwPsSPxIvEysTTxOrEv8TK
cAjYcmL8dwPDLUwM+06+NLayz8f3b5xcs6ZWDb8Ohwo3tk1tbrVvyOBI4S/h
K/+uXNOhdgBvSm0HfhReFb6Ta/ThWuEbU7zvVMzvsRbWdGhyDY394/0dlFxX
/yb2k32hfs61PrFX1PSo7bF/f2H7dW1a8nciLyXz2ftr/sMqf0sAxw3XDR++
YjE/vmXtGI1YDX6cb3fgO1coXjNrh998MpkzgTvhHtyLPt8W8U3KtIh3O4S+
YZvRYWJj4kx0m5pli4ivGxfHk+tHPHxlxGzXRtxGLMg3TnzrBF9+TzLf3TP8
A/w48cmGtTnKCRE/9gj7zFzwxY2Eu1auncFHU+uDT/0jm6OGq6am+2d2TZTa
Unu1fZI5HLgcakL7JX+zxLdL8NH9km0lvgMfgh0kPsXWw0HDRS8O2/Vzti/h
meH24exZC/WA7TR238rfalAP2KQ2v8S3HNQ8qF8QHy9fXN/g26u+wncm1zib
h388KfmbGeoL1C9mkytk26a5Ye+Iz56vHWOdEPYJW4dPx7djT5dJrrnx7RM1
OGpb2POZ2T4L34UN3zHiiS8ivrg1u2YE/w1f/EJyDEIsQlxDrNMh5qPGt1+x
v2qTbBOxje3DnmOzZ2T7w+WTnxHbTQ2wWfi3/sU+Dd9GzfOZ7G928H/Y54OL
vxkgHh0v3KuYT3i5dgxJrZaYjtgOzmOvbA4ELgROBW5lcciJAbcu5j/erB1z
EntiM56sHd9iS4hJX4rxx2d/gwAfSny6e3a+wbcS8Hf9s+/1WsT73JMa3/SI
n7cszl/5doRvTE7N/uaC35O/blMcI8+O+PZQyS9Wuyibkxwd8QL7QwxwULG/
bx3+En9O/M2zExMTGxMvP1qbb6e2SM2W2i3v697seI9YlJiO2I4+tWT0hWtt
It4kPnwgu97UL+zDysX1vWNr8zV8i8Q3c/Dt8N2fJdcP4Qfh479OrjceUZs/
59sk6ofUNg8RXrO4xgmGj/88eU1vRJzCWonHqL2iH3sWx6e/166B8y0b8e6i
iF93Ko4RiBWol9yZrbPUkokn0GXiJ74Vo0b7UnaNt1HgfdGV7LWzB8TexCO/
1q6B860b34jwrchM7EdxfP1VxMN9i2vs5I/E45Oy4/Oc/I0D3zq0iPiGHG2X
4nyA+zPftOx6z/za+eiwiEfaJcc4fBtH/vhp7W+e+NaCvPGtwOgN+ek7kR9s
i3/Af2bX8e/Kzk/51ukxya/Kzk/5Fgp+/fLsnJHcEX5wu+I8c17kD+SZ5Mff
Cj9X+dsMclDGICMXhUf/LPaL+/LNEd8ekU+Pyra/31f+ZoNvxch5WcNFoftw
8MzBb3l2bNWCeN/YrP8DvmZaLw==
          "]], Polygon3DBox[CompressedData["
1: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

          "]]}],
       Lighting->Automatic]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0TssQ2EAhuFTquoyq0QM7SLu12jFxmBiMCEmzG1MwqxzzcyMwsxGiEXC
KO73BEFcZs+fSPr2+U6H/5yTpmcK4/lYFEULaiqLIp+o2VeLyu1WxtnBTlXY
XUywh5XsZZ+Sdj+rmGVO1fYAa1inhJul2cC2cBazHOQQRzVlT7DAWS4zzxIX
w7U27RL3uMpjrnNLb/YOy9z3gCmeMMNzPunIyz3ylz96sL95z09+6M5+5204
kzd85Yuu7WdehfPCWbq073nBU9W73yHj3A1nea5tnnGDa9q3V8Jzsxh+41J4
dxXtOc5zktMc4wiHmVO33c5GZphkil+qVez/f/0DXJo6Dw==
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{551, 547, 571, 1122, 570, 597, 1017, 1121, 615, 1027, 1129, 
       634, 1036, 1143, 655, 654, 683, 1178, 682, 709, 1045, 1177, 727, 1055, 
       1185, 747, 1063, 1199, 767, 766, 795, 1234, 794, 820, 1074, 1233, 840, 
       1082, 1241, 860, 859, 886, 1275, 885, 914, 1283, 913, 933, 1101, 1282, 
       952, 1110, 1297, 971, 970, 996}], 
      Line3DBox[{554, 549, 574, 1016, 1123, 599, 1019, 1131, 618, 1029, 1146, 
       637, 1038, 1159, 658, 660, 686, 1044, 1179, 711, 1047, 1187, 730, 1056,
        1201, 750, 1065, 1215, 770, 772, 798, 1072, 1235, 822, 1076, 1243, 
       843, 1083, 1256, 863, 865, 889, 1277, 891, 916, 1094, 1285, 935, 1103, 
       1299, 955, 1112, 1313, 974, 976, 999}], 
      Line3DBox[{555, 552, 576, 1125, 581, 601, 1021, 1135, 619, 1031, 1149, 
       638, 1039, 1162, 661, 666, 688, 1181, 693, 713, 1049, 1191, 732, 1058, 
       1205, 751, 1067, 1218, 773, 778, 800, 1237, 805, 824, 1247, 828, 845, 
       1085, 1260, 866, 870, 892, 1278, 897, 918, 1289, 921, 937, 1303, 941, 
       956, 1114, 1316, 977, 982, 1000}], 
      Line3DBox[{559, 557, 580, 1127, 586, 604, 1023, 1137, 622, 1032, 1151, 
       642, 1041, 1165, 665, 671, 692, 1183, 698, 716, 1051, 1193, 735, 1059, 
       1207, 754, 1069, 1221, 777, 783, 804, 1073, 1238, 827, 1079, 1249, 848,
        1087, 1262, 869, 875, 896, 1280, 902, 920, 1292, 925, 940, 1106, 1305,
        959, 1116, 1318, 981, 987, 1004}], 
      Line3DBox[{6, 17, 241, 28, 260, 39, 281, 50, 302, 61, 72, 325, 83, 344, 
       94, 365, 105, 386, 116, 127, 409, 138, 428, 149, 449, 160, 171, 472, 
       182, 491, 193, 512, 204, 533, 215, 226}], 
      Line3DBox[{560, 561, 582, 1128, 592, 605, 1141, 611, 623, 1034, 1155, 
       643, 1043, 1168, 667, 677, 694, 1184, 704, 717, 1197, 723, 736, 1061, 
       1211, 755, 1071, 1224, 779, 789, 806, 1240, 815, 829, 1253, 836, 849, 
       1089, 1266, 871, 880, 898, 1281, 908, 922, 1295, 929, 942, 1309, 948, 
       960, 1118, 1322, 983, 992, 1005}], 
      Line3DBox[{562, 572, 584, 1130, 1018, 606, 616, 1144, 625, 635, 1157, 
       645, 656, 1170, 669, 684, 696, 1186, 1046, 718, 728, 1200, 738, 748, 
       1213, 757, 768, 1226, 781, 796, 808, 1242, 1075, 830, 841, 1255, 850, 
       861, 1268, 873, 887, 900, 1284, 1093, 923, 1298, 1102, 943, 953, 1311, 
       961, 972, 1324, 985, 997, 1007}], 
      Line3DBox[{564, 578, 588, 602, 1134, 609, 620, 1148, 628, 640, 1161, 
       647, 663, 1172, 673, 690, 700, 714, 1190, 721, 733, 1204, 741, 752, 
       1217, 759, 775, 1228, 785, 802, 811, 825, 1246, 833, 846, 1259, 853, 
       867, 1270, 877, 894, 904, 1288, 1096, 927, 938, 1302, 946, 957, 1315, 
       964, 979, 1326, 989, 1002, 1009}], 
      Line3DBox[{566, 583, 591, 1136, 1022, 610, 624, 1150, 630, 644, 1163, 
       649, 668, 1173, 676, 695, 703, 1192, 1050, 722, 737, 1206, 743, 756, 
       1219, 761, 780, 1229, 788, 807, 814, 1248, 1078, 835, 1261, 1086, 855, 
       872, 1271, 879, 899, 907, 1290, 1097, 928, 1304, 1105, 947, 1317, 1115,
        966, 984, 1327, 991, 1006, 1012}], 
      Line3DBox[{568, 590, 594, 1140, 1025, 613, 629, 1154, 632, 648, 1167, 
       651, 675, 1175, 679, 702, 706, 1196, 1053, 725, 742, 1210, 745, 760, 
       1223, 763, 787, 1231, 791, 813, 817, 834, 1252, 838, 854, 1265, 857, 
       878, 1273, 882, 906, 910, 1294, 1099, 931, 1308, 1108, 950, 965, 1321, 
       968, 990, 1329, 994, 1011, 1014}], 
      Line3DBox[{569, 595, 565, 1142, 1026, 550, 1156, 1035, 596, 652, 1169, 
       614, 680, 1176, 633, 707, 653, 1198, 1054, 681, 1212, 1062, 708, 764, 
       1225, 726, 792, 1232, 746, 818, 765, 1254, 1081, 793, 1267, 1090, 819, 
       883, 1274, 839, 911, 858, 1296, 1100, 884, 1310, 1109, 912, 1323, 1119,
        932, 995, 1330, 951, 1015, 969}], 
      Line3DBox[{998, 975, 973, 1312, 1111, 954, 936, 1300, 934, 917, 1286, 
       915, 890, 1276, 888, 864, 862, 844, 1257, 842, 823, 1244, 821, 799, 
       1236, 797, 771, 769, 1214, 1064, 749, 731, 1202, 729, 712, 1188, 710, 
       687, 1180, 685, 659, 657, 1158, 1037, 636, 1145, 1028, 617, 600, 1132, 
       598, 575, 1124, 573, 548, 553}], 
      Line3DBox[{1003, 986, 980, 962, 1319, 958, 944, 1306, 939, 924, 1291, 
       919, 901, 1279, 895, 874, 868, 851, 1263, 847, 831, 1250, 826, 809, 
       1239, 803, 782, 776, 1220, 1068, 753, 739, 1208, 734, 719, 1194, 715, 
       697, 1182, 691, 670, 664, 1164, 1040, 641, 626, 1152, 621, 607, 1138, 
       603, 585, 1126, 579, 556, 558}], 
      Line3DBox[{1008, 1001, 988, 1325, 978, 963, 1113, 1314, 945, 1104, 1301,
        926, 1095, 1287, 903, 893, 876, 1091, 1269, 852, 1084, 1258, 832, 
       1077, 1245, 810, 801, 784, 1227, 774, 758, 1066, 1216, 740, 1057, 1203,
        720, 1048, 1189, 699, 689, 672, 1171, 662, 646, 1160, 639, 627, 1030, 
       1147, 608, 1020, 1133, 587, 577, 563}], 
      Line3DBox[{1013, 1010, 993, 1120, 1328, 967, 1117, 1320, 949, 1107, 
       1307, 930, 1098, 1293, 909, 905, 881, 1092, 1272, 856, 1088, 1264, 837,
        1080, 1251, 816, 812, 790, 1230, 786, 762, 1070, 1222, 744, 1060, 
       1209, 724, 1052, 1195, 705, 701, 678, 1174, 674, 650, 1042, 1166, 631, 
       1033, 1153, 612, 1024, 1139, 593, 589, 567}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{243, 1122, 232, 233, 1124, 234, 1123, 235, 1125, 236, 237, 
       1126, 1127, 238, 239, 1128, 240, 241, 1130, 245, 246, 1133, 249, 1134, 
       250, 1136, 253, 254, 1139, 1140, 257, 258, 1142, 261, 262}], 
      Line3DBox[{264, 242, 1121, 244, 1132, 247, 1131, 248, 251, 1135, 252, 
       1138, 255, 1137, 256, 1141, 259, 260, 266, 1144, 267, 1147, 270, 1148, 
       271, 274, 1150, 275, 1153, 278, 1154, 279, 1156, 282, 283}], 
      Line3DBox[{285, 263, 1129, 265, 268, 1145, 1146, 269, 272, 1149, 273, 
       1152, 276, 1151, 277, 280, 1155, 281, 287, 1157, 288, 291, 1160, 1161, 
       292, 295, 1163, 296, 1166, 299, 1167, 300, 303, 1169, 304}], 
      Line3DBox[{305, 284, 1143, 286, 289, 1158, 1159, 290, 293, 1162, 294, 
       297, 1164, 1165, 298, 301, 1168, 302, 306, 1170, 307, 308, 1171, 1172, 
       309, 310, 1173, 311, 312, 1174, 1175, 313, 314, 1176, 315}], 
      Line3DBox[{327, 1178, 316, 317, 1180, 318, 1179, 319, 1181, 320, 321, 
       1182, 1183, 322, 323, 1184, 324, 325, 1186, 329, 330, 1189, 333, 1190, 
       334, 1192, 337, 338, 1195, 1196, 341, 342, 1198, 345, 346}], 
      Line3DBox[{348, 326, 1177, 328, 1188, 331, 1187, 332, 335, 1191, 336, 
       1194, 339, 1193, 340, 1197, 343, 344, 350, 1200, 351, 1203, 354, 1204, 
       355, 358, 1206, 359, 1209, 362, 1210, 363, 1212, 366, 367}], 
      Line3DBox[{369, 347, 1185, 349, 1202, 352, 1201, 353, 356, 1205, 357, 
       1208, 360, 1207, 361, 364, 1211, 365, 371, 1213, 372, 1216, 375, 1217, 
       376, 379, 1219, 380, 1222, 383, 1223, 384, 387, 1225, 388}], 
      Line3DBox[{389, 368, 1199, 370, 373, 1214, 1215, 374, 377, 1218, 378, 
       381, 1220, 1221, 382, 385, 1224, 386, 390, 1226, 391, 392, 1227, 1228, 
       393, 394, 1229, 395, 396, 1230, 1231, 397, 398, 1232, 399}], 
      Line3DBox[{411, 1234, 400, 401, 1236, 402, 1235, 403, 1237, 404, 405, 
       1239, 406, 1238, 407, 1240, 408, 409, 1242, 413, 414, 1245, 417, 1246, 
       418, 1248, 421, 422, 1251, 425, 1252, 426, 1254, 429, 430}], 
      Line3DBox[{432, 410, 1233, 412, 1244, 415, 1243, 416, 1247, 419, 420, 
       1250, 423, 1249, 424, 1253, 427, 428, 434, 1255, 435, 1258, 438, 1259, 
       439, 1261, 442, 443, 1264, 446, 1265, 447, 1267, 450, 451}], 
      Line3DBox[{452, 431, 1241, 433, 1257, 436, 1256, 437, 440, 1260, 441, 
       1263, 444, 1262, 445, 448, 1266, 449, 453, 1268, 454, 1269, 455, 1270, 
       456, 457, 1271, 458, 1272, 459, 1273, 460, 461, 1274, 462}], 
      Line3DBox[{474, 1275, 463, 464, 1276, 1277, 465, 466, 1278, 467, 468, 
       1279, 1280, 469, 470, 1281, 471, 472, 1284, 476, 477, 1287, 1288, 480, 
       481, 1290, 484, 485, 1293, 1294, 488, 489, 1296, 492, 493}], 
      Line3DBox[{495, 1283, 473, 475, 1286, 478, 1285, 479, 1289, 482, 483, 
       1291, 1292, 486, 487, 1295, 490, 491, 1298, 497, 498, 1301, 501, 1302, 
       502, 1304, 505, 506, 1307, 1308, 509, 510, 1310, 513, 514}], 
      Line3DBox[{516, 494, 1282, 496, 1300, 499, 1299, 500, 1303, 503, 504, 
       1306, 507, 1305, 508, 1309, 511, 512, 518, 1311, 519, 1314, 522, 1315, 
       523, 1317, 526, 527, 1320, 530, 1321, 531, 1323, 534, 535}], 
      Line3DBox[{536, 515, 1297, 517, 520, 1312, 1313, 521, 524, 1316, 525, 
       1319, 528, 1318, 529, 532, 1322, 533, 537, 1324, 538, 539, 1325, 1326, 
       540, 541, 1327, 542, 1328, 543, 1329, 544, 545, 1330, 546}]}, {}, {}}},
   
   VertexNormals->CompressedData["
1:eJzsvHk019+7/90cUlKZUlEyVoRKRa4S0YCIiIwpRELmKfM8z2PInHnKELZZ
hWQopGSeeSdk1m+/P+/OWb9z1vqudZ+1zr3u+3d+ff6x1qPX53rtfe1r79e1
389r76OaT2Ufbtm0aRPf9k2btm76V//9gL/8L//L//K//C//3zmN80vRG72f
0L+RFnfbMz/2zUDN6zPkzLe+oomxTQ0rxq/g4wN/Jb+UKRBdiCqV/FmHwlV+
OwtSFcDcjIwI0xMC1J8J51ARCUbhk/oZkyrOwHNKoml9nfD/u/7+Ky4x/JFy
qWkMnaayYWvxfQsyfuEbZqKDYNxLUZa8awSR7RG2dnvZDGoh0uxNK8Nw94x6
INfXfqR6dqC8hLEODu3PMajdPgGcHckWeUV9aEcJpdgZ+iTQbT0vtOvKJDTK
w5xzSDfivrKPJ+ZuDijVewtUi0zDoQVxPoHuRjQrmm+mU5sMO6kCjc34CVAU
oy/05VQZUqk4Ny7k4gYy5jePZjYToCaruf/s1TSUsUNPgXDPGZ7v/LoWs0CA
h/5Hr1W7vvj3cSxTcZhRXiMAlc9Z64jKMBR5/TWaY1cGbgrD3rd4XL6L0a0o
qwYjObJptk0n9GAmXMlLfoMAtwJTZ4JGhtCVzOzuvo0aYLj3Tam5cBQOmJ1d
K2wdRiM157kuDJWD5ICpsA/jKHg+T+ZZdB9DMnY/dozklkKIIbuKuNgQcCwI
7aKyH0P7JWmTdE/UA3+vfuKx9kHg9U6W3rYxgl4ICz4LPNwA1KHUQuJ2w8A/
Vq+oSRhCm7ypcwVki4G6+pqs75YxMH2df0ZDfxCJNxwZc7iTAg7zZdUxD8Yh
fTZ/6h7vAOpkceuw+hQO1DvY6pRuT8DdksWe0cB+lM3NsXdqpx/sd7ng/rNs
Aty8yHW0vb6hYIevOQqU6bAj1lF4TX4Krln5igi7fEfPlS+wkitnQ35R+9mh
hknoYViye+zzCVm9DfPOZUqHwx9S70nSzEDOTEa/jfwXtPs+X1RXXzyABef2
sePT0OIcUX3btQ95pF2/lXMpD34dSHg2JDUJb8+7HyZkDaLQny3WF8mLwM7L
P6Fi7zjUsxYbOiaMIJHbnxqOimXC7cv7eao8R+Bxk+nFoO1jKOh+lsrGTA48
umtbtUw2DD6H3YSFGcdRQXVGTCBFDmQ7WfhLlQ/Cl2i9TM1P4+j25LN4H6c0
6PsQZcvbOgAiB7ZfF3QZR5lcVyDJsRyuoX0neOYGgIXc9PLI2BgKPKglEri1
Cuhsgq/Uxg+C6apefwrHBNKyIFjU8RaBQ5P03Tz+AZjsFjYxPtCIYhXvLPjZ
xCCr6GkX+qsEAI3Xi8su75FoQdj5gVvWyPXRIP9WKQJMeK7K1H7/gNTkNTgW
Z+MhXdGx6gcZAWyE1Iw1qtqRsa3qQOyJcLje8PCF75MZ4Lyfv6+p/hOSPZrn
YSwdD5J7hHsE8PoDvQ9tVam60QXbhz76zWkgeSur2v/RNMSVFZbdYPuGmJuv
/jLpT4A9m6lTd5pNgci2e3VyfH0o01nh5ObOOOCn+LhMETwJMsW58VKSA6gq
IEfVWTQPOvouPNFmm4CBDuQxwzuMXLadW/gsnQpptaq99NOj4N3Rnt0mOIgO
F4fJZBaEQkE6uVOk/zjcdDpbdTahCB15mWu5WyQRGf+IGvT7TIASyhmRFUIh
IlfyNoGXbojh8PdkmX4C0HEkgcdqBSq9wLgrNPcelFH3ktfXEOCuCLfzAbcq
NMbPaxAq6gv3362UTOcSoGKetr3gZBXKspPSuBQSDftsZ/Py8wjgUJplanmh
BnEuvasK64qFotgz76ljCeBCkeW+mlCHuPkswlMbQmAbZYQ4rzv2s45u8zn1
euRz7OiFXipfcN2z4PjLngAXijieNSu9Q9/Rj0UFhjC4/5Ci0VuZABliB5Vu
T39AFW6KmmMrAWB7hDV+dRcBhDyydVi+vUVn7lrGBXzzhxO7VDg6NAmw/6by
+iGpAnSwxc4Ijfuj/FddndTDBIiY+jmfUpaChuK1TD4ctkYXpvi3bl0kwGSq
yek15WDU0tPZtslY4dKhA3tMNfA6w/Xc5nqgpB4yyCYffL/oDy+L7PQ6MO9a
D8p1EnZGD48bzZapBsPw6cOeK3i9ehD3sE1tSxS6nUHo9akMAz4GQcLsCgGu
96jdMhuLQ2PsHcX+VKGwelWRI34Z++HtgsrYjmREeerWyKsKN1gz8hf5htsz
NLZV6xxDOlI6c8SWp8wNluJuhS7OEeA3Z3a7CV06qpg5sW3zL3/Y8D+8/RHm
W9tzx84fTkfu9CPnDJWDoXCfxOmBnwSwO0C7y0MhET0yPLvE/cgZwnk8dzPj
9+Y/O8q6nc4LKg/8VNRPCYTE9TK7Kdz+IPupBasDOeA2onfEOiYQbjceiDaf
IYBnSt1jfussvO4oP64y8wXmVe7Pfj8IMFfrnvq6IgwGvlDnzi7awwTrJ3pn
bEee92oFHZsX8B6nqvXNCARlgYifE5i3M1oosXLrIVbhF4sedW5wW7TglPZv
Aix9rhnKUwtGQhRzPQFqJvAwRnjyGvazRaG//H0uL8S2kfZdFj8fej/lfCnm
pk9f13Iei0LllxRal1bsof3xM49O/B2JP8kXXvgzDl1qqruoz6MH5U/UuM1X
CaAqMau8PBUHwQ6CPeXFKcC5u9asGPsnpZ5Mnep6ASg0ddjtaU2GQ8or6ft7
cZ5QaG+vnZUCXROH17THrGB8Z9f1PXhccmk6hBp+r5SNHR8UzFE3QRER87tG
cPulF+pnAw55wd4X55R2Yj8YQ67YJsyTj4itUeHxaIe5qBBfX9j7tveQBfaD
X9At68wzeijxel6pIJsyOOdJ+M7i50fjM47WcFkj45wqy/e4X/Rrce89MPcd
D3FhVHdGGeKJweLqzpC1oa99GvMMm5RttJgHnDl686u6Cch6pVy2w3zLk+E2
HXYvRBUrav6YTw9oH+sxCGH+SchutT2sCNKdQo7aeuWBdV+9vksDASp5ywRt
p5Ng7vcwfW1QGHwgGChJ/8LtURx8GinnDEqSogm1ms5oZpW1hvheSYHgD06/
4sCB7qFu/yE90HkWf8EU+1md1YJ8F+bNlz1R7nEvUKGhTn+L4//EaH3nbxZr
mH8gPXriuDJsq39A04LtxDAX3r7GpYeus815/sJ/jwW1E8YwV3ih1trKpQd2
enc4u7EfFgLpH2RgXivkO7T/hB76kchDpn/CGl4135Grx9znq53CPk4vNCGy
47gUvzLcf9mfKYo5fNg9CRxRSMl063y+qjOSNDkd8hrHiVvRwLK2QCIc+7wp
0LQ/Dj4jeyd2nJ/8Ztm/U+T8TEXxL+sIoW9JFeH5s79/YzvsxsFv5nCc2x+8
v06J26Wmv+RSiccx/fUTTQE8/xW5c5svXamoSF3jPEhcN8ieihE4cfsKKH/d
5jupDMyXVFc/YDtFFAVNb3A/L5yfItfH/Th1gPKf/h60Yyb2Fx2OJP5VhqTk
7BBiPJjYPPfwLQxDUmxFZG+UlaFtNeX7e/zezS35x4bwupG+VLTCe1oZPj18
YqG9RADDTeOs3m4vEKNBcPO6Y2VF49a7FcT8qv+0W9YDPI+ybxP/WqNtYpfU
GLB9l5AX2h4nrFGZP/GvHhoX9b5D9GfPxxRVa3rsf+m3o/nL9nDYRNWG6P+r
ITgrw3mz91aFoUwVE3AXTlQlxlvIxEvOLzg/M2nLmOM8oYzS7MuCie2XbP/w
bv2+M+LRIOeyUTNB7z0yHxCfn6puv5VRHYachz7tjFy2R5f3R0k54X5N52ic
DluIQ7/CjY6qL9gjMWqC6AUcV084v9PLvHyJSlW1LXazWaOaAi53LRxXZ1x+
dntQWKOZC7+pBU55wfljtYnEfkVQ/Lrnp+gMqiWzsyPKzvDe6UsfMW4HdDSH
XViiwLl29osBszWQjRXfm8X+iawkt2AJGKjonmZxWVd1Bm6jqMvh+PnWxxeF
Bxn0wMPUvDKf0wvsbOipiPOIbOLsJyGcl26/M9LKq2qCnNRvcInjcd+VwbTv
6VIcUgyO8NddskfVebvSBHD7H1nduKF7PxF5ahL/OiO2jvS7h/E6/DT0LQPN
Yz1EofhAaPOGEkD1OV2i30Q+XzrUcCwKlu4pvgg/pYfO3Xdd2o/9s6di15EH
Vlmw7eHvR4FSzvA7LqKOepYAib4j64KH0sHxS/WpPXgdmmvcTP0efxdMyAbS
3dJeQmR98enjlW7gr8wtuRn7bfQ5Z8s+7IfNQdvv6io5Q4kC5Zci7IcZw3ul
fDg+2JKqdyWrBQNjplUFH+7Xx48bei9qwlBstvRu4zPKMHZP/BYxP3fTJ/XL
/0+/Tv/p1+H8zYNDKsFI0U9gswT2j9gh6vNE/wjzyuYeY8D9aqTvHSxwg5ar
NzeH4Peuuv268UI/DUTObIx72PrC+cfch9bmCSB2UNmsAPcrQLZnr92sPQRx
GTZewHzdbmSNqiAFvPa+k8+ltIZTsaUx5Hh9VlQ4fitfJRgMmDW1DLe+rvgZ
zsNDnI9fw4c/Wd53hgdcz/d9wXEblk7zhBiHw5Ysq9E7QoX1Ly4F5eB5QGs1
19OK+ZlrST3EuG3eJxQ4/8AEAndcVyQ+b3mD1N+IP/0V+9NfbbRqgNcBZP5s
T9vx6rfC1DHs/6wD/YtSu9kVEkHP5OxMzV1nGGWkGCd+f0ftWmik8PdU8JHL
tEZhGMgz224WI+Dv8gKNgy5HFBw8umR1h8Ma+pTUzv7A/jlfzivZyhYFe9MW
N63hfpiM2s8T17F/20fl+Dq0muL2W+1+85XY/n/jyWfDgnPwvDzHuNV8HvMs
StOFAS5ryHJ5ulop/1DIoSWzl/j8a0dW3Ro83v/2/yXsY+5R3/g/Z1/8l//l
f/lf/pf/5X/5/3P+obiwcISzH+2Y8X5in/YaZGv8JZt6JsBe/PVRPfk+FEQ/
b8ZFVQJcYksjWXcnwdDnWpnucjvSRnNVZ1YrwJupgkmHfQakNM+aaJu3ohvN
cZ/u7CmFtbOcdu+jZ2D+S1P3dcNalP7lbkrR2zSodzQPu++N873fzce2H6lB
eu5bDJ9lBEKkjNmd8pd433E1eGCcvwrdWMvVmC1wASeVvolzhQQYvBEbcGlz
KXpj37WhHeUPL3Xm0zw7/jX/nJRW2b6SjppPL20b/O4K29S3ngScD3ubd70e
fz6MvE2G9f263kLLxLiM+/cRuPag9umumm+o9q1H3hP1NNC+fNDzl8QUNAQ4
t/UsDaMRjtFtr+TqocViveFlyMi/tP8z6D3ZqXPR6DfB15DHWxvicviv9+A8
rSAinsxqdBBlNt07/JOmGuiWVTezJI2B7E+aPCndYVS+mPi5/VEV2JvnCt/S
GP2XdgobCeZI1APFtWnpnlTWgp8yX4fu4fztypT7XaXJIZQSYOJUOpAHTKyy
XaEMY0AxK5lMOz+EHlOwnJ0eeQOrfN+HO2dG/6Wd+6IOW3Td7P799/laPjdU
h3mAaGBG5rlB5HnFLITmKoJ5X65p9hvjQO7uEW19cwBtvPe8dHwdgdyr37nl
P8f/pZ1Y97ePxyrN0ag6xW9JDkHIHz3q+5X43nLuUmGd7ygoQYBT+UwFILWY
gM1xk/CNf9K+7N1X5JAu78Oqnwe2XSeuZdhM/Us7I6rX+3zxfkMW2ihET9wE
g8XPisOYi219n+Tj3IPMh53Cf8/kQpfP3saW5ino5O7N75gbQTydEZygXg+p
yWUyCSHD8KSAM0ridy96eVtDP+BVBojT3bmg8mMSCkKfpYckdaNiJoaXwqEZ
YDfkxuF6dRr8Frc8/dHaiRht66dfy7wASi3O7rDsaQjxUlEOl+tDg1qJpsw3
0yF7U9jOx+aTcOcmb3t8yQByoXOl1gosgI91qXQKbePQFPlgvuv3J+Tjn1Ol
UBMDM2dEMo6Sz0CwVXCbul8H+lKo0T/GHwgTH/g8dW7NQJJiNLNMxQBq6bI9
sLC3BFwofyTsQONg9uq7X9HvIVRVHUYt51QGM33VXVX9o3BLuDWqbrEdvX7w
uZZ5xAPCnuwIe/AI2z85WR14pR0ZcZ4TOchsD0WyBW0szjMg0uTKdS5wCJn/
1lt0mCyDPmo5MW3hMdCoqpA8UjOCJMguVsUEvIah67SdhrdHgOnWc6GPu9tR
+bp69+KoA6hNeQvwec/AkYMKGuK9LWggWKK/PDkaxs6OE0pXZsDmXGNo34UR
ZNHJXkdLnQtT/F/Gz06NwAHu6+/cb4yi6q+qD65/zIPNMXOm51qHYa9OBk1s
WgtimQgybXGPAbJO8fDh9RnYkrPpZtPkRxT31eEh+554SPG9l17fOQORcyRd
wJSBpAuwRpF0AZYj9Necf39BNSNi5kWmBbBVRMXBcWQKTK1JesGZPSS9gPUh
SS9gfJA8x7wwghp5FmbO3MuGvK6iwbozIzDk4eeW1j6KyD0onynsy4JU8iF5
dvFhcPQg2TGyDf3Hjq4WyU5NFkl3uK1D0h0e3SXpDh17z75hCh5FVzZfPHL+
Ed7H29IpUAQMw74zRrcpuMdQSxW/opZVMtjY9abUjw+BURnJjpkxyY6rPMnO
6G2SfmFeRdIvJmtI+sXrn4c/1lGNIdnm9uhX8knwegNdqtk9DOtPxRjWcfsf
vmSxP61VBOp9IyUuHMMQqUCykx9PstNTTbLDZ0rSQRK5STpIBTlJB2E5fqaj
RHwUCY0dcJPbWgrB9fd/+L0eBsO6oLuFOE7GH+XM+2mXQ92+pEujPCPgZkGy
k8BPssP8xw7nIklPiXYj6Snz10h6Sr7y5S9OeJ5+KZZivtlbDjXO/A6E1WHg
nk524Ng8hmpCLdi+FhXCCdVFY721IZgYJ4371p2kcc/+M+59yyT7Fq4k+xp/
7Pe0k/SaL19Ieg316t5/9JqSTyRe2kHiUSskvpmKpOO4+5J0nN6tJB0nZw+J
y2ST+PIfLl1J0neyY0j6DmMPSd8JRCS+GE/iQX/4VBdJ92nkIek+E5Uk3Ufx
C4m3HiTxMkTi0l9JelD3OkkP+pBE0oMox3bFebkVIjWuhd4Ibk8UPubuKzVA
gP7XMhSS+vlIlpGX59wRFzSXqaE1N0qAi7cPSLQIlKJrfs6bKx8BkvdfiZ3C
39P10QZHU/diFCkp0DV3/Q5oBkVp3/hCgCfcJTIpEW+QCp+2OO0bV3hfZExf
0UKAvITjg6+8S9FI2G39JiE/OJavfLG3jQANv17kPt9WivgNnpuFFkeAqUgr
yxrmX/fb3JwwKEWz1FW8AQGR8EbvYrVhKwGGJKq6pF3L0ZB+BB0FWQzszL+q
ur2eAOXjPnOVARVIRt1z/vW3GLirQTH3vYoAD9v20slSJKPfnuUWj1SUAc4U
Uj9cIkBZtj+v7IfXyEkwY4hSOh5RWvSzlOL2zyyy6XEt+yMNenmGwzXmoPvB
J6xsgwACZc8+OjJWId2vhdmjt0Ph/tuDRp4FBDije1/3pkwVAqErL8wHQ+Cd
Q8L193kE2K+7y5D1qh4qMchPuJbqCJfX7t6Pwd8dSpUb9Ns3hYJesfKD6nhH
eNnQdbRunQCV41ZCT79XIWavbab72vyhp7Y8PT6LAIqWXk3XTlcjMe7hLbFu
3mDFPpBJnUEAv8sF7ZoWLyCTtoDrWHMAGO6NlDq2SoDlg1lrv99Fg4aK2IU4
Rn9QMRQ3QpiLmo3aB+O8i2d+956Ou8EwdYyWSjiEAHPPTHgeV9aiwycVqHbL
B0OL6z2+9QACCFFJFDs/jQD2oqwrbS0BECdH5y2I843aweCRVbAGUxZfka4e
b6iW3Ke6GfdLtaJ/znD5LUrbe6yWy9Effn7pKLPQIAB9TFmwNObnj+suwrsA
2CTNXCSJ+Y0WhlJXJiVEy7RdIonJHzo0mxSXsZ9vbDXn3dlnhbhrGFITBEJg
P29Z7F7M41LNHC9r1CKNcwKpU5P+8Km82lsllAArfXf9ojH/4PT9Sl5dAFDv
1vghiHnhULc0R0M0WJVweexhToRoi45bBr8I8DHLx4nBJgtxSCjKBX99jHpX
zjPpzxKg/ukRMgvqHOB+LsFFa5IA3qEHYyfHCRAfGzsgBs5IxVqWyVwtGCgD
GrWIut7grugbM1GBiM7rkVr+sj940i8YumDOcvjA5H2hfFgxaT46Y5gA2WoR
+RN4fnmzqjHdwuvLh6qbT2keOYGhvgnrhQUCAG+JwnppGCrJsLGTrHGD7SPq
wYDt1CzKKmQyxqEPXb76nov2kEy+3J2Gx9GJ5kRXpUYaMKTYH/pZ4ABt2syr
L7CdcO1TZLR2vhCgPnNW//pEheZcpwcdHpdwQxn7s0kv0Yc3XUcjf9lDo1jo
vMQKAQzv6elU/YxDV6REC+eq3GBjV7bLAuZ2Wc4NR5A5fC0xC0zkU0bbmZq/
dRN/tzfW5DU46A9iuydEbuH2EGhz8wrwuIQ7nfo+OBuHhlJzpY9/8QbKpqWZ
PGzn5CRXfq1cImqT7rc6bOIBIUd72kbxvMsyExjdyuQFsQEWdyKpXCH25rvH
H7CdL1YbwjRpgaBwb+FiPLM/DJsbRMZiP6SZs53JU0hEk0VivHnd3iBJI/uh
CNvpUOw6YkiWjFJnr+/rw+2nzjff83WRAMoLKhoXTXyBsOxWvLw/ASqn+gO1
lwlwJy9lhvazN+juod1f8NUb7lr/blXD76U6Pb7ByK+H1IcCHVeWDcHj1rMn
A7i/qXV6CWlBduhAWhjdVVUtILO6SIOTb+BUlt6xouaMLk/1SAj428HT0op2
Fcz9za03klbs0eG00AHjTEfIVrArVMe8L6EgNHOfK8oTO83nfcEFpN3v+9Fg
7mznHqDU7Y1OdZ+ipXFzgo43p4M/4vaw8x4eU8B8//WxyzfrzYGDrTKMEj9/
WDP0Sfhhf9Tw+lDcxyxjiNEdejaCn7dzEhGVTsVxqOz4ZopXD0Tod9wOx7yU
h6Tf7aQc+Ue/a/mj372lI3HyIZKuN/KH110m6Xqnz5J0vdk/ut4hSxI/forE
CX+4GC9J7wv6o/c9+aP3XeMhceVFrX+4wR9+7zBJB4xnJumAWn90QCkaEn91
nMR1/nD+P/rgxn/SB4dek/j9rSS+/Q8X8aTbNKqojMDWjSKD5ybyfaSkvIb5
2EmSvlluTtI3G/7om6/Wtud/L78BVkc/dRcuqYN9IG3zCnE/8kd/vPlHf2T5
oz/+G19Z+PkfuM5A6Qeu1ECQy1nc3pJhDB/MKOl8sf8Px5HT7lIOBtVbx1kd
fQ3g2MjHrXcwn1Yh6ZhayiQd89cfHVM8RvUf/uQ/8Taf5wdM2wKguujmEWpF
OQiQlX9Tie04vPvUxYLnyVi1hBK5iCBK7B6vXcX8yTpJD+30JumhaX/0UJ0K
v3/4x//E4/bwEr7VmUNvy+cTpSdvwpnxvvkeoi6gsLZr/IEWnBkTolSLiBR+
WTBrv0zUv44//0dXHf+jqyr80VXLt5F4/DESv/eHmxUlc3jh/ddhhrTvCv4G
6N2XGotOou5W18bnsmyPRCmWqsUyjVGipBTnS8yF20j67FmV/6jPclSQuPQT
Epf5w8MvSl6b3q4Mshc+f1TKcISqG7uXk7CdmzkpCVUvoyE1O+ruF6twmOEV
BhMcVx87PzadYdCDs5U2ksXUrqAgqVlthZ8/d02XOgC3R3pca+g5202klk4m
XIT5np0B94/vcUU7LSXZJ2huoo7ByXQXzG+NqPQ7HLeGee4DkXfxeyUc5BqI
dvq/2yFuNRO0cv27k4Cdf4WixnsqYj1A/earbrRXI1ERb2YKWdMNlOF93lYS
r2+0gdtYbBiikMCySPhJl4tIkVv99lHMOZcOr+3G7eEMDIsy49RDC1SWz4jx
4FuQlF/q7Yu+b9GlLsB+Nb6UXrqGx72hYZXsw6kkpEZYSs7bKYgyD6d+W8Pr
ZJVTng6jajzavS207laOMfx+mnyNH8/HW7rFX6j3hqKdjrbT8RzW6HAeJfUk
fq9lxDUHbZMI1EOhIk/pY4fYZKMjL2Fu7RZfVR4ajmTKlr6G4DjtdzSsDcP8
BE8un65yMJrb9Ewm7p4WeO+I3K9MjM/dgUrbmOJQorsQzcl0R+SxjXFTBH7v
JT/q+vunvVBbZmvS0TN6yE9D5oUg7lc6b6j/CF5vr6nT6h3Q0kKc+2P2Etfb
zbx6p8Uu6KGzmpppTqf10Cirai9x3hlKNHhZrBmiTz8uam3NDIRz/n2sAfi9
HTKEX1vO6iHhcMVL2hx6EJfYN0Z8/krfVwZY8UcPNAefUGUbw+k9V6beEedj
3NZbLRmBSMLn1z3Gk3po9zIhIwzzVoKLQMlxPXQi0+TW8xpzZFymy0vUxXpP
p9ZKToQiIbcSRTPxauFGRqX2n9gPdzy6A0Rb4xHLZn3eq60OSHwyXqkUx5tu
a/WJ69dMUIzstetbNUzQKD+tUhOxToO/hPNukRs4L1gT7v9Sgn3OwZ6GmHdV
35EzdEpATz7Ozhk4OSG3q+M0mfj7da6BwqqiOgwJSons3YHbI3Mla3cqfm+A
B39k36EocDzH/+Yi/g76pg4mBOF5ocbDvimmPAxYZ8RYitm9wOHT02GiXvzg
agT5AB7fIN/NGidNLVFvxHZFacxPOYe9SLnpDOPkuwdptCzhW+bDEmJ72gyl
C1gPxoH5oSSCVrkbaGanpD7E44jM2ibOVIYB3ZE3J132uMLECS9OWWznpVC+
+W/zIBD/MTK9K84RLqqx83Jjf25eOOtzPOklaDzOLH2P+22q5QTbsH+mE36m
FB6OA3eX8DeXcZ7cW0pRS4wTMO5tlGKJgrPimWMyC/aw2UXcmljPw+G/m4ZC
0wT5h/V8T28PAK5mu7Op2H41ZaiduFkyvFSRGKo44QKfr3zIzcD5AMXn9K1K
pSkgsouNbHWbGfCG52sdwPyIw0tyjvl0uLWdwP32rQMc+zXfYTFHAIYR24Gq
h2mwNegmw6yhHVzyabyRg/OrB1rZchy+qaCGrl5qmbSHc2by9Dfxd5NRYs1E
7FM09Oe8VG49qAdtdLSbC3E7w8xc2SWiwsGLUtxLukIbQjjhRQT2D5+G8yO0
6A8nf9WL/mSzhtPpOeu5uP0GZcerGTq94WNk23L9M0uokfT33Yn9H3/5ausi
/t5t6tTfEamthRqTikwaf//VYf/yv/wv/8v/8r/8L//L/2/lOy/m7RNMqPx3
XfWKY+Mr+9L/9/NDzaoNnk/Jn5DBFm7lD0KJIO4jvsBBOwNs6UdNww9lIlp/
IctPZ62hzvX9D/+f/9/lq+l3fkmn7nqNRu8zkemwJQKf1XoyX89/X3sW38ak
ny4NQKM773lItjmAccWQpBnO51kDLybki5ggUaWcaBFVLSgTSvz6/X9w3m7Y
K9tQax2KSitenH6RoQnF/Darm7AfTqxxjAyGD6DqPcIUkVJvwLFTx2VH6zgc
V/mhpD3Tje6tPLzB4xcHH/d+1KkSmv6X9pPo5Cib2LrQKt+I5Q/6LIh/w0q2
NWgaJDYUWnz136P1seV18ev5wETYLYUECCA1dsHSxnoAndBK2kLp8w4KmtJ7
nsiNg3BcjG6SfzE6X8FPIZ+dDOeUviYcbvuvj8t/ddxtLJUtlNnbkYpnRrQ0
bxFIqIU/FHg489/mfwk9FxuD5G+oOWPuTl/BSziaPeCfJj8FuzVJ9TMax/L+
qZ+xvk+qn/nveu9/lZ9UvLxz8dJHtCOIki69IhEmEs597J767/NDWL0r360b
vUh7hmpu/VUG7Nzy27b16BQIy68bqjGNohpp+8XYt43AQigaerFpGGSlOJ6+
3TeMuCs/eBdFNEKfY+hVxX2jAJ3bbpzRH0CG1BI76C7UQ4hMP6NtwDgsxmkU
zfQNoYhf0elmbpVQ/GJdXnp4FBoXulbn7/QjzgcUR/YblYJFGeL7kjcBhz3G
9HrPeaPaq9z2Nd4KYGjZ0XIOxwMrYwrBSbgP9d3iebzhnwwZh9or6t0nQZac
9YBkRA+KslS5pPkpE7wb44dLW6Yg6uV3LTKpT6g0qjXEljYTRLXq49CRGfj9
PC5JSrwGibn+3rAxCweTg7YVPHEEcGzWO9gtNYqkNoa/30quhd5upnVu6WHY
d2rLsYVbxWh4x1NXwzJXOPTTzsr+CwEC6iTW9nNkotLNTvMmlc4QUZeyKoHX
7fPndeWjriaig+IhTqBkAr+4e8atlglQG+1JviOrH8VGJQg5XqmCnMRXBDHZ
CThlz8C8JSsG7c+4Lr7EfgKkpOUHfNcIoGx8heOEcQSKmIhsX1WRAw3mQ2/N
1gnAnnp5W4/WODrvFykztloOv4fMeDwYB+EojY/1Leth1BHwdJdEVyU8e8wd
I60wCuvfpgt1uD+hVH3exKxDKUAXXFVtxzkD7UHT5tVuI+hbxJjFjWPlYG+b
EcVtMAJ6SXJCTAJj6OoGRRf9kTdwTSjzXlDiEPyyJ9XhNIuS6nCYdpLqcKRC
AlQfuo+h/Ngx643aKihPkV3XoBoCBbL4TboVCH1Btgd9tX3hV/YhwjdEgImN
IzsdZMZQY3Rxx6Wb9SDnVDozTT4EjMthZvc0RtEHMrOPNYP14Py2efk3zTD4
L3xuvSM6gi5+EzFZ31UDOr9yXRutR6CDk1SHc+EaqQ5nwZBUh9OtnUV4snkI
yUt3jbLq58Btwm43hqExuNMmYPXp6BA6/5p5bGO1BOiz63SOpI3Bq6/9EUNH
BlEDmY9gdmQiTHeeHrKPGwctm0T6Z/cGkC2ZO/uQfxSEBqo61vFPAHuF9aR9
eS2KuHeJwd3RFCZbPKzigwjQEsYUYjvQj1TYjH4znwoG31RWltNuE3A2XDWP
UqgfvZw9NN59LxgObgv3N56fgMsuMz5vV3pRXNVhBQ1IBiNL+TWTxUn4zZNn
MW85hKQj937pM08AcjF6jlC/MdBJm7n+zK8LGby9PVt5Pwm8uzsv7XaZhtuH
5Ai/AI+7t2PTim46ZMvsq732bRTyeT9nNu3+ikxCdatn/ZLB/uFrI+7SKRjc
kR4jeqQPJUW2LOrQ5cKxhPDiSr9JOHiBo06BZQBNy8llPMwsgGjFoJYnQhNA
qOlii+EYRGNBPJVXCTFQVcASwR4zDs0+DTLz1EPIZJdYj9jm1zCh3vTcpm4M
wO7K89CZYXSHN2bbj+ocWBl5ynnq7Cjw6D+4wn1iFPGP2ivIbckGKYEHRz6v
DYMS4QL14wMjaG3/dvuYn3FQPpR+SoplFAq07H15C8cQj1agapRGDnzf8WNG
Q3AIjhZpiubdGEeNB/0ZvxhlwfLzA65rjoNASTkwkVoxjt43HU+Sv/sKUums
og8RBuDxs7KPo5/70fWDPWv3JnPhGr1qfZbFBDxi5VKdyhlH9wSeZfKwFsLP
FxcHuoYG4Gjjmxw643F0qkNnNmt/BbCEtA9IkQ9C+Z3Vn2l7xxGfb96E8bNK
eBBwPzLJbBB+PN38TWdgGK2uCvQ8S38D+7/NdbTTjoKWT6v5tbQmtCMknsAa
EABHXnc8q+ImgG5Y2jmPXXXo5WWpuH12QUiGo+v2Vj8CsFE0zbW8eY+0BHxb
JpJ8UZ2Y/LeHNwhgysvotXfzMBLb7iqgFpsF+xecEjv3jsETwdItWi8a0Zv4
5mdvPhvA77PBXEvCBIjo+6hWJ/8BvQu0vrbu8wI8q1wpevcRwLO3ySh5CaEV
lq0qTOcOgdrNbwzE+ejXTVAX0m9CUl8MOp8uxADH7aKNAR4CfFA96GgZ1YoW
RZV2xlO+gAsWI1HnKmfgyHHNLcyV/chg9NAPpjdJ4M54J0k0bAKkfSP35uaN
Ia2klcqzDGnQo3Y9Q/36EDyTu5L9aEsHWjR8YmFhFQGZ5KOiaZo47z2gunfv
tU/o7T0NRbvNcVBSd3P7LF6X+tIunXwW34gMuC2/tw97gH60psZp3K8yq4YX
sts6Uf9HsdvIPhEmc7U2dXVMg+rG0MBmyWEkor4pabtqPhA+jnQOV41C1DYj
mbH4HqS3IJ91+3AydOkd34jtmIIK6+GKto5alDJe1tQUHQBfqN4j3wACrFMc
778f3oZWWJ9l6n2LgaBZlmfzkTPwrHsHi9TSN9RQR2n/gDkBfAQ4oj7CFNy8
3pumuPEd1YZoLrNeiAeOO8o+kbmTUPylMdfi/CAqfra3mCBfAOfGayWFTMfh
peKOHHnjUWTudv+z9p0KyL/Ls2fcaBgIB3jDj4r2I3Wfkm85r1+BvZ+E7o/B
CWhnpdZfa2hGfZ9zZu/UvgRGgzJ1VwYCDFAe93maOYAWNG/kiznnwvDx2TDO
oXGw1pWwuP98CCW1sd+y1U6HzDP7Oe2cxsCY1/bV9LlRlEre/ui8Tg68jfp9
9sP0MJzkWkqKY0hHFI9qrlAKBUJxUoqEwBwB/JPPHJS9U4g+fhRNqTXxQsUd
4Y3vBgjgmvK1uDLoNbo3snboQ3AoUnJSMz3QS4DCaLm1B3SfUeIuZjW92Jeg
45A2VLxlBvpdLVjy+YsR3wXtn0VT9ihtr6X4TryPcNg1aJz6pRwVlPjQG1vt
QwYBLb0H3xKAV/inyN3UHHScSz2SstwYfUp+X+AzQ4CxVJ3dKY6VaFsBzVBs
uT2IHmsQv/GGAMs/4iUadT+iZiPvtzJUETDV8+KUzeQMXGju9x/p/4a6eiJ3
3DgTB42CZKqB4lOgfkqys926CgUocikUfPQHaf/5mYN5BPipdX9I7WoVymcd
5Ys6j+PzuLlEEubbQrTuShwuQCfnLj0Ik7cDkwt3vxuPEGDNgp4hcbYKLdH6
x5Z/iAF6nkuCEekEcKaaiDxu3YVE6j5898X5CYPuYIya+zS8Z5BnliurRUoU
fIX3fSOA7EMj11kcb7/P6r+d5A9Gfjbqn00NA2GzuFUBUW96SK9XcKC9Dnkb
lVXV0AXDgZojXkauBFBvEXQtlKhHp+rYKT8jP7hwelfwiAMBOlu6KCMSPiKu
y6cfN2dHApP0/cLHgzMQ/v37D5nRflTXPdDxNCkJtBqvGGyxnYCtEhaX1r41
IKF93nTbqYOAgpXdasCAAKHqt9M/U+Ygs9Rzh2+UhQNn33Ua22kC5I4tz3Tv
fo8mihD/SbNQONH89IONLAH6xFMZaT2bUWbjqoLl1SA4+LQtS+MoAWhTo8sn
vLtQ8rB6pODRYLgiSxgO9ZqGuEy9fqP0GKQQdpQlTdYKWhRX+LRwnjMhFnI1
gDoLUXmelNXgdEFv8ruFiPVFfV1sZUr3ElG2RTh58V0T5LBpN8sTnEf5Ku+m
mUNh6PXLFju7IzdR80cq9kbsNzneVDrzayZAY17m0r/qBcVT4i7HiOeXO8lv
MtS7IV5Kw6N0S/bgdoGQz4X5pAnjm0TmWnSra9hGsscPzOdf36aJIMBKTe25
4M1GqNNH0DFDKwAIB3vVEN6naMiR7a4atEdZbL/e7nAJgieMOS8EMX+jTaor
e0lHqivT+VNXxvwl44u/iT9KCuG5E5kQArKV4Z2HiHVQFun7na7Gor0pCZ8W
c0Ph5s4DK1wrBOiS12Rk2PUKbBlG8kaq/IAxn6FCZ54AcyI5uzlPv0Q/Nt2r
iXAKgmcqrdcUiOclFYcKOR4kIfereXtbbniCzYds75NLBIhvJ9WVLdCQ6soG
ukl1Zfw/GrlY/FNRkGS7jH25G4jlLJ/Y9gvvN48cXT7YbQxXCGeUx594w5qy
eikT9s+RwHMRm/D64B95Z8fJLR7A4B17YQyvDw/N79wdp0tHvIxPNu9T94OV
NTIxP8yfWx207pxwRfc+hbv8/mQERoV+LTrYzmU6nfsnT1oj+8WWLNEVXxjo
ujzTj/3WLCzxlIvSH6lK2UpVNwYDd6Hj0D/6fsytxTThSEiJ5zxNkRwIm9Qe
8cxhf65EnzmrvZ4BlYn2hSqxgUCzh0HMHseJ4VFS/VizI6l+LOZP/ZhJY6Xw
QdlsMGeinzac8gfBJ5E6HgTcX7ZojnKbBCQVn0y3u9INSoXjpZ2wP3fzSymJ
cGTAjWhzI5MGb4h9nDz4HufzMqIBRlOucVBUqSx9X9EZvNPKI+/g9rz8JPbd
ZCYI5o6327lFu0NxWp9gD25/UoegimuZNmSZf//J/s0bBIfsR9mI9wZ4vDRh
R9rAMvVc6sEpPXTrykzSJPE8uLjkO6EAO3SNzT7uiroz1G/baCLWRy1KRTu6
Xg5EiyWnOo7VmcM9O3FnP2LdwtcWo/ltyehATPCs5QM/SLrBdNx0kQDfzpjV
2qz4o1WyMJbIFXtoGBCKJ+ryseFlL7J9fNF6AuM47ZQr5D0KEAzC/PbxvY+3
4Xk0MH/FISnTES77uDWZ4PY3VlwTPpgRiLQvv2K6uOcRCtGnLooi6sUSdSbn
3Aqh07O77cDJDJCu+0Hu9pkAPO1WbhdfZ8OX4inVJ5wpECT/zrR3lAAW6d9U
6yjMgI5t9wsNGU94PfvQ/Azu187LO6ULTuVB1dsxR7aFeFjy8NQWxeuqy68P
vUONabBD1MnNlccNPLm2jFMvEIDSfiy2VyUZ2vgTeaxVgmB607eA1zhuDQpC
UzXMUuBALJn961cO4Fyb+44W++F4ueQ75pwwOHZdqKKO+QborWwc+0DU/e9p
fXqB/VlesZ9lIMMYCAbq22OIOrup0Z6CQ8pw22l0ug2Py6Z65lDi+fFbTIQL
QfLOcPCRdLod3scxqna+IZ5fppn4vpIlZwJHFhiTBYPskMj3nLJ0zPexqzke
YfQHK6echEkqV4i+tr/fkVhfwUS4P6rmjNh7dS3o8PgORz7WI9aDxe93jY8k
MwOnsHQPO05rqGe298rHXEC0k05NIxZGwxre2Bw0hB3bo9tp8TrplTxwmxvP
h8KUJ5f1P9uAjQsbnyGx/vMGc7D5hiFqGFGm5OLUA0ZmVX1iPV7Qr2amUgtL
5L3RcJXB3w5OLR2lJtbTsvkyDdUOhyLtpM1v9TocoMeT7Hgi8R4Gyi6TyhV7
FP39w1EvHA/R597kE+vxGIt3SfZ8iobeUOfjvvrewELVJ/ELx3+ew47EQ+rO
6M1XPXqpg05wZNviEvFcvxRvp+1BzM03fM40W1iCxcWolKeYb9V1HJA/EIQO
P6RnL8XrgxqZDJU9bn9FqrXM8MlwNFTKuCVAUwsVZ0Uv5+D2XCxdFBG/ngQJ
pW9GPR5GwScyL8NVHA/jVJqT049xvKn7fZ3G//4oYXXabBzzY4U7cj5ehBc9
xvqerMrgJHHkJ7Ge7YYvz9qd4nigoHcfcb/mCyXKw7J8eL3l/vJScGu1N+xg
678wP2CO4pp1Anfj55svhvaQCWuBQKxy8+ADLfTx2SzDHOad2uK6TO8cYPVR
DJXDZwekzsOvooH5S7kwqxOUoUCz9/VwkYAe0pONE9tDrEs8baMUuWKIBGl0
GrxOCKLSQMnmafx8dWz0CUY8Lhmy4kyXttlA1abWh8mYu4qsFVv9igNJo8m0
T0nGMKTkv/4Y+3nYa9WdH/OE/aKOartdQTpwSWgn5vo5/eQ0n6OBkaL5tA+L
Hnjqj7wvwHEiUslu5YrC4J5Jmx7tJUfI+uJVQ7wv5fYK3/gClx56qdZUlI7H
19bIR5gYDxej0phKtglCfMDJ6xffKqDygbfR68TfW4JbVvfsDQU/jS8RZ48o
wwL9Qyla3C/K1r4L39xfwOWy+hgDZWeYplyoJ67PHOVPtI5wKSPTZMEmRtxf
xYB5AtH/T2nvJZxV1wLO2KSj93B/Pe2Gnr0l3uty5s7ufuwf6rgblkdwPtD6
9VBWNeZREdsu1uM4LH6tWOe63wzqHBdMIzDPrv260upsWHEy0r0/Esez2la9
aOJ5KJEMMzYrDmt4cUlxnIdTGXYxH91OrG88ZJTiz5ppjC4G1PcnxFoAf2S5
ZC3mexkusvtSu6JdshXRZO+0gZIh7JEtcb5zf1N8xuGFTF6LlP/I0wSq944s
IsQ6wKHZaywe/pAicIM3o8UBJsX4BGOxHxK2tU/6P9NC3FH0Wx9oyqFPegad
i8Tv5sSnnU23fUHvx6+963c8YHglvt0SP09eS582k28O1q23T0iz3YSv+U+5
iOetFi7/+FlWHwwpTi1DtbXa8MPY14J4z8Phj4NiUvM43/0wdIb6qw2UWYod
cCbef/LpvVPEnlCYkbtScJ1NGSwaqXyI46Jgp138KT0QniQ7PJJZ5IJVgzbp
BMy9Od/1aqk5g2Kx+4icmhx82DCNCcV2Em+cmLjt4wsRZxfEu5W1IOvKHfa9
mH/8sSl0W702uE2Tmyazn0DpUMVE7NfvRcWSDzh+aoYtbptwn0A5LgL6xPsQ
aHgZTpwMMICky3YioC6HFg7pNRAwz6cg1Uka5/zHOkkNJ5/wxZ/26PIhV4Kk
gDIEqfhdL8TcO7a7Iu5ECCrJGNKqlVcG2jb/LiHc/nc2n70oZ+MQpzNvs9Q1
ZZhjIC+0x/Gm2/SKcN3bDkm7igx0thuhTz4xLbnE82uHFrt8uJNQhVV6Ot87
BegPIL+7gvOim6xynXHzcejb/OyDMDpBYP7x3cMB29ELeqYfUhkHp3yo86ms
XGHAXKruCOYJvU+XN3kJIqrnT8kPMBvCdQ9Of2K/iqwojp9SNIENJY9XW33t
4DFzZQNx/W+RVt69/MoR8lLrf+nuNYNnxsnGnpjTqj14VoGfn3pmZUEx6Qrb
70m3aBLvb2mLp13Bcfv4OpnyF7xe8X1l2UaM2+WnNvvk18KR7z7+y4aTgkBb
1mzgh+dvFCstfxuPMlg5BtQ0raijsvSXUUvEevWEmAMH2ayR7dulKA08n65k
v5kg1gHOch35px7yZDapHnL+Tz1kCs39nJvevsgwbFvmdnNLxMOowjGD/Swb
EqZ24NALBHJdGVsW7RGf9eaLp/B6srb7mUDd0gvUyBqyw4jJHn3VtHT6jf1j
I9vD0KAej+YK3xxqPGSPRvPqS3ZgvjlY5k2p/ks0L992IWnDGo0yMryyx+tt
wb3PEx7bQtFcRepXu7N6YLb8NYwKv3drvveYFnc8ctWfc3aic0LXEyheE9e3
bWu6JexBxqiS1mCE/Y4nVBU7n7pErC813FQrU20OZtyq7zX3uoLppoNbHmAu
VzO1OvLMEvsP9svLikKOMzcjsW62woPT9OK4OpziZQzKj3EHeeM+ci3M7/1W
O+RhE4q6eXlD76YbI5aG044/iPV+TimGNrpaKPrFncXv7Q4QbMBF9go/z9fb
WX7uUQCif/hjdIbqEYpro04g1kNuT+HaVcQehQzGJ3dmsFujCHkLFeJ9I2lZ
6rf9z8egfpNs2kemloiPrvSpA+b2Cs1XZrXikTuvueGUlgM67tVZtIz9Y1Sl
c5FYx+gUueMLsY6xhHrlnzrG8b3R9anlkWjiG/ungikz9FXF4Cdxn2jxLErz
gZIfNGhE7nr0RQEJPhXfQobbWbBHVEtnPBQZNbIyoXEzZD5/iKsNP//1we4j
3E3xoCO0PTc1brBC3ZI8khL7WchdS+O1SgacFaMS9py0B4vwRSkWnM+r8wnp
RJ4OAZ2G83QrlK4wb5qiRDx3k7Ar8MH9xgzw+pXQo1ToBoYTKRw2OE9WC9jP
/Xv3Kyh34r2enuMJXZ+KXXPw/mX+TbPOvfpEWKEzGZMIcweLXLHoNDwfFcrF
ou7VucFY9GtR+XQlodkf598Y4/Y/GhnTb04PREFUtZdsG7XhePVFp0jivTcF
bNPu2P98LcHxbDoOwJzFZOhCrN9ec0k6vO0liOc/DTlepQ9Ub+uV+rA/000P
9PJujkbmcnuZc2Tk0O1Wx5Vp7P/HZJOHT0smIF5qmvjD2P/Mpi1R/djPa7Kk
e2nC/txLc/nPvTRiOiQe8Ifz/+HbuPmHar1eIP7cpWe/vOxQVerAA2Zs/7oT
qU7SfCepTpL5T53kUfPdbHl7suCYuOKuuQEnYDKyp7TB+5ecNWbfLd+9UbT3
QLpSozZyYSmtIu4Xxs8pzM+Z+8LolQlZZks7MFoq7PmG+yshYH1jn2owmuh0
/savrIXoPS4mKxHvc3uudH5g00vQVx1Y9b/sCRVLHrki2A/rSca053XSIIvV
evyyjDOUTLVs2OM8yrhaQKTI6hWUbepAu3a4wi/37fv88XjRcDV29NkmwMXD
qhdDqp3Br0d+IgH39wdzA/7svgDG7SUvTL65wnWBH0d6cPwcu1z+K1DkFSRR
uGuW0NqDSMHc9kVsR/ji/jKOo6lgT6sW83zUGl4+MKEsxHl796wl7xavOHgT
U0ag/ugA+rQzabrYzuS+jHc9s3HAdofeamGXHng/70bEe+fm8juzf4RkwDX+
U5KbPYLh3bWf1oHYb1umWn810QVB7oZh8BU5URDdPrGduK+h1ndcvW7iATu0
Y9a5vA3g8vYMA2nszw2FS195PP3BT9YzO3/DGiS3vHhSjp+/fPmz5rRYDErU
2ksT98EIxTZnHiDWAzsoS1itkidDPNfTw8kqz0Gj9UA2F47bzpNq22+1xqM6
MreEM552iP6ErX4L8XyQaElvCZ53KY1XJidxvCWbdNyexfNFXNhys7msMzDH
Jt/PxfsIlsq5L8R9hIE8y/1SxjioVfms6JDiCOYCIe8jcX9LQk98pTdMBru4
tgtu1TZwv6nt2TTe11T1Kyx2RiVB0InnoiYlblD3YkcgG27PO4E6sZc/0yGh
o3/r8TvBYPfJO+IEno/8vjTf4llTod4u8XSPSgBsN143KMDjnqXJmrim4gzK
+XtGBPB+p8z3caU3bs/dG4Gv9NmjoEiHPTWr1QFa9+5iasF+UHShVwpTCYar
qg43TlSZw+nxW9OXsN/aLc+ZFbPrgbG30YHvWcbInPNhWi+2o6BeAg735eCd
wymPN9/0Qb5U8z5xP8Wdf+5Eg6cdhO/Y+DyUbgyDAU5j2f+bvm+iqE0nc0IZ
mT/9dJiYf3oGXL49xnUTHnZH8ALOR6K2hhr/wvwbTS3raXUT2Ke4N7T8xE1w
HUqTI55P360wfn9lxRDmjNXPtKlrIUYuL9vR/8H1A3/5/wyewhd/LJa8BZm+
NQ0UDC8Buc25/Gf6Z2BvfZ/l0cRhpHqQ4ms45XvgKqQ+lZsyAvmNZDTGqwXo
5LMYShX2AFD+YvtRYhDn1RwP3/doDCC7JK8bJiq1QK739khM7jiMXQ08DeyF
iEfhccxqigOUBGofy8LPx42S7rugcSfdd3GVk3TfhVR3iCMSjUAbY0tGJ5VN
YITh/HNtvI6ZmB+0kmLqQ/wl3BwKK0WwUn/+YpjVJKzfHik59Try3+upeFtX
Vc7h599Z/sf7K2r+3F9xOJQl7HCuD3rn+nb61PJtuCTNYEb8nbZVO2uX/pYB
dEwgMt7sbDGsPBTc2Co+AauSzS9s74+ixV+/jVJLisEeSZ26kjwM3+LPl9DU
9yKORLHni7IJsM55e5SdbAr03rJq+XUMoRL/7kxGhGBr0q47fIuj8HFLa0bU
xRFkxB8lcFKsFiQdh8hvmowAysxSklT6jm5zFO2jmfeCXgmRTU1Dk7Blefoj
37YRVHf2jF+9eB7omDfS7j80CqOaw6Iyyu3IoOJ0kO50PBiNFJ3caz0DQrEj
s82pn9BK0FRiTaErZFtbduw7NAPbmBSPO+i2oW8UP+yTPDxh3IL98XziDITa
Ct8Oq+xFgXOe9E9TsuHpvdgfRhuToExLuseglpp0j4GGOekeA7O43WZbyL6i
YH6+JAG1HDB7sWXiXe4UqFIJpyld7ESZ2rEvDrVGg+nRC+2E5mm4/DiP3ffz
IHrqHKlKsEiD08uN4mN7xqE0h6r3puEY8n3Q8YTjwxvIeGNUu1tlCFqn16iH
b/ahlKvfJLuFUkG7XzzA6PkkpN2sfPo7ogzJxZvPMHRdgcxvgc2FTTh/OBD7
zzl0fQvSOfR9f86h0z2j9f9ploxEOgZk96tdRC7chQKH8HdKbm6K+mFaOeqM
po3sCAyFuLKR6231OJ/JY826wOSP9v6+Fvg0VRMsG8/E/SKeM/LOSewOzEUh
4iZ3dikEA1tpEOOeSQJcMWizbliqQOVb5vsFvQIgb88dyZhqvE9nPTFZGG8H
V5Yi+LfTB4Gn36VyRWzHJGiW+XNiPip8d1nIQsYDuDtXd54fJcCQ1h0Pat43
iMzkgvXJRX8IKWevcf2Iv5tHnfa94wyBmZLbiQ9NYmBQz5f5K/6+96g2f70e
lQOWeuQR+hsh8Pn55/1fpgiQWWaRwnDUC9Ud2ORcXOsGbBSe5cT7dUsTme5s
oUkHU16zjJcLLlAy3GFGhfOi1kek88XL+aTzxa1/zhfzWXm8EWsJgDJZxT0/
8LzTvtneTzyn86v0lOaWtEB0xYCqtJbCAyqDmhZ2YH56Ib3qPLMXqHszHOyP
cgfTqa4XOZhL1n5oPZb8Ekmo6NGwDnjAa/4tTWM4f+OyJ53PFfUhnc8l/3M+
d1DlmHtFtDuyqFjmyJ1zAkIl547txH1T8Rk1Y7zfV/Lxjzx2Qg9N1bj/c36T
msuyI4g/BLx3KFycwftiKYU1HuJ5JYJYrX0flzLyHPZ1+8WlB7YqPv/cv7q0
nl7KrK4FtEnheUr+dkA/msVMfC9bsMCQJKMXgtDNqdqbjaDbg/cCsc7HoPvb
YX+mRHSUXrVv8rQyWKadyEvF7W87kpWjwh+CDjy3Ps/IrwxmMVvCifrLrdEv
F8auxqBpfV6OMn8DlJa2vzYc5y0ZCk9OKY6pw0G1C5a54Agj+V+vpRLzhH33
ppf2uqIqPmX2k8vqiCk6o8YB89QRfbOd6Y4QMN6wahRtASyqY1udML/DGRQx
oRKLfj+05dQtNUeN/cNZ27D9xKWrdZlyiWj228rULiUtdLLrhiNRR+j9nuyi
hOP5Ir1gE2etORolcFR0EcfrGud6vZkTsveTSI9tcANqyu7R/dh+jD3pnGBV
D+mc4OCfc4IcH67tKbsoBwxiVjvOuRqA8mJHJ/H3hz5uZpvrNoJo2DwJlpn9
YcJDOI14jjWbm3TObvbpqX/O2TX9OWdnEDwN0++D0Y/Z3v/V3p2GxfS+cQBH
m8gvpYg2S4pG+klFm1tEKi0olbTQIlEmKlS0l6ZJ+0KLVpEWSUqLp0n8hJRS
aaN1KtIgkgr/c3rmjRfe/F971XXd11xnznX1zMy57+dzvsfp6SQVZXX8Siav
37bKKVOGBYIBtBpbXGeoKLRHYJMbcXyjw3KeZ3IzENXv+H1qrj+S7GouUybW
58hLfN/cBnl835wv+765usS2zUrE9fDq2OYEzZd+6AvHdlvyPr7phOo1MxY3
oMpdcVGhFg0K1wu68hHX/xwGOtbhBhHAX0PTvSDsC74um3Y/Jc7nfCndLL86
DTR7t9hqjAWA3h6rCjK3VrrF85S/dzwMJxQLx1aYwrpLvCs4/+Zq/q3/rf+t
/63/3/Wd33X0/FIHUf4txSUzW56AleyzSZd6JpTNFd0s+KwHVX5tVpblKIG4
h/o29WLvYeN35pm8+01InjfoZlFwJVhwOo9J243Bh9HQUwHxXciyrWqnk1wF
cPK8MAl2HoX9XvLuA0Z1iOLV0HXfsAhexCp3LtRjgYPI0AWX5zXoTspusx6r
KNhSbPx5KpsFU1rYXZ/gwu76PDu3cICdT1jJzifMZOcT+rh9YFze1Y20n27t
XSt1G5yv1I+mHB39Y67gkussyccLBlGhuNKYciwDyqkc3SfvDoHq9ZdjFyYG
kGkgPd1RrRam1ip3B2b9OT9wb+MdKeeTsYg+IxrfNm4P/lqWBqbkfjo7P9Ai
GfdTn6RwP/WnnMDylXbpLYw+ZGviYH40HcGXkcNUz2sj8Cqd0rI+ZABtWD5Q
Z8moBFcnfs6wPcN/zAP8U73L008m07IH8c0peknNfwAyzJb6etX3f84PlML+
EA2Ez/pDWy3sD108jfoLN7Ujh+6k/0bUboKUn6rsfesPYKs1XnH0YB+qL9JS
4nIpBuuJeUWFYu/g/iXshO8cx07Yah52wlclK4RjRlrR3pIszpMLU6F5zubF
27s/QLfomdHX71+hG9rexyVF4uC9NX1GRH0Miuu2yIYE9CP15zZf3DXKYdr0
0wyf9Ai4a2D3K2aG3W8FO3/Pam5odM0iJnLjdHjVXVIGxnmNkx+nmKDrsMyX
UjeAmhjmVcWllTAm/uHivsXDcHCw3T9TsRm1ruFtF4z2hcih+pT1wcT7Dl/t
Fvd9ida7SCuubIiGncYq02aPx+DFshA7TUcmSu18W2p2uAjibhQd+lnFBCfL
Ly119xqQ2HZ0W88oBXacjk8Q/TEGHo6P1sXZDyGnuyXyJqUFMOiZuEwADYK1
NXabP2pfzLrNeYrYbZ7lfDnrNl3KsNvch7DbLBLA/eClBbgfDPDG/WCBx+b7
DKFhlCHx7HjZ3hwwzc17/J1rELTPYLf5IhS7TVV37Daz33fyxvwYQj2x4Rq2
zfmgmNQvpCgyCFHO2Gfyh2GfGcyFfaaSHPaZ3Mewz9zNwD6TVkDRO3p5CFVf
dnpneLcM5H23hHJRB4F2XXKj1Ecm+pev8mr+7kowncps7uZhwrMY7DY5OrHb
5M/HbnMd07etdNUQ6ivVPS4WWAmGneudaE2DMCWK3WYGx8FZt6nggN2mOgs7
zHWN2GGiTdhhtlphh1lyDTvMkb3YYYqIY1c5kYVd5QYadpUyAthP/jqH/WTs
KuwnE5yxn1T4if0k3ybsJ722YI+tXoU99u1t2GNrd9gqKeVkoH3QcX9CygEa
PomJXSKue/XizY3/fVCClHa/Gx7Kj0TCuc5zDXtZcKukmH+DzX3Upm3iENmj
DK4ZSVk5bSyI5t4VlHG7BJ3m/tLk1OiNfmn6Cpn2EX3ctlhF0dhytPn51LTP
Ox843SeU69lM9L+TOP9N2RX33VR23x3KvW0nl0c5UoFvmh76UbBcz5H1iajL
tMhpVU9VoHMrxVI+Pk+CxsVn+PufscBDWX9YRisHnqxVb215mglq1VvdHT8R
fei8zq+N9dXoyF0lUemYBCh8O905fI8FgmWjxXp7IyA6MmPiZqY/bNXvVSHz
rJgRC9QKjgSi5xybWzloF+Hf5MUdpF8ySNPUuOPLQGkNC75zbyb6911W51yL
WHBPfLi9i6cGbdcqlRwUjgCDvWcHD+ez4LEydnRv+bCjc2c7ul9LHcXybz9E
3Ms65POMooErcxMPJYU4T4XXP8ckI6H8Ua8xH/F3w36T+ZOkY6F/9LYdT4II
RasVBZcioaf9q0Qv+fwaPsYiLvdHaGvPG339OzGQyTffnkZjgTU7h01J+Pcc
NsWJ5krH9G0wunRNppdDBMxbMLSDl3RZNx4dgILHKOqYNf2ARRSo+CwZ33CB
BaMewfSzFy6h6ReUB/zBMXA9dMdL8nlAkzrZvLHvbsHRun9eiKwKh/oftz5O
f2aB3GLs1njdsVtrYLs1cfVDpy9S4lCZNleffScdViyZoZ8ijlNbE7d0v0gq
6rBNMQnM9QfvdOVxCeL3yCujXGgRsS7/uxZedSzxLJyyWiX0iehDbzrjOUMD
O8esnj1niDKp1BlyDoU4m6UaXw+5Aee+dhcydyjM8Wlw78YgqDByi9M9poc2
U5cKR5D71LVCt2if01C2TWjDnPmhsDPFcBmTOE73uRN2FpkZ6MvETaDIhIGO
zT/R7cT75kkw/dSa6HCFmbIwqiYEDqzOo5AOYaLoE+XbwSwUo93jrT+HDtpV
bea1kyyIzX53NpHXA1Z1da5emu8PkYL3XMl983XseUVRz+/zik7mmeiJ4AB0
NV7eu1TWCyKbVGjkvuEjg8Btxvn+SKPDmPEyOACe3V7loUPWz1n5cXuEolo3
y7j9NoEwV8tTgpwvLbZ8XGrRTkcxzktkdr7xhuirla/IPlpnrk8jHy0SXSr3
orW1uEJqlER4B1EfZh2ZdUe9e7A7ime7I3037IsoPSGzvugZ2xdJnMa+qCUO
+6Jsti+qtMNeSCGiZNYLHWd7IR9V7H9UjmD/M8L2P28CsP9JWoj9jzHb/6xI
w85HwQw7nxK282mgd6LgYRvgnhl6fScoAA64q29PJt73SUCO8bynTqDemakb
P+UEj2Dk+AhRvxd/fdb/qH3+3f98PbHSJ8kvBooLaoLnT1EhvX23mytxntKP
hO3HV3iBZ6arY//DY1ClH6ZZR7xelu1/Pq9R/c3/uLD9z4HS3/3PPwKxjBu5
0SAuZPEp5JsNaMrZ8ZCuhulu79UUSH0w3/N353MwLOghlfg8LJuUTtM1oqBf
gn418kR9vwR2JlLVvzuTsU03Zv3P8vPY/yiw/c/589j/MFZh/zOf7X+C9LLf
bjU3RrX9VX6xEVbEL/VkBZlv1t+EPSTdCHvIaLaHhHtmmYkqQWimVixhvnkI
/NBLECLzZ6J998lGkrlYdaxvEQ9NUc/rZAbpWyYaNYaSZmwQKzc8lS/vKKS3
KC0k97M+L5I5FWnmBnp6/yFe60CgXT1tQ+4PqrXMJMqJRqKiJ/YU9x+6KEie
0k2uz9dLpAJ1Cq4i7UL5FEMeLTRxWfraFjL3bwTnX602w95jgu09BFzHe5gZ
Gaj1UJjY4S5VFLL6glg0sT7fpCqPb6tJQPc2Gfa3d3gjcZ6TduTcyfxYs1nD
ZCTqkg/sVhLwQKOPcy8yyHnmgZ51BUFpCII01H1aXYE2j9KfQ6xD+zA8v9Ks
/j3n6ix9dMPNsFQku1GhjKfJDx2WVzNZSPq0XJ6esDl0FOmh/G7fcO2DL4w5
E2Se1fsfbwzySsLRdN/PWt9VVDRoXv8POR+rV8NzrQ2etabkXKuOPddqKP7a
Ns1IQyI2M7teF11AT8aZWmTOkrUKr8WBUSoaLjrJ1BT0QIUie3JIV5OsqHA0
1+8i3DC8y/NZYuDBZb4TLeS6mhnR91eYTEOtF5uDNCZ90WLtrKfk84amHfG8
69sCPO9KZM+7cpIE5VJDLNDy917KOX024JqVHUc6nO0rDF43JiUiGkOyYXny
OXQ77LyHN3GeY65WQwc6r0C1jmrLRn0acDRo7SNz2GTWbx83nEqCKKmZ73OZ
weCSkPXVmajvTl6U60uNB+eSqQbX8wFgPuEefZM4jtLjnaO5YqmwZmOcQ4df
AJjctRwUJl7v8KEq6qBIDtgt3au5epkvSNXkJzh+I763L2KHIMKBHYIU2yHc
mmc8v7XpJogHCouU6/kAda1FrMlXYj1M/pRSl8uGRUJXfEKFvMA01IHeQHw/
j6+ZitYtuwpojT1v7MnjsLUqrYlCnI8u93JaekAM7NpVqs3P7wGyw2EP7Ih1
4hBwzC9LjwY73FUNI/zPgMJHt4Pk//d/kCIxIg==
    "]],
  Axes->True,
  AxesLabel->{
    FormBox["\"log(c)\"", TraditionalForm], 
    FormBox["\[Gamma]", TraditionalForm], 
    FormBox["Efficiency", TraditionalForm]},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotLabel->FormBox[
   "\"SVM Two Circle Soft Log c-\[Gamma]-Efficiency\"", TraditionalForm],
  PlotRange->{{-3., 2.}, {1., 6.}, {0., 0.960199004975}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6703759361233892`*^9, 3.67067764526409*^9, 3.6709312154572678`*^9, 
   3.670931274230645*^9, 3.6709313594065742`*^9, 3.6709314462857533`*^9, {
   3.6709315323791523`*^9, 3.670931579621949*^9}, 3.670931727027594*^9, 
   3.670931855930511*^9, 3.670932002863783*^9, 3.670932043691493*^9, {
   3.6709320817556334`*^9, 3.670932092729817*^9}, 3.67093213956325*^9, 
   3.670932184430917*^9, 3.670932321838228*^9, {3.6709324866350594`*^9, 
   3.670932552932519*^9}, 3.670932672382707*^9, 3.6709327650856447`*^9, {
   3.670933197895687*^9, 3.6709332254231157`*^9}, {3.6709336959536867`*^9, 
   3.670933705927161*^9}, 3.670939379753831*^9, 3.6709394173146763`*^9, 
   3.670939701547813*^9, {3.670939907118675*^9, 3.670939922320163*^9}, 
   3.671540978233749*^9, 3.671541966565967*^9, 3.671542054424143*^9, 
   3.672570344211276*^9, 3.672571593092313*^9, 3.672643896121169*^9, 
   3.6726441925908127`*^9, 3.6726443581467953`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Efficiency-(1- False Positive Fraction)", "Subsubsection",
 CellChangeTimes->{3.670376035760262*^9}],

Cell[CellGroupData[{

Cell[BoxData[{"SVMLinearHardEFPPlot", "\[IndentingNewLine]", 
 RowBox[{"SVMLinearSoftEFPPlot", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", "SVMCircleHardEFPPlot", "\
\[IndentingNewLine]", 
 RowBox[{"SVMCircleSoftEFPPlot", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", "SVMTwoCircleHardEFPPlot", \
"\[IndentingNewLine]", "SVMTwoCircleSoftEFPPlot"}], "Input",
 CellChangeTimes->{{3.6703760437462683`*^9, 3.670376089255645*^9}, {
  3.6725704015064173`*^9, 3.672570430354657*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0, 
      NCache[
       Rational[2, 3], 0.6666666666666666], 0], PointSize[
     0.01388888888888889], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGB4DsQgGgI+2DOggFH+KH+UT0v+n5UfL/kmXbAfLO4hxBeI
sNxyouwd3L3r3B9Wiax7DufzXF9cYMt1fMD9wxLGp7tp7nuo+97bw/gbijIm
vq15b79GJirF+v57+4SnF5Ru/0T45/RC122f/76B83d58jBptz+D85umOnfn
PL8N55sYg8BhOH/BTBBYifB/fdaekskVCP4qUHwnYPBBrvHvRbgL5l6g5WI3
z5HPx+V/mDqw6PJ39hDp9/bKt3/WZe1B+P9N4A651tcv4fw8oeYDpxY+hZsH
cy/M/TBzYHyYPbj46Pop5ROyDxcfFi4w9w80n60RlNDew8MdJk8sH+Y/WvPR
4xudTyh9oPPRzad2+iDkHkL+w2Ueen4gl4+ef8HF7T7i3YfLvcSWFzD7KOUT
6z4YH6afEJ/U8CPVv+j2wcIbF59U9xOyn1T3E5tfyXUvteojXOUTofQ60O7F
Zf5gcy+h/DTY3AsAUO+bjg==
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["Efficiency", TraditionalForm], 
    FormBox["\"1 - False Positive Fraction\"", TraditionalForm]},
  AxesOrigin->{0.9817187500000001, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotLabel->FormBox[
   "\"SVM Linear Hard Efficiency-False Positive Fraction\"", TraditionalForm],
  
  PlotRange->{{0.982, 1.}, {0, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6703760931023693`*^9, 3.6706776454979887`*^9, 3.670931215720014*^9, 
   3.670931274364225*^9, 3.6709313595462027`*^9, 3.670931446415203*^9, {
   3.670931532527911*^9, 3.670931579749152*^9}, 3.670931727161023*^9, 
   3.670931856063491*^9, 3.670932003040517*^9, 3.670932043822236*^9, {
   3.670932081903637*^9, 3.670932092859728*^9}, 3.6709321397399197`*^9, 
   3.670932184615403*^9, 3.670932322005891*^9, {3.670932486764718*^9, 
   3.670932553079803*^9}, 3.670932672620681*^9, 3.6709327652111807`*^9, {
   3.670933198025323*^9, 3.6709332255988417`*^9}, {3.6709336961277237`*^9, 
   3.670933706102248*^9}, 3.6709393798831387`*^9, 3.670939417464731*^9, 
   3.670939702199687*^9, {3.670939907274454*^9, 3.670939922451618*^9}, 
   3.6715409783560457`*^9, 3.6715419667782583`*^9, 3.67154205455116*^9, 
   3.6725704307837877`*^9, 3.672571593249552*^9, 3.672643896338912*^9, 
   3.6726441927254457`*^9, 
   3.672644358185748*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
SxHQIfuqPMmNquRj9ND/AIB6cv8=\
\>"]],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0, 
      NCache[
       Rational[2, 3], 0.6666666666666666], 0], PointSize[
     0.01388888888888889], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJztlV9IU3EUxy17EMrsQUQljRmZwVCcIAXakQzExMwaaRgJooYUmVIzojk0
zMqywmgWpmVhmGEYOlAzyQoyTcsWmSj2R5uV914pHyrDyofvLh35sSwCHxyM
8eH87rmf8+feaVIyN6fNd3Jysv36Tv3+/hmjOZ7jOf5/TPvarOaQQZotPo7Y
6n/s9eMGmcLCdeUBnTLVXj2sr4/+QA0p58ncrFByyenjodHPZk09hoo7ZV+H
ZDoqTYaPV8s0kZ+wI+K5yokxo7YRg0wrzJ57FjfLpM3e327RSlR44IfvN71C
GeNv/IJvv6e8JpOb8bpC1RcqY3vqX1Ff4rvuYVmhuqAXB7c+eWjnbstU/JK9
/uXxyV2HsjP/uB+OfDdFji0rfKAy5pEVNezaVyrTKpvminuVGjdda0pNOqfW
p1N8dhkSZNK/jelaNyCTtNa45nO7RM35t4prNAoNNvZ2P5VGqdzXK849XaEI
17umpR4fyXJfZwrMUci4MfVsm9Vm7wd8kB8+YO4j4pmed8TYTzDqFfnx86J6
RNc7Oo/8M2U+P1G/RP1DPs7/6ot+Yv5gR/vnXLTFv/KImg/M42B+vYj5/MD8
eQHjecH9tl3uGGgt/Hs/Ub2i/eA+3J/vM/dDvD+woDpop9hP5Mvr4/Pl/ugX
3k/FNbmxWXqVP81L80mIVN9XYOTn/eb7Dcb7WMR8ntwH8b6kGClMp8bvNQS3
+Glkujhxwmv3AoVWLvI86bJEjSd5dHxv7JfsPqJ9wPuTM59XVXypsShN9cH9
0R/4gXn8S+uQ1ipJ9nm4pU9ulydVP7Clx6JtiVL7i32A38KSONl59fR9Qb+Q
D/1AvfCBP/qD+jjDF/lE508ZRm5uCFB94M//n+CH+Yv8ENc+MpcVNEn2OPrD
mfeP++E88sEHfhne3iG9LqrfcGhe1hlPdd+5L/qN/Ijj/oiDEUc/wbge59fv
reus6JCm5ce8sQ+luUM5N15Kdj/EsX9gvk88nygOhi/6hfrBPI7rfwLCBmod

      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["Efficiency", TraditionalForm], 
    FormBox["\"1 - False Positive Fraction\"", TraditionalForm]},
  AxesOrigin->{0, 0.9254697286013049},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotLabel->FormBox[
   "\"SVM Linear Soft Efficiency-False Positive Fraction\"", TraditionalForm],
  
  PlotRange->{{0, 0.969289827255}, {0.9290187891441, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6703760931023693`*^9, 3.6706776454979887`*^9, 3.670931215720014*^9, 
   3.670931274364225*^9, 3.6709313595462027`*^9, 3.670931446415203*^9, {
   3.670931532527911*^9, 3.670931579749152*^9}, 3.670931727161023*^9, 
   3.670931856063491*^9, 3.670932003040517*^9, 3.670932043822236*^9, {
   3.670932081903637*^9, 3.670932092859728*^9}, 3.6709321397399197`*^9, 
   3.670932184615403*^9, 3.670932322005891*^9, {3.670932486764718*^9, 
   3.670932553079803*^9}, 3.670932672620681*^9, 3.6709327652111807`*^9, {
   3.670933198025323*^9, 3.6709332255988417`*^9}, {3.6709336961277237`*^9, 
   3.670933706102248*^9}, 3.6709393798831387`*^9, 3.670939417464731*^9, 
   3.670939702199687*^9, {3.670939907274454*^9, 3.670939922451618*^9}, 
   3.6715409783560457`*^9, 3.6715419667782583`*^9, 3.67154205455116*^9, 
   3.6725704307837877`*^9, 3.672571593249552*^9, 3.672643896338912*^9, 
   3.6726441927254457`*^9, 
   3.67264435819832*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
YzzCDm8OZvGn8ycpHystbN2oXfU/V1mQmA==\
\>"]],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0, 
      NCache[
       Rational[2, 3], 0.6666666666666666], 0], PointSize[
     0.01388888888888889], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGB4DsQgGhV8sB/lj/JH+aN8GP+kbPE5y+d77AeLewjx/1hw
KLYIPIK7118LyHW6AednyCT3GB7bAedXWDgBNUwYMP9VhQKdI/Eabn/T4+r3
e78/g/N3JgODf85jOF+BHeSfBzj911WYvXbrtVNw/tknWUD+LjjfL9RLc+mU
TWjhMYNo/yufkwBqeGd/71/Qb++37+2f7L8Wlb32rb1T/cq/S7+9t3efA/RO
8hu4edF+IPe8QnP/Czg/6Q5Q+1aEf9MWBwEd+ASn/w9+3Pv9XvV9OH/j1XvA
ALuOpv4ynA9zr0Ldnx8fH7+H8/cAXTv9Fiaf5TjQ+Pdv4erbVoHS/xu4/yDu
w82/mQWMvnuv4fxZMUDvRyHiFz2+5ykvnRLk9RItPN7Z/6vx/2J78T0G3/kq
0HvFmPIw9+Piw/wD0w+LP5h/Ye5F5xPyLy77cLkPkr4J82H6cfFx+Q89vo/u
AAZ/NiI+0d2z8NUcYAS/x8mHpLf3cPthfHR5Ys1D58PiA1d6JNY8mP+I9Q+p
8YErfaG7H6Ye5h5cfGLdR657ic0/uMIPXZ5QekDnzwYZdxzhHmL5MPfC+DD3
wvjo5lObP+reoeVeWPocKu4FABluHew=
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["Efficiency", TraditionalForm], 
    FormBox["\"1 - False Positive Fraction\"", TraditionalForm]},
  AxesOrigin->{0, 0.9928082191780856},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotLabel->FormBox[
   "\"SVM Circle Hard Efficiency-False Positive Fraction\"", TraditionalForm],
  
  PlotRange->{{0, 0.983870967742}, {0.99315068493151, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6703760931023693`*^9, 3.6706776454979887`*^9, 3.670931215720014*^9, 
   3.670931274364225*^9, 3.6709313595462027`*^9, 3.670931446415203*^9, {
   3.670931532527911*^9, 3.670931579749152*^9}, 3.670931727161023*^9, 
   3.670931856063491*^9, 3.670932003040517*^9, 3.670932043822236*^9, {
   3.670932081903637*^9, 3.670932092859728*^9}, 3.6709321397399197`*^9, 
   3.670932184615403*^9, 3.670932322005891*^9, {3.670932486764718*^9, 
   3.670932553079803*^9}, 3.670932672620681*^9, 3.6709327652111807`*^9, {
   3.670933198025323*^9, 3.6709332255988417`*^9}, {3.6709336961277237`*^9, 
   3.670933706102248*^9}, 3.6709393798831387`*^9, 3.670939417464731*^9, 
   3.670939702199687*^9, {3.670939907274454*^9, 3.670939922451618*^9}, 
   3.6715409783560457`*^9, 3.6715419667782583`*^9, 3.67154205455116*^9, 
   3.6725704307837877`*^9, 3.672571593249552*^9, 3.672643896338912*^9, 
   3.6726441927254457`*^9, 
   3.672644358212401*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
8H8hizl1\
\>"]],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0, 
      NCache[
       Rational[2, 3], 0.6666666666666666], 0], PointSize[
     0.01388888888888889], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJztlV9Ik1EYh0cUDOpi0I0Xu2h4EUYQ3RURp0ZgLCgYiLCEyFUXjoxY0Gpm
BSJEUjeKqEOi2EWJF10ICa0oyBGCEJSUpCv7s9ycJ8Hqg0x6P8bvHHo/Dt92
IwQbjPHsfOe8z+89Z2eB1nPh0xs8Hk+e3vbnv6/vosY1rnGN/1de3eMNdPnm
Bdh7S2Z+zU2KSuevN+9rDDWkewtiW+eqtfxJik5/ly/oXRDBq/f/pH9K8fnp
dCQ2+kXxs2WKk8ypPD5/LikzWcU7PUFqwB3F7Zttvmbkan3ftdn9LIohWzcr
xWDL6Nh0pCjm1sK/j5SkOH40Rl8UlK//AMULa87smKiL9iywPHnF6Ye94VCD
zlteb17xxiw9LmeVv3We2hV4rXhLUz4Vn3qpeHufPb6ofMejU3vzqaJ4TKv1
z5gZeTgjL3wuN/XsnqgrMl+dt3weNQ/XUztCOv8Hi+JkdH7U475g3n/wWsex
lf2vNCOPiZHHjVGf+4F5fxtT1I6ok+F35h5tb9qd4Wti/F6qZZMPfLsfxCmg
k1HfxFivUsb88nkvKX7xiI5XrKR8MQ4fjHM/vv5s8q688cScB8zXN9W7RKdh
1xjuIyejHuaDeX/B3M80H1zf8aPwZkTX67OGv9Ejivk4Z5M/1ufnwc2Pr+fm
w8er9Qfz/eG+bv3Cfpq4Uj/kx3zuV6mvqd7NxOGvgQEzu+XB89g/MO4rE/Pf
E/x5/YuJoY9nu51c/n/SDB8w8oNxH4Fx/4LhF7H6Z060ORnr8f25brf7tvZp
tw7ltl5x+iCvyQd8KrH0fjyu6/H6nCcvHHy76aTm5yuk1yzFXweVn6o=
      "]]}, {}}, {}},
  
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["Efficiency", TraditionalForm], 
    FormBox["\"1 - False Positive Fraction\"", TraditionalForm]},
  AxesOrigin->{0, 0.978424657534225},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotLabel->FormBox[
   "\"SVM Circle Soft Efficiency-False Positive Fraction\"", TraditionalForm],
  
  PlotRange->{{0, 0.935483870968}, {0.9794520547945, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6703760931023693`*^9, 3.6706776454979887`*^9, 3.670931215720014*^9, 
   3.670931274364225*^9, 3.6709313595462027`*^9, 3.670931446415203*^9, {
   3.670931532527911*^9, 3.670931579749152*^9}, 3.670931727161023*^9, 
   3.670931856063491*^9, 3.670932003040517*^9, 3.670932043822236*^9, {
   3.670932081903637*^9, 3.670932092859728*^9}, 3.6709321397399197`*^9, 
   3.670932184615403*^9, 3.670932322005891*^9, {3.670932486764718*^9, 
   3.670932553079803*^9}, 3.670932672620681*^9, 3.6709327652111807`*^9, {
   3.670933198025323*^9, 3.6709332255988417`*^9}, {3.6709336961277237`*^9, 
   3.670933706102248*^9}, 3.6709393798831387`*^9, 3.670939417464731*^9, 
   3.670939702199687*^9, {3.670939907274454*^9, 3.670939922451618*^9}, 
   3.6715409783560457`*^9, 3.6715419667782583`*^9, 3.67154205455116*^9, 
   3.6725704307837877`*^9, 3.672571593249552*^9, 3.672643896338912*^9, 
   3.6726441927254457`*^9, 
   3.672644358224965*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
BL6y+YrG5Mn6kb6ryizH3GQ1jv/u2FBfi40d/W95Z7ozK4ho3KhIh+yYq4uC
51Uj6IWzBj9+nguu16Y4NB70nVi6BO8H68fbKyl0CPd8/h5D+4MK2u+giIxQ
nUA7reCOX75bwF6Yt74jAX4xE3cnPPdXI3Ve7YvfPE/qfBucW8p0V3vXuzPd
F73JoNpTvrkzJV2p146r2ElN5uXC4mXZ/c9ZzMblFnLT1X52vHduukrvH6hM
k5X5KSSQDj9/WGkHnixhdLG++r5Z6SpjWF67puza5XoVeDE+/FHuw5+de44u
fh7q7fFF8O3dS9R9S5XZYfU1VWa5lsYM2PV2kOKbihRVqe+r6pnlB/OLhjnY
0W6HCdXDVSXo9XCW384v2nZxsKPdHsPdJewuao4uhGE4wLSiSO1ckp0nZsbv
jd+ubx5aMCoSmBiYutL1fvPsLqrCaILgHF3cBhTnpcNdyfT+tYWX5oAbJUC1
s2bXEaY9KdSxPss+7NPapYZSl7Imee+uZcuqVYrfrcfrr/i9WnCu87MrW89o
hHLdK1z3cqFueWUYn4m/fH/d4k3lENQFdVXy3ht6AVq30y9ld37nbKSrlNP1
mmdke7U9tm2v3klvy8xRRb3DinpaMGybf2TJmy6rWj370P/1OWWcf1rFkt/3
VFfm4L+1ElTYhJWeb1e73bfEvMQ0cmKWj0XR3+4T/fwXjDo6iGxr17F2+eeY
yyxhs3y74vTKacmru6Z3a7ofqu2nWFZl5++rKPsbmzo/C4Xjb/x3xnH9NR3U
bkNIzncW8UnSHWtMMi1IliYfFJQcl+1dVwj6Y9zm2plyXiX3D6oZqdIfj+14
tssJu7bjmWdT89CmpnHu687ov+T3oeXNDxRPLDxn1+b/AiGPSkqVlH+Vgn+T
grzeIGxvg6C+HqxpR88e2/Fsl+d8bcezLSqm+iBjgYpV62oUjTveQkY+Bb/n
MhVrluA0FTm/8VPJiRJIH0E47EBnMGKVNdAHsR+AuuP7ejukKhXyn7V4+L9S
8WkCQbI0526HQSK93Khan1Q7EFt0phvS1cwcTq2oe1Za0VYUtEez78cKgUtV
6478t5z1TEqzd841Snvsu5fDt0v58znuDLqdz6/X1KU0t3Idju0yleYuuxOU
Zbp3j3rkdmjWsveIXy/Uk7aaLe1U+qWKsv8S0PVQqbp3IGHFI2WJVaYFeT3v
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
eWMgb+HsehzXUaiVhSVRJ3vX5hQARhiqizfwRLJSpbRRWdRbJcLZqY7VDDxv
BC88q4dZ89ZF9DaUWsY5XoewkLu6D2oxPs4x3ogmoiTegaLGZi73DG/Kkm7p
9DKf5lfCvmMv6b4t1HZId12/ZFPWdOkhRpuem+O0jlA7BXS0KsD3Y/y8paGM
yDOudGVtuAJyJzmMUtOlRR6BhCBc8bLwOvJh2G0xrz+ntM6c3BD2O1OIFnPw
l3EVKc0VtGl5eh7Op6dmqJVNHkV+3rpbIhtfro3kIGezrQJyTT6+O5azFhvw
5wsMJLN6ib+2xbj1lJJ9t6jojDwtZwMYzJaFPswYOfpbzFnPBEXTfh3i1RKr
g/lLNpGK9F2VXdZbzNuwVMv5ze6sIPDkvydym/tsHfPV0p3ZRiUfGehc2iSn
QzcCC33uhRRH9JEW6ZZdl6uemWZ5rkhIfZSTgTaTN5tH2t9y81hXA7kTRyXj
GP9qKkqyvcVXxm2JeLNaxHNv8969RHxfhK4KQqaldtUqe2roTc56t4qDnLuh
BAFfPZzQUqVatT4uxhUFlj3ktNDYc60w58S4AUaY6XLnsZf7uQ57DUk4lCVd
5K12acO08XzCkDQKejwBLPXEpKV5OLLmwRrpATMSVIhymcx6LztZzTXlXuXG
Y/LvjlUsY2REM0dF4r/Mjoo+EqIdCWmypSyTh2oV+HKBD8pCW8Vum9pJ1kL7
bjU/6TqAUb9Lj9X8PIjmWC3qqtMTTU+WR8RRyYVZ38Eesq7gG05hQ6Rxx6gp
KyTWCIHKN/xMyQMfFrwDUZK5tqOIfTQN4EeGGDIjTn+BxECPE4VsodrEdr5h
C8UjQRHp3JUkgSbgihaJeJFJFi2cYag4qpwUPTSOfR5hv8Ps69dbE5gh+VLu
bdtwW+il4kD3Forj1Ime/o5+5X6fJkxWORzDKLHuLy6nDl9nfhkmXgYwQ3eW
DWqCY0y62yZZ9d8dTiFC3R2v+YSGYsomjIKNpKUSCSCQDepJeSTXsZdn6OF8
hmpGK4hsDeV19mhG8stHjTj1a5RKFEvCaxOOFcUsq1wm0n2GSGX+rSea3Pnt
jpe5tzsdwRQJZDFaLug7+LSeD4rW+cQgzQGQ14fJzMeoBcxJqc1cAhsdwisl
1FGL5Ewbtwc9+pULJRUUxjmoDyYz46DVy/pDqrot6whNpw/DwQi++92JQEZR
8tKXCBPjjR9Zik+mx4Ex+qbLQI7QIShH+yB4XWUUqHWEHuGIWzsDH7XDQvZR
doYQPP8CLEZdjojm4Tp37t+jBu/AeDqF6WQCE36NYRas2RmVZhSKfxu+/RVR
w6N5AOuXnjFIp8saJIMzkbRCZhcZJYT5sKvD59p+n+W+9JK5ioW8uZL4NyoG
ayOl5jCbzfCFuM1DZlj5HSEKSgNYrUIYUlu1ac1IfCyyQ4HuZuUzk8rPyGz4
pBqlh4LVStGG5EinLt5mMjmcbUIXmH4LaTHsMO6B2stUNV21Y1rMtfZHvKA+
RFySH20HLXpTGdu23kItaxL95owrJ+kk8STgvn0nqcq8HHy1nnS8+4HQWiBa
c2nn/etzBa6z2aGWDPXsUBT8wzwtYNxY9EKQs3rDOasZznJSMkoz+zVjQmJm
SK2bW8xsYJiJ1iFbJkGqNSTvk5BfOVBlD0Iw8sAbLSBFpdJ327RvA83CBFyn
Dd22YEhr00ukiKs2AzntPoRxKYeF74ipWdhCDMqLYtvYHhewJTdu2u/kS6CD
GfcRjdomT/ypv/hsfpaXfwzCygmrKCXf8f1aXh419T/+5/AZ/Zl0wLPfNijT
XxWKJL/t7sRG0ewaMjhmaDXdDozGfTVWC0lqFvYq+qUl1RZ0xpGBPQ6G0HJZ
5vKfqQvNMrTBR/zxnnWeuU2/A8Pj5D470mzaN3Wcdg+CWEETh9Bv69+ecWHk
r40zZkffen60DRZ31Z6f15j5qR3PsNTLZrmZtxjEVjnSwZvpUPgyBqHYD84r
/8qL+okFXj6X+TiqJc21Cq59pZZURVROeSo3ONU2a20KU8/1dXLdYF4/80VR
P5U9IbQLDo3HBl2tdTQXBYnGIINV0e26ZPQe+z4jJebKedaRk7YDSsz1Bjja
ZeEoqxmu0LFLNujDSNU2H0dPIJjP0ZXKzDqnvUPrVE3FbojhREGqTwo3PaRJ
msIrYV/715Y/LnrMX5JbFUURxs9RFEK0XIsLpiKvKE4h+4lYhf6CkgU3Naha
KGj5eb5gz03tzz00gVve/SFEGH0uN4lSqrkCUgKiVl8v56BFsj0oijAi4TSS
S86pLKRfsYnGP6yotx3YxLyxJzg3FFBpTikbrSdtxhF3bV5ajKSNJ7Qwp/13
Mi2HBlW5oZYWIUO10oiaRucfsI34VJJB0QJFu2F6ohfMKPmSq5oR9FxPbRxb
NsNUQXpoINW8QhCSjGsd7L8cwUikKU8Xl5dHrxqLRzl6fbLGHX0LJl2tyj4L
n1QgGvXJWzzkGrCcU8q/RXVoEj8A+Xo5pVtUuVmnt+HKV487MBGd0jCskpOL
SbIYj+TKCYuMN/aE5z49qYkhk42XYpXyDgta+dc7LLI0NTsJHq6oZ++6IPEF
ALOHRu9RzpTtkL3ImS+jcpHaHNK4538Aigec6A==\
\>"]],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0, 
      NCache[
       Rational[2, 3], 0.6666666666666666], 0], PointSize[
     0.01388888888888889], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGB4DsQgGhV8sB/lj/JH+aN8GP9eyctZ616esh8s7iHEtzOL
nOIa+QTu3uCvd0EAzj/FnCiklngJzp/suFHYeuPmAfPf0m1A64Vf25utW8P7
8dB7++wJb2/Oe/vS/uHxOdcvfX1vv7f19Paa08/h7rsW0mzi0Yzwn6zwZAPO
yQ/gfJt2R6kljrdw+pdfGBQ+R+D85c8eypx7uAbOr77aKP+jsR9neDSeAql/
Yy9e5vn08I73GPwNl3vvnOh9Y7/hGb+Z3Nn39u77+P8c4H9jf16uOM77+nu4
f2H+Y1ovXrVQ/BWcf6Ljo0T/xxdw+0MLfK+X+CL8X+GkvTVI+ymcbwwGj3GG
x6v78X+vxr+1n2f7bM+0de/td1/bbHt7M/H8oNudc290voXHDy4+zH8w+2D+
h4UPjL9hp+Wcw5Zv7D3Cr7VVPHxvX3Z8NxC8tk/vt1y/9DXQ/g/sdQ/Y39nP
VP72aUv1e3vlS6Dk+9b+0ZtJp9oLMeVh/OPn5HNsZuHm17E2T8lcQjofZj9c
Hho+6OqvxkZKP2p9b9/zPHrf02hMfs+UPc78EzDlY++t//dqPSYfph7Gh/nn
6x9g9rhJPB9dP8z+ZZv0F0WlA9U/ao170YqwH6Yf3T2w8I77wWz/gfk9xXxc
9mHwoe6D6Ye5B5Ye0MMP3Xx0/rHPuvc/6SLcA+MTUg+LD0Lq0cMXnQ9TDzNv
oPjo6QE9vaH7Dz3+YOmfUPwRig9c7sOlHpf7COUHQv5Bj29S3Y8rveNyDyz8
cPmfkHmkuo9c96LHN678gJ6fcIUvrd2LHr6Dzb0AgdlKhA==
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["Efficiency", TraditionalForm], 
    FormBox["\"1 - False Positive Fraction\"", TraditionalForm]},
  AxesOrigin->{0, 0.980434782608665},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotLabel->FormBox[
   "\"SVM Two Circle Hard Efficiency-False Positive Fraction\"", 
    TraditionalForm],
  PlotRange->{{0, 0.974358974359}, {0.9813664596273, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6703760931023693`*^9, 3.6706776454979887`*^9, 3.670931215720014*^9, 
   3.670931274364225*^9, 3.6709313595462027`*^9, 3.670931446415203*^9, {
   3.670931532527911*^9, 3.670931579749152*^9}, 3.670931727161023*^9, 
   3.670931856063491*^9, 3.670932003040517*^9, 3.670932043822236*^9, {
   3.670932081903637*^9, 3.670932092859728*^9}, 3.6709321397399197`*^9, 
   3.670932184615403*^9, 3.670932322005891*^9, {3.670932486764718*^9, 
   3.670932553079803*^9}, 3.670932672620681*^9, 3.6709327652111807`*^9, {
   3.670933198025323*^9, 3.6709332255988417`*^9}, {3.6709336961277237`*^9, 
   3.670933706102248*^9}, 3.6709393798831387`*^9, 3.670939417464731*^9, 
   3.670939702199687*^9, {3.670939907274454*^9, 3.670939922451618*^9}, 
   3.6715409783560457`*^9, 3.6715419667782583`*^9, 3.67154205455116*^9, 
   3.6725704307837877`*^9, 3.672571593249552*^9, 3.672643896338912*^9, 
   3.6726441927254457`*^9, 3.6726443582362003`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0, 
      NCache[
       Rational[2, 3], 0.6666666666666666], 0], PointSize[
     0.01388888888888889], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJztkmtIk3EUxldREI7ACpVIQZ0hmXgJE1M7YZGiWWpqhftgmmLYvKSmXViJ
ml2llUJRSCZIkJZpDKXU1K7TzBuJqJiKTt3c62Vihl3eEed96YyX9aUPgYMx
fpyd/3me5xzbmOSwuJUikUjNfg2/f36mYZmXeZmX+X/lyoAQrxd5g2AvHiuQ
axi4IV44UNXdAVi3H59+7KYohr9971/zJ6vXOypq1AAHex4ozzLgICqqjvo6
CuWeZjm1pQyoZafNGjaNwBEbiHvZyoC5g8Lm0f0Bzp/UctbdanUr5+fQwPy7
lujnHOsV+t2j2jKOr2ca/BcIsnmnoT+XcDrHXbdOsYImQSWtc/GIZyCnr+np
272T4BceOJ6RwsB2yYaJbNUE56e36fa2jNxx8A48fnQhl4FCUXhb0pAaKn3k
qqy7DEyqJUHWtmMgcbnj/a2CASdX5Yk3dSNwbquDfmcNA5b9FnKPLcOcf2+r
lIRdPYOwz6rV+vtnBiwUhny6YP2aNP+GeQYC183V/sj6wOmd7ctW9TproSO+
tL46lIFG2dDhWLspjsvbShalF/h6gjjmXmS/huOHks5VRdUa+HjMNVMfxUCY
zM43xEvD+Q9oDvO/LOP918+x69jMc5JPTuirEuM8kDEPZKrv976noDvRgnXI
QIvls2AnHc89Yls2MJ7zI1IZSRDf71nc6PilnfdX02zOGuQZ80F/zvoZ1oCW
84f+kQd8/E52XeWZ6lH8ZM/NQsdxpLr9/BMQZtpP/WIeyOgHOVXpxjbw+nGf
1A/ykNJw7zqQpl8Jdvfl9SCjfmTUg7zfd0X+WBrPmDfyUh677kWtEVP9mD/q
F+Ky4ot75mp1RvsWmk/10TzpfdB7o0z1mtJP86T+UZ8Q033TflqnevH/VK/Q
fjAPU/NpPkLzkfHeTPkRuhdk7KeM8+g+hd4Xyofqo3nQ+0GOPrNUOOMurA/r
QvpM6fnb+0bGecix8uT+SkdjPTgPGe+X9gvtk/qh90vzwXmaS8P2KTbGjPOR
8V5RP9aRaR31oD6qH/XQe8F+1KO7FpHospF/f/bm+yrdWn4+1k3poXXKvwBf
P/rm
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["Efficiency", TraditionalForm], 
    FormBox["\"1 - False Positive Fraction\"", TraditionalForm]},
  AxesOrigin->{0, 0.968460575719615},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotLabel->FormBox[
   "\"SVM Two Circle Soft Efficiency-False Positive Fraction\"", 
    TraditionalForm],
  PlotRange->{{0, 0.960199004975}, {0.9699624530663, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6703760931023693`*^9, 3.6706776454979887`*^9, 3.670931215720014*^9, 
   3.670931274364225*^9, 3.6709313595462027`*^9, 3.670931446415203*^9, {
   3.670931532527911*^9, 3.670931579749152*^9}, 3.670931727161023*^9, 
   3.670931856063491*^9, 3.670932003040517*^9, 3.670932043822236*^9, {
   3.670932081903637*^9, 3.670932092859728*^9}, 3.6709321397399197`*^9, 
   3.670932184615403*^9, 3.670932322005891*^9, {3.670932486764718*^9, 
   3.670932553079803*^9}, 3.670932672620681*^9, 3.6709327652111807`*^9, {
   3.670933198025323*^9, 3.6709332255988417`*^9}, {3.6709336961277237`*^9, 
   3.670933706102248*^9}, 3.6709393798831387`*^9, 3.670939417464731*^9, 
   3.670939702199687*^9, {3.670939907274454*^9, 3.670939922451618*^9}, 
   3.6715409783560457`*^9, 3.6715419667782583`*^9, 3.67154205455116*^9, 
   3.6725704307837877`*^9, 3.672571593249552*^9, 3.672643896338912*^9, 
   3.6726441927254457`*^9, 3.672644358246169*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Efficiency-(1 - False Negative Fraction)", "Subsubsection",
 CellChangeTimes->{
  3.67037690623803*^9, {3.6725705258763027`*^9, 3.672570526124675*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{"SVMLinearHardEFNPlot", "\[IndentingNewLine]", 
 RowBox[{"SVMLinearSoftEFNPlot", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", "SVMCircleHardEFNPlot", "\
\[IndentingNewLine]", 
 RowBox[{"SVMCircleSoftEFNPlot", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", "SVMTwoCircleHardEFNPlot", \
"\[IndentingNewLine]", "SVMTwoCircleSoftEFNPlot"}], "Input",
 CellChangeTimes->{{3.670376918659627*^9, 3.670376934346908*^9}, {
  3.672570457253849*^9, 3.6725705004142*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0, 
      NCache[
       Rational[2, 3], 0.6666666666666666], 0], PointSize[
     0.01388888888888889], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGB4DsQgGgI+2I/So/QoPUoPdZoljE9309z3OOk1MlEp1vcR
9EC7F+QK/973cJqQ+ymlmbTbxW6eQ9AQYQRNaviiu3+o0RuKMia+rRk8NFvj
VOfuHARNqv6BDs+RRtM6vw5291HqXnq7b7jRgz18SS2fBpt7CYX3QLuXkHsG
m3sBj/nJDw==
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["Efficiency", TraditionalForm], 
    FormBox["\"1 - False Negative Fraction\"", TraditionalForm]},
  AxesOrigin->{0.9817187500000001, 0.9811},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotLabel->FormBox[
   "\"SVM Linear Hard Efficiency-1 - False Negative Fraction\"", 
    TraditionalForm],
  PlotRange->{{0.982, 1.}, {0.982, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.670376935527528*^9, 3.6706776455588827`*^9, 3.670931215787346*^9, 
   3.670931274430786*^9, 3.67093135961304*^9, 3.670931446481793*^9, {
   3.6709315325956783`*^9, 3.670931579816929*^9}, 3.670931727228547*^9, 
   3.670931856129586*^9, 3.6709320031239443`*^9, 3.670932043889971*^9, {
   3.670932081983181*^9, 3.6709320929251823`*^9}, 3.670932139813653*^9, 
   3.6709321846813927`*^9, 3.670932322072126*^9, {3.670932486831771*^9, 
   3.670932553147875*^9}, 3.6709326727048683`*^9, 3.670932765278739*^9, {
   3.670933198092572*^9, 3.670933225665801*^9}, {3.670933696210466*^9, 
   3.670933706186141*^9}, 3.67093937994991*^9, 3.670939417549032*^9, 
   3.670939702283853*^9, {3.670939907357087*^9, 3.670939922519971*^9}, 
   3.671540978422839*^9, 3.6715419668489447`*^9, 3.671542054618647*^9, 
   3.6725705008833933`*^9, 3.6725715933276443`*^9, 3.672643896438375*^9, 
   3.672644192794787*^9, 
   3.672644358276642*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
S4oEqWFXO51vK1Wd12QYN6l6oM5D/wegFuue\
\>"]],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0, 
      NCache[
       Rational[2, 3], 0.6666666666666666], 0], PointSize[
     0.01388888888888889], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGB4DsQgehSMglFAP2BfcujKdOP79g5QeqDdQwhcUet8eHbr
O/uDEhB63ZLmkC2er+B0/OQJXWael+0ToPRAu7ds/r45P5+8s29YBqF/N4XH
OVx9Z/+iBEJHeL95/qLsnX12JITWKSo9uU3nrf2KPAid+eWRkuGel3B65axF
vpe2PIDTG/WvV4VdOGG/AUqf3wYSX2D/gRdCKwfGn6spyrdnUIuB0BS6N8D5
g3z70Xf2V90gNHp8aD5XXCyyDEHXL9+VEj3tnb3YTght9F42uyz8nf2BnxD6
rV2t5eeTb+0ZfCH0/Z03zl98+8Y+cD2EduA9WC8j9hpO1/qlTDl05TmcJtU9
A02T6j509YT0E1JPKh89/ij1L7X56PFPKP0xdwerLWp7Z1/XDqEJ8dH1E+Kj
24/uPnQ+qe4h1X2E4oNQ+KHT6Pbf0WtdqZ/+zv6yOoQm1b3o8oTSN3r5RKi8
ItU96OUxOh89vNDtJyQ/93ePZA7Le3tttl4wjS5PKHzQy090PqH0hx4+hPiE
yoNtl7bp7HV/Z69xAkKjpwfuyf7vmC3e2YvMgtDo8oT8S2r6JJT++8terPfS
eGdfmwGh0d2PHp7o8Y/uPkLyhNIbofyF7p5MKSnjGxzv7MN4IPRTs8bCiRJA
cSsIje4e9PAmVZ6QekLxPaPuSfmam2/thashNLo8Oh89PgjJE4o/QnwAZaIl
7w==
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["Efficiency", TraditionalForm], 
    FormBox["\"1 - False Negative Fraction\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotLabel->FormBox[
   "\"SVM Linear Soft Efficiency-1 - False Negative Fraction\"", 
    TraditionalForm],
  PlotRange->{{0, 0.969289827255}, {0, 0.9692898272553}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.670376935527528*^9, 3.6706776455588827`*^9, 3.670931215787346*^9, 
   3.670931274430786*^9, 3.67093135961304*^9, 3.670931446481793*^9, {
   3.6709315325956783`*^9, 3.670931579816929*^9}, 3.670931727228547*^9, 
   3.670931856129586*^9, 3.6709320031239443`*^9, 3.670932043889971*^9, {
   3.670932081983181*^9, 3.6709320929251823`*^9}, 3.670932139813653*^9, 
   3.6709321846813927`*^9, 3.670932322072126*^9, {3.670932486831771*^9, 
   3.670932553147875*^9}, 3.6709326727048683`*^9, 3.670932765278739*^9, {
   3.670933198092572*^9, 3.670933225665801*^9}, {3.670933696210466*^9, 
   3.670933706186141*^9}, 3.67093937994991*^9, 3.670939417549032*^9, 
   3.670939702283853*^9, {3.670939907357087*^9, 3.670939922519971*^9}, 
   3.671540978422839*^9, 3.6715419668489447`*^9, 3.671542054618647*^9, 
   3.6725705008833933`*^9, 3.6725715933276443`*^9, 3.672643896438375*^9, 
   3.672644192794787*^9, 
   3.672644358288121*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
AsKNBCF5MGSHhqzfSQtlDx5bMQrlxecaLlNcpBRGkk6rzzjHRbTGAS9eNMXY
3eZsWuuMu3KHCjZZSghFzv5I4lvjxa99GFg6c9mHJcbRbdJQh/uDuXP/L37/
FdVWX/8b+7s/zJ/tgvrUNm9057Zd89QLn+OFUfJ9Z/z3XVyevyG4dNgQ6Cxf
l3OXlAapfOv9oEWdkFd+xACgCxn6PqxWK1gtxjhlH+ZBwk7XMX1yRN0blYW+
PPnufW8G88kQvzswnofnUllH9LzWWsl8AL0BpU5i6COHjEY7NZDfuAuwRbFX
qTxkVZ/UI5LiSMb2fCzfq8HF0p1yoMzpbrToOcAxqIeUtjZz7Lxb58Pyh2f3
2aqtroL+dn/39ytGtim6vzk+rE2tnmPYLc52jKZzMfZPW4D81f7uf3IA1b88
PqyNMecYdouz3SJNOyx6UdiDC6qtln0/ul9l/189ZiP4yNk1jpsNi/i443Zu
I0FOJ2nDacTD5TxpvNfN3Z3juJFQR2VDnanZLEBnkV+gkagOyXKYqGMVbzJm
JeyMg+dlJyqYpOstmEUpxEEAYRTDepO/QFOhT8uiCU7mSBYsmtrs6KPcfC/8
fDoIr+oj+nSw+P/IdLzofn9RUD1TbXUd+5793f+OP9s1uXV8WJvdqA/jUc9z
jluk5FYY16bXq4NmOVmljdaW2KjDOa9ez6I5nyhqvU6Hyt87vS4nnUNfTiAl
Cbxf6X66ha2/W5/y3GreCzbtM7Ii/scDq/47u/MdCAz0YbVli6qbhFkr95b8
ealNKOvUvmt38gNBBKlvKlciU89FEaYQom3y23fI/dZ3v7VD/ju3MDhkQM4E
IXfBBnw17O3FQBb2tE4q/e3S1NiVmnTX36qL7xEbI1VuIrr2kLJkrbP/84Hl
VvS27cpVizR2W9p+cz+Ifz0w828cH9amwurDeNTznOPzt0YJf/4v2oa4BZ2H
93e/cYDod2xzSDpf2GHnR5/+KA345WPTXGxMc/GvLzam+6XzEUWTkbSftMj8
L+4H8VX+PN0m9IQaTuAzz3xGgdf9f34/qKdrPNObkN73//39Bqvrn7gOH3nq
I6QaDoH6mmqrcRRxFBAnT5zAh//9w9zj7cdBKAx48EUFQg3nHm/bD+LrNRCf
+uan4PrHrxsQl564BMGGi0o6P70tEGlt4Ae//MHG3J+9+VkzwVv3z/1N1Tb7
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
vVTGQMrVy/+QGbhJVft0bvsfPSxXRg==\
\>"]],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0, 
      NCache[
       Rational[2, 3], 0.6666666666666666], 0], PointSize[
     0.01388888888888889], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGB4DsQgehSMglEwCnCBk7LF5yyf77E/AaUH2j2EwB8LDsUW
gUf2MNpfC0g53bD3g9IZMsk9hsd22F9YnQSmKyycgAon2D847gim6e3eqlCg
MyRe28PopsfV7/d+fwandyYDg33OYzitwA7yxwM4je6/rsLstVuvnbLvgNJn
n2QB6V32F6C0X6iX5tIpm+wfMEBoSHjMsH8ADo8ZBP2vfE4CqOGdvdRxCP1k
/7Wo7LVv7cO2Qmj3OUBvJL+B09F+IHe8so+C0hB3v4DTSXeA2rY+g9Npi4OA
DnsCp9H9f/Dj3u/3qu/bH4DSG6/eAwbUdftNUBqi7rL9LiiN7l5CfJbjQGPf
v7Uv2wOh21aB0v0b++I5EBriLtz0zSxgtN17DadnxQC9HYWg0eN7nvLSKUFe
L+E0JBze2UdehdDofOerQG8Vv7O3OgehCaknpB/dv+h8Qv4l1X5Iun5n//c+
hKaUj24+enwe3QFKmG/tzddBaHT1C1+BIva9vexzCI3Oh6S39/Y27yA0IT4h
89D56PGB7n5SzSPVP5SGN7r7STWP1PCmtnspDT96u5dU+0fdO7zdS2n6pLd7
AWZjnH0=
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["Efficiency", TraditionalForm], 
    FormBox["\"1 - False Negative Fraction\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotLabel->FormBox[
   "\"SVM Circle Hard Efficiency-1 - False Negative Fraction\"", 
    TraditionalForm],
  PlotRange->{{0, 0.983870967742}, {0, 0.9838709677419}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.670376935527528*^9, 3.6706776455588827`*^9, 3.670931215787346*^9, 
   3.670931274430786*^9, 3.67093135961304*^9, 3.670931446481793*^9, {
   3.6709315325956783`*^9, 3.670931579816929*^9}, 3.670931727228547*^9, 
   3.670931856129586*^9, 3.6709320031239443`*^9, 3.670932043889971*^9, {
   3.670932081983181*^9, 3.6709320929251823`*^9}, 3.670932139813653*^9, 
   3.6709321846813927`*^9, 3.670932322072126*^9, {3.670932486831771*^9, 
   3.670932553147875*^9}, 3.6709326727048683`*^9, 3.670932765278739*^9, {
   3.670933198092572*^9, 3.670933225665801*^9}, {3.670933696210466*^9, 
   3.670933706186141*^9}, 3.67093937994991*^9, 3.670939417549032*^9, 
   3.670939702283853*^9, {3.670939907357087*^9, 3.670939922519971*^9}, 
   3.671540978422839*^9, 3.6715419668489447`*^9, 3.671542054618647*^9, 
   3.6725705008833933`*^9, 3.6725715933276443`*^9, 3.672643896438375*^9, 
   3.672644192794787*^9, 
   3.6726443582980967`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
qiNqXPU/wZG8vg==\
\>"]],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0, 
      NCache[
       Rational[2, 3], 0.6666666666666666], 0], PointSize[
     0.01388888888888889], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGB4DsQgehSMglEwCoYL+GPBodgi8MgeRnP0vd/7/d5pOD3Q
7kMH1u5emkunvLKH0XUyLQJOHC/h9JP916Ky1z6F0wc/Ar1Rfd/+AJQWkLlf
/X7vcTitw+AE9PgC+wfHHcF0HjeI32DPcMIRTKPzSXXvzSxQOL62h9GzYtZu
vRaFoKP9soGMV/ZRUFrGAeitIAS9V+uYRHLPSzgN8c9zOL1045QgL82n9sug
NMS8R1DzHtmzHAcqe38XTv8oBAaT4hU4zRP6fE7xuZNwWn0qSPwNnN6ZfM7y
+ZzXZNPo/q0K7TE8JoGg0f0PSYcIep4yMBi8XsLpBz+A3tj7HE4Tsh89/GlN
E3IPevi6zwEGQzJuOm0xMFqXDhxNyD1tq4qBHntjXzwHQtOaD0nvb+0nLYbQ
R3cAk1X2W3vzdRCakDy17SdkH6QcemsfthVCo/PR9ROKD1LdQ8h+UvmE3EvI
fdR2D6XuJeQ+9PgkNX4JmUco/tDdS2l4EPIPevyhl1foNKXxDamX3tqX7YHQ
6O4hVB6hl7+E3EsoPAm5B92/tC6/AcYVxfw=
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["Efficiency", TraditionalForm], 
    FormBox["\"1 - False Negative Fraction\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotLabel->FormBox[
   "\"SVM Circle Soft Efficiency-1 - False Negative Fraction\"", 
    TraditionalForm],
  PlotRange->{{0, 0.935483870968}, {0, 0.9354838709677}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.670376935527528*^9, 3.6706776455588827`*^9, 3.670931215787346*^9, 
   3.670931274430786*^9, 3.67093135961304*^9, 3.670931446481793*^9, {
   3.6709315325956783`*^9, 3.670931579816929*^9}, 3.670931727228547*^9, 
   3.670931856129586*^9, 3.6709320031239443`*^9, 3.670932043889971*^9, {
   3.670932081983181*^9, 3.6709320929251823`*^9}, 3.670932139813653*^9, 
   3.6709321846813927`*^9, 3.670932322072126*^9, {3.670932486831771*^9, 
   3.670932553147875*^9}, 3.6709326727048683`*^9, 3.670932765278739*^9, {
   3.670933198092572*^9, 3.670933225665801*^9}, {3.670933696210466*^9, 
   3.670933706186141*^9}, 3.67093937994991*^9, 3.670939417549032*^9, 
   3.670939702283853*^9, {3.670939907357087*^9, 3.670939922519971*^9}, 
   3.671540978422839*^9, 3.6715419668489447`*^9, 3.671542054618647*^9, 
   3.6725705008833933`*^9, 3.6725715933276443`*^9, 3.672643896438375*^9, 
   3.672644192794787*^9, 3.672644358309185*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0, 
      NCache[
       Rational[2, 3], 0.6666666666666666], 0], PointSize[
     0.01388888888888889], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGB4DsQgehSMglEwCnCBeyUvZ617ecr+DpQeaPcQAnZmkVNc
I5/Yw+jgr3dBwD4ISp9iThRSS7wEpyc7bhS23rjZvkAVQtPbvUu3Aa0Vfm0P
o7MnvL057+1LOL239fT2mtPP7fdB6WshzSYezU/gtKzwZAPOyQ/gtE27o9QS
x1twGt2//MKgcDliLwCllz97KHPu4Rr7A7YQuvpqo/yPxn57h6hWMI3u3sZT
IHVv7NnOQWh0/obLvXdO9CJo9338fw7wI2h0/zKtF69aKP4KTp/o+CjR//EF
nA4t8L1e4vvcPgRKVzhpbw3SfgqnjcHgMZxGD49X9+P/Xo1/ax9zFULvvrbZ
9vbmt/YOtyA0IX7Q7c65Nzrf2p+7DqEJ8dHtwwifnZZzDlsi6LLju4HgNZze
/YG97gH7O3uV+xBa+RIo2b6133QHQqPL05qPYT96eKGp73keve9p9Dt7jicQ
mhA/9t76f6/Wv7MveAOhCfG//gFmi5vv7B+9g9CE+Oj60e3/+qg17kXrO/t/
LyE0If1xP5jtPzC/tw/5CKEp5RP0D5r7CIUPIfuOfda9/0kXN02pekLxTe3w
o5RPKD1SGn/Udi8h91HqHkLxS+30Tal5tM6PpOYHaocfpeE72NwLANhaJDk=

      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["Efficiency", TraditionalForm], 
    FormBox["\"1 - False Negative Fraction\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotLabel->FormBox[
   "\"SVM Two Circle Hard Efficiency-1 - False Negative Fraction\"", 
    TraditionalForm],
  PlotRange->{{0, 0.974358974359}, {0, 0.974358974359}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.670376935527528*^9, 3.6706776455588827`*^9, 3.670931215787346*^9, 
   3.670931274430786*^9, 3.67093135961304*^9, 3.670931446481793*^9, {
   3.6709315325956783`*^9, 3.670931579816929*^9}, 3.670931727228547*^9, 
   3.670931856129586*^9, 3.6709320031239443`*^9, 3.670932043889971*^9, {
   3.670932081983181*^9, 3.6709320929251823`*^9}, 3.670932139813653*^9, 
   3.6709321846813927`*^9, 3.670932322072126*^9, {3.670932486831771*^9, 
   3.670932553147875*^9}, 3.6709326727048683`*^9, 3.670932765278739*^9, {
   3.670933198092572*^9, 3.670933225665801*^9}, {3.670933696210466*^9, 
   3.670933706186141*^9}, 3.67093937994991*^9, 3.670939417549032*^9, 
   3.670939702283853*^9, {3.670939907357087*^9, 3.670939922519971*^9}, 
   3.671540978422839*^9, 3.6715419668489447`*^9, 3.671542054618647*^9, 
   3.6725705008833933`*^9, 3.6725715933276443`*^9, 3.672643896438375*^9, 
   3.672644192794787*^9, 
   3.672644358319149*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
\
\>"]],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0, 
      NCache[
       Rational[2, 3], 0.6666666666666666], 0], PointSize[
     0.01388888888888889], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGB4DsQgehSMglEwCoYL2OARYLm79b49jO7l+e636cpF+x4o
rfziw2rDifPsH1h+AtMD7d7zEkfM1u54bg+jVRmmbo7+8RROP88t494v9dj+
GZQWVJ0ot2LOXXshKB0j/slIgvUMnA6++/X46YQt9gtEv4HpLxO/ODx9s8z+
A5TuKQf5v8+e4cpbMI3OF7wE0t9if+DRZzAN4ZfYN4D5JfaXJxUBHfIKTjff
PrT+mAuCNlYRftl46iWcvnlosk5pyws4PYUh5Fzew+dw+tVzFW9ZxWdwWttg
W+bRvY/htPgdsTpTtUf2ElDaWqIgw+76fXsrKC02ERQul+G0F9/nnf8qTtp7
QOlPtxtP3dR9A6cP5j4MT1Z6a38ISq85t/BnTP0bOJ3BkzQ77M5rOL1I5RLz
1M0IOihXyTbAEkF7HA5y78h9Baf3fQZGgwyCzrNpDjyw8CWcJhQe6O6DxPdb
exVjCH1afKOv9ru39js4IfR1HkVgQL21z5OD0O2hhe9VvN/a80RCaPN5BzUe
XHhjrzsdQu84LAj0GIJGDx/dLx+BDkfQ6P6/a+OUc7kLQaO7Z+J/YDITe2fP
/BVChz2/ULPO/p297wMIjc5H14/uX/TwQPdP4TZDoEIEjR6f6P55uA2U3t/B
aXT3oLsf3T0+toztz4rf2oe5QGj08P7TCozmn2/sy5sgNDqfkPvR6WXzGpw/
73xnr70IQhOKb3T3obsfXT16+BIKb0LuRw9PdP+juw+dj24/un5C7iUU3ujy
hMKDVPtJdR8hPiHzSE1/hMxHNw89/RDKn5S6j5B+QumH1PSEnn4J6Sc1vxHy
L7r9hPIXujyl+Z/S8olU9QDN48FT
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["Efficiency", TraditionalForm], 
    FormBox["\"1 - False Negative Fraction\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotLabel->FormBox[
   "\"SVM Two Circle Soft Efficiency-1 - False Negative Fraction\"", 
    TraditionalForm],
  PlotRange->{{0, 0.960199004975}, {0, 0.9601990049751}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.670376935527528*^9, 3.6706776455588827`*^9, 3.670931215787346*^9, 
   3.670931274430786*^9, 3.67093135961304*^9, 3.670931446481793*^9, {
   3.6709315325956783`*^9, 3.670931579816929*^9}, 3.670931727228547*^9, 
   3.670931856129586*^9, 3.6709320031239443`*^9, 3.670932043889971*^9, {
   3.670932081983181*^9, 3.6709320929251823`*^9}, 3.670932139813653*^9, 
   3.6709321846813927`*^9, 3.670932322072126*^9, {3.670932486831771*^9, 
   3.670932553147875*^9}, 3.6709326727048683`*^9, 3.670932765278739*^9, {
   3.670933198092572*^9, 3.670933225665801*^9}, {3.670933696210466*^9, 
   3.670933706186141*^9}, 3.67093937994991*^9, 3.670939417549032*^9, 
   3.670939702283853*^9, {3.670939907357087*^9, 3.670939922519971*^9}, 
   3.671540978422839*^9, 3.6715419668489447`*^9, 3.671542054618647*^9, 
   3.6725705008833933`*^9, 3.6725715933276443`*^9, 3.672643896438375*^9, 
   3.672644192794787*^9, 
   3.6726443583310432`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
NFR58f8XyCr3CUh+pDVvlfP+F90T2Zg=\
\>"]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["False Positive Fraction-(1-False Negative Fraction)", "Subsubsection",
 CellChangeTimes->{3.670376955451388*^9}],

Cell[CellGroupData[{

Cell[BoxData[{"SVMLinearHardFPFNPlot", "\[IndentingNewLine]", 
 RowBox[{"SVMLinearSoftFPFNPlot", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", "SVMCircleHardFPFNPlot", "\
\[IndentingNewLine]", 
 RowBox[{"SVMCircleSoftFPFNPlot", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", "SVMTwoCircleHardFPFNPlot", \
"\[IndentingNewLine]", "SVMTwoCircleSoftFPFNPlot"}], "Input",
 CellChangeTimes->{{3.670376966987159*^9, 3.670376976786335*^9}, {
  3.67257054573831*^9, 3.672570579304777*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0, 
      NCache[
       Rational[2, 3], 0.6666666666666666], 0], PointSize[
     0.01388888888888889], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGB4DsQgGgI+2I/So/QoTXuaSbtd7Oa55wPuDmLpX3VZe0om
r4DzlxTYcl1ffAHOB/EKbF8NuDthdLXIOveHVS32LGF8upvmvrf/s/LjJd+k
CWj8BfZrZKJSrO+/t18F4grsgOvvznn+G6gEzrc3jdvlyfMIzjcGg9dwfhoY
vEOL3/dwPsRa3HyIewrsQa7x730PDe8KuHtJ5RPyv7T+XRW2xqVwd75UM+RY
I7ML7q6gHXKtrwNPwN2nfPsn0IYrGO5FNT8Bw/24+Oj+pZRPyD7i3JNgv6Eo
Y+LbmoHnM0ABW+NU5+4cBB9dnhAf5j9q89HjGzsfPb5wq8duPvXSByH3EOc/
wuaj5gfi+ej5FyLfAOdTGv6Eygt0+6jDJ+Q+TD66fnLDjzz/JmCENy4+ce5N
INp+Ut2Py32E0jNp7ic/fHG5F728I5Q/B8q92MtnzPQ32NyL3z2Dx70AIaww
wg==
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"False Positive Fraction\"", TraditionalForm], 
    FormBox["\"1 - False Negative Fraction\"", TraditionalForm]},
  AxesOrigin->{0, 0.9811},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotLabel->FormBox[
   "\"SVM Linear Hard False Positive Fraction-1 - False Negative Fraction\"", 
    TraditionalForm],
  PlotRange->{{0, 1.}, {0.982, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6703769776969023`*^9, 3.6706776456233263`*^9, 3.670931215854307*^9, 
   3.670931274497748*^9, 3.670931359681479*^9, 3.6709314465446873`*^9, {
   3.670931532662352*^9, 3.670931579883052*^9}, 3.6709317272948112`*^9, 
   3.670931856197239*^9, 3.6709320031949253`*^9, 3.670932043956583*^9, {
   3.670932082050302*^9, 3.670932092992957*^9}, 3.6709321398803453`*^9, 
   3.670932184747748*^9, 3.67093232213909*^9, {3.67093248689926*^9, 
   3.670932553230165*^9}, 3.670932672800721*^9, 3.67093276534684*^9, {
   3.67093319816041*^9, 3.670933225734159*^9}, {3.670933696294188*^9, 
   3.670933706269786*^9}, 3.670939380034099*^9, 3.670939417627527*^9, 
   3.670939702369261*^9, {3.670939907440818*^9, 3.670939922602605*^9}, 
   3.671540978489395*^9, 3.6715419669150476`*^9, 3.671542054685772*^9, 
   3.672570579744533*^9, 3.672571593411961*^9, 3.672643896558848*^9, 
   3.672644192867383*^9, 
   3.6726443583603573`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
/hfJFWEA\
\>"]],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0, 
      NCache[
       Rational[2, 3], 0.6666666666666666], 0], PointSize[
     0.01388888888888889], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJztlWFIU1EYhpdF+EOhyERNqxVOxZGJEBXJZ0WZhkkWihRqYdQwksRmWMuk
zAqMxLKwiHA6XZpbYVKhkUqhQlk6yULIhTFTdxXqj7/KS73nwpHDzX7kn10Y
4+U99zvP935nZ9rDuSlHvDQajWvmI397Hs/jef7/E5ff4bgV85nmm0Pt2aIf
CjbGmqk94IrzzROJXqfUBa4PKqammgv7mxPGGH9WxfWrGxL6572f02FLV7dm
1dJ5y4u70yMSQY/mp2XEDUjUXGZcGZhcQznpE65Ro0T6ySUz/k2qP3Gqu0Xv
ps5MeX0JGX58WRPd+o3aQuV+D5G1qjqpr3mYaXvUh8LUd12s3ylf2b+v9K87
+PZsXq5qHmq80AM7p1aVvpJo6nKDNjPPwuYBP8KlNftZlP78nz3PPlApUWfP
1hX9kdX0cjokx5gmUWW9LeJazx3SJJk2fe920+/5VtBe22Dve/cE7TbI/ZVT
nG97UbD/OMvDtCf7RofDxeqDB1rEI+IT+XPVOJ/Q6JffD3z8ep6HXy/SavX/
VfPzE+2nlo8a/9/yIE9eY/5q5w/1zpXu01VfUnw1zffP1+M13z//e4E2jO1Y
63Wxju03Vz7UF/GJ5sPnK8oPfPz7PE9/WIk16qg6rygvfj34kBf2D4lfHj7+
9AG7n5zD8v3RMEvjvsL7onxFPLiPec3Pk+dJ35YYGT3UyPw+84je4X7I/MrY
onUFP5socnFZ4PFFkxSaJN9vj5iPvEX5QOP+BA907ddC3a46K8sL+4MHfMgH
PvR2zafbGeV2pkt7fQLKvO1sHtDgQ77hXS36tniFD+cBfH5VydLCjUpe8JEH
6oEH/SIf8EOjP/BCw0c9fj14TMdGbYnhynkDP/jY/9MfPsyf57vXJN8/j5mP
fOCLtIgP9fjfA3jAl+oTFDPorZx3w+bik+UBs3lRH3ljf54XPvLk34d2mvKr
FpiVenx9nAfMG3zLzowUNH50s/MHH/tDox7moeaDFxr9Iy/40Hgf+hdptn2b

      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"False Positive Fraction\"", TraditionalForm], 
    FormBox["\"1 - False Negative Fraction\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotLabel->FormBox[
   "\"SVM Linear Soft False Positive Fraction-1 - False Negative Fraction\"", 
    TraditionalForm],
  PlotRange->{{0, 0.0709812108559}, {0, 0.9692898272553}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6703769776969023`*^9, 3.6706776456233263`*^9, 3.670931215854307*^9, 
   3.670931274497748*^9, 3.670931359681479*^9, 3.6709314465446873`*^9, {
   3.670931532662352*^9, 3.670931579883052*^9}, 3.6709317272948112`*^9, 
   3.670931856197239*^9, 3.6709320031949253`*^9, 3.670932043956583*^9, {
   3.670932082050302*^9, 3.670932092992957*^9}, 3.6709321398803453`*^9, 
   3.670932184747748*^9, 3.67093232213909*^9, {3.67093248689926*^9, 
   3.670932553230165*^9}, 3.670932672800721*^9, 3.67093276534684*^9, {
   3.67093319816041*^9, 3.670933225734159*^9}, {3.670933696294188*^9, 
   3.670933706269786*^9}, 3.670939380034099*^9, 3.670939417627527*^9, 
   3.670939702369261*^9, {3.670939907440818*^9, 3.670939922602605*^9}, 
   3.671540978489395*^9, 3.6715419669150476`*^9, 3.671542054685772*^9, 
   3.672570579744533*^9, 3.672571593411961*^9, 3.672643896558848*^9, 
   3.672644192867383*^9, 3.672644358371471*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0, 
      NCache[
       Rational[2, 3], 0.6666666666666666], 0], PointSize[
     0.01388888888888889], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGB4DsQgehSMglEwCgiBE7LF5yyf77EfaHcQC/5YcCi2CDyC
u9dPC8h1ugHnX1id1GN4bAec/+C4I1DDhAHzX1Uo0DkSr+H2Nz2ufr/3+zM4
f2cyMPjnPIbzFdhB/nmA038dhdlrt147hfDvkywgfxfCvwxemkunbELwweEx
g6D/TysyrmXZkmQvdVwiucfwnf3dahA/yD5s67Wo7LVv4frd5wC9k/wGzo/y
A7nnFZr7X8D5SXeA2rci/Ju2OAjowCc4/X/g497v96rvw/mbrt4DBth1OH8X
WP1l+533G5nZ+XLg7oW4vwgnH6a+bA/Q+Pdv4f4rngNK/2/gfIj7cPNvZgGj
7x4iPmfFAL0fheCjx/c85aVTgrxe2h9qcLzBmlhuH3kVFB7vcPKtQN4rRrgf
Jo/Oh/kHVT4Jrh/mXnT/ovNx+RfdPnT34nLf3/ug9I3Jh+nHxUdXj+4/9PiG
8c3XgRLoW5zukX0OiuD3GHyY/TbvQOkNIU+Ij8s8XHz0+ERPn7j0w/xHqn3o
7sUVvrj46OEHcz/MPejxQ8g8Qu4j1r240g+u/IMefjB5YtMDOn/DJpB5NRh8
mHuI5cPcC+PD3IvLfGrzR907tNwLS5+D3b0AhrgrsQ==
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"False Positive Fraction\"", TraditionalForm], 
    FormBox["\"1 - False Negative Fraction\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotLabel->FormBox[
   "\"SVM Circle Hard False Positive Fraction-1 - False Negative Fraction\"", 
    TraditionalForm],
  PlotRange->{{0, 0.00684931506849}, {0, 0.9838709677419}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6703769776969023`*^9, 3.6706776456233263`*^9, 3.670931215854307*^9, 
   3.670931274497748*^9, 3.670931359681479*^9, 3.6709314465446873`*^9, {
   3.670931532662352*^9, 3.670931579883052*^9}, 3.6709317272948112`*^9, 
   3.670931856197239*^9, 3.6709320031949253`*^9, 3.670932043956583*^9, {
   3.670932082050302*^9, 3.670932092992957*^9}, 3.6709321398803453`*^9, 
   3.670932184747748*^9, 3.67093232213909*^9, {3.67093248689926*^9, 
   3.670932553230165*^9}, 3.670932672800721*^9, 3.67093276534684*^9, {
   3.67093319816041*^9, 3.670933225734159*^9}, {3.670933696294188*^9, 
   3.670933706269786*^9}, 3.670939380034099*^9, 3.670939417627527*^9, 
   3.670939702369261*^9, {3.670939907440818*^9, 3.670939922602605*^9}, 
   3.671540978489395*^9, 3.6715419669150476`*^9, 3.671542054685772*^9, 
   3.672570579744533*^9, 3.672571593411961*^9, 3.672643896558848*^9, 
   3.672644192867383*^9, 3.672644358384856*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0, 
      NCache[
       Rational[2, 3], 0.6666666666666666], 0], PointSize[
     0.01388888888888889], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJztlUFoE0EUhqNWDCKSmz3ksniQigcFQYuHsUUI5KAQqIegYDdawShiCwpG
JJbUVghFY3tQglRKvUVUFCkYtCKNUigIoagQU4tl0TQEtZAePDhj/d/gk3FX
L4JkIIQvb2fe997MTiz7ZOTISp/P58iP+m6MxmiMxvjfxtedfisVmBNg/2At
X387JX4351+M8fKFVWvWHxe7QuGWsaGPopRYkWu6HxHng6lAu/8D8fvHM9F4
bp78n3yS5STKxIFgOVHLF4hnC22yASO63ueKk2b2OO7cU77nxOtjqp8VMWUp
P1tcP5B7MBOtkG90b1z+oOsJ7pblRTTnN082x9K6vonv9TjEt+4ORcIt82w9
vZ9NBfl4rUS8dEq2yyoSr+twsj3TLwR8Nw2r+MIP324xHptudbIVA9tGhg+v
92xHettks7n+5fOo+cZG2Y6wrn92SZaTd8gX+UyM/j9Ntr1a3XmG7Ue3C9ue
GX68fu6D/oJDWdmO2AL5ce4alds79ivD18R4X/6WuQ98EQf3yNPT6uj8JsZ6
Xtm0XmZUnfcq+e64LY9XvEo+iIMR5+sX/Z0bUgeTxLweE/P1wct+vZQPvF9h
rkr5OPP10F/EOXN/zN9eH2nvW9tHXHyj6u2nfIibmPtyRv9ofRc/zPfqw+N/
6s+Z7w/3desXGPtpYq/9RBzzeX43X54vVHp34uLDS0Z2qwfPc8b+gXFfcebv
E+Lw3zJnXes/PEj5TXz6kfp/0gwfMOoH4z4C4/6dWPTJfmfIjzP6/fN9lyaf
fZ8PyX5fdvVBvdxn4MtW+9nAFWLkRz7Oma6X9T3lq/r+PnpT+g0TfwO3Wg7n

      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"False Positive Fraction\"", TraditionalForm], 
    FormBox["\"1 - False Negative Fraction\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotLabel->FormBox[
   "\"SVM Circle Soft False Positive Fraction-1 - False Negative Fraction\"", 
    TraditionalForm],
  PlotRange->{{0, 0.0205479452055}, {0, 0.9354838709677}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6703769776969023`*^9, 3.6706776456233263`*^9, 3.670931215854307*^9, 
   3.670931274497748*^9, 3.670931359681479*^9, 3.6709314465446873`*^9, {
   3.670931532662352*^9, 3.670931579883052*^9}, 3.6709317272948112`*^9, 
   3.670931856197239*^9, 3.6709320031949253`*^9, 3.670932043956583*^9, {
   3.670932082050302*^9, 3.670932092992957*^9}, 3.6709321398803453`*^9, 
   3.670932184747748*^9, 3.67093232213909*^9, {3.67093248689926*^9, 
   3.670932553230165*^9}, 3.670932672800721*^9, 3.67093276534684*^9, {
   3.67093319816041*^9, 3.670933225734159*^9}, {3.670933696294188*^9, 
   3.670933706269786*^9}, 3.670939380034099*^9, 3.670939417627527*^9, 
   3.670939702369261*^9, {3.670939907440818*^9, 3.670939922602605*^9}, 
   3.671540978489395*^9, 3.6715419669150476`*^9, 3.671542054685772*^9, 
   3.672570579744533*^9, 3.672571593411961*^9, 3.672643896558848*^9, 
   3.672644192867383*^9, 3.672644358395277*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0, 
      NCache[
       Rational[2, 3], 0.6666666666666666], 0], PointSize[
     0.01388888888888889], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGB4DsQgehSMglEwCgiBOyUvZ617ecp+oN1BLLAzi5ziGvkE
7t6gr3dBAM4/xZwopJZ4Cc4vUN0obL1xM9399+TJCs3K9jr7pduA1gu/tm+1
KzgWEBVinz3h7c15b1/C3bOv9fT2mtPP4fxrIc0mHs0I/8kKTzbgnPwAzrdp
d5Ra4ngLp38FhEHhcwTOP2D7UObcwzVwvkNUq/yPxn6M8HCqWrSW7XyjPds5
kPo39uh8yxU8P54UVNpvuNx750TvG/sZM0D+KbF338f/5wD/G7j/0P3LtF68
aqH4K7h9Jzo+SvR/fAHnhxT4Xi/xRfi/wkl7a5D2UzjfGAweY4QHxP4W+5ir
8X+vxr+F8x1ubba9vZkwHxY/5653zr3RicmH+Q/Gh/kfZh+MDwufW9tB+vPs
N+y0nHPYEhY+KfZlx3cDwWv7+z3WCxM7J9ir3Geve8D+zn5fMih8J9pvugNK
vm8x5NX9QOZ34uRnLLC7P+tpG8V8mP0wPix8LnaB/NMHVw/jczyJ3vc0+p29
8N1bAvp/uuF8dHkYv+DN+n+v1iPUw/gw/6DzH70DZo+bxPNh+k1Wc+5aLTIZ
w/5/L1vjXrQi+DD9sPCG6YfxQz4y239gfk8yH2Y+Oh9mHy77Ye6DpQeYe9DD
D5f56O459ln3/iddhDw6H6YeFh/EqkcPX3Q+zDx08+nFh6UHdHlc6RE9/mDp
n9j4IxQf6O4jpB7dfej+QU//uNITIfNxxS+u9ISLj+4eWPjB+Oj+Jzb/EBu+
1HIvrvyAnp9w5S9S45fa4TtY3AsAyrWDaA==
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"False Positive Fraction\"", TraditionalForm], 
    FormBox["\"1 - False Negative Fraction\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotLabel->FormBox[
   "\"SVM Two Circle Hard False Positive Fraction-1 - False Negative Fraction\
\"", TraditionalForm],
  PlotRange->{{0, 0.0186335403727}, {0, 0.974358974359}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6703769776969023`*^9, 3.6706776456233263`*^9, 3.670931215854307*^9, 
   3.670931274497748*^9, 3.670931359681479*^9, 3.6709314465446873`*^9, {
   3.670931532662352*^9, 3.670931579883052*^9}, 3.6709317272948112`*^9, 
   3.670931856197239*^9, 3.6709320031949253`*^9, 3.670932043956583*^9, {
   3.670932082050302*^9, 3.670932092992957*^9}, 3.6709321398803453`*^9, 
   3.670932184747748*^9, 3.67093232213909*^9, {3.67093248689926*^9, 
   3.670932553230165*^9}, 3.670932672800721*^9, 3.67093276534684*^9, {
   3.67093319816041*^9, 3.670933225734159*^9}, {3.670933696294188*^9, 
   3.670933706269786*^9}, 3.670939380034099*^9, 3.670939417627527*^9, 
   3.670939702369261*^9, {3.670939907440818*^9, 3.670939922602605*^9}, 
   3.671540978489395*^9, 3.6715419669150476`*^9, 3.671542054685772*^9, 
   3.672570579744533*^9, 3.672571593411961*^9, 3.672643896558848*^9, 
   3.672644192867383*^9, 3.672644358404358*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0, 
      NCache[
       Rational[2, 3], 0.6666666666666666], 0], PointSize[
     0.01388888888888889], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJztlWtIk2EUx1cSFI1Iq7WiBGVGMQUvJCxmJ0xIEMWGGJYfzC4YNHNmaRfK
eUGLkJYOu5g1P0iRZWUNJTKbpWhlmoKIis7L1tw0dWZJEL1veZ4XHntYfelD
7IExfnt2zvn/zznv5pN8THVosUgksnIv/t193Md93Od/Od19znUa7UF4GBmr
eJY/APj5JfGXmMddHYQHFdP3gnTl8Pss/+74SyWj8ruX4b30Vej9WiuMrA4O
u+VZAH4ifc2+r6Mg7kpLemc4BRb1yeUv1g8D+vPy03nfKesn+hPXTgdLl7wl
fHvNbPObpCeEJ3UzO0YdlYLfrnHOfxGTG4acXHwe4eyfnAH1h+OW7lUUQ+eV
dE7QGDRkPp0Nn9JBbq+puiliDNBPiGyVTdtqg0DNeOUWUxH0mIr9T+R9nPdz
AUpEcW2pZivYQmc4P3kwZpVFbfSxgHI/n08L8kDjkdfPh4l/aZ/k3NZNQ/P+
M2CbNC1le/fAPMeBRMf3p5PojVzhrPue1QIWv2J5YYsepnu1rT0BDsImtXnP
Ad9xwlVthrnE88J9ijj5RnyfHVRNfP4SqJB98NDX2Il/ldo3LFZhJ/4jG1W7
CtVCP+qd3Dg2CP1IVebubjDYCGM/kLEftL4z+fw+lIIshJ+3wLXLHkXLJwRO
9fbhGib4ESdoPsmiBA4ofbl5sF3wV9voyRl0EH/YH/QXMDPFGRCY9t+vDD/a
edHO1OPxmVs3yQTh6MH2sw+AzXQ87ZfuB/pB/RpjEBcgMM4TGf1kZXTEGBOu
gtk4ye37BGHUg4z6kVEPcnzEogLLcYGx38iZOdy45xxELzJrHqifZoyXV2Tv
dNYJenDerPqoj+4naz/o54FmWi9LP91P2j8yrY9met50vCu9+H3Ug3pZ88F+
sPL/aX3cN1o/yw+th8Wu/NL66X1jMUsfnQ/359fv8bUFzwPG4z1Lnys9dD5X
+431kA0hK9NHbNcX3NP6sB4y/fxhPD1PVr/petifct/q3G9BZaQei7E+6sd9
RWbdoz66v6gHGfVgPH4/OCdG73X6JtHTbOb/r8tJfryn6/+tXuQfZR1L7g==

      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"False Positive Fraction\"", TraditionalForm], 
    FormBox["\"1 - False Negative Fraction\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotLabel->FormBox[
   "\"SVM Two Circle SoftFalse Positive Fraction-1 - False Negative \
Fraction\"", TraditionalForm],
  PlotRange->{{0, 0.0300375469337}, {0, 0.9601990049751}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6703769776969023`*^9, 3.6706776456233263`*^9, 3.670931215854307*^9, 
   3.670931274497748*^9, 3.670931359681479*^9, 3.6709314465446873`*^9, {
   3.670931532662352*^9, 3.670931579883052*^9}, 3.6709317272948112`*^9, 
   3.670931856197239*^9, 3.6709320031949253`*^9, 3.670932043956583*^9, {
   3.670932082050302*^9, 3.670932092992957*^9}, 3.6709321398803453`*^9, 
   3.670932184747748*^9, 3.67093232213909*^9, {3.67093248689926*^9, 
   3.670932553230165*^9}, 3.670932672800721*^9, 3.67093276534684*^9, {
   3.67093319816041*^9, 3.670933225734159*^9}, {3.670933696294188*^9, 
   3.670933706269786*^9}, 3.670939380034099*^9, 3.670939417627527*^9, 
   3.670939702369261*^9, {3.670939907440818*^9, 3.670939922602605*^9}, 
   3.671540978489395*^9, 3.6715419669150476`*^9, 3.671542054685772*^9, 
   3.672570579744533*^9, 3.672571593411961*^9, 3.672643896558848*^9, 
   3.672644192867383*^9, 3.67264435841385*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["BDS", "Subsection",
 CellChangeTimes->{{3.672638059631631*^9, 3.672638060559527*^9}}],

Cell[CellGroupData[{

Cell["Stumps-Efficiency", "Subsubsection",
 CellChangeTimes->{3.672638075737389*^9}],

Cell[CellGroupData[{

Cell[BoxData[{"BDSLinearHardSEPlot", "\[IndentingNewLine]", 
 RowBox[{"BDSLinearSoftSEPlot", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", "BDSCircleHardSEPlot", "\
\[IndentingNewLine]", 
 RowBox[{"BDSCircleSoftSEPlot", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", "BDSTwoCircleHardSEPlot", "\
\[IndentingNewLine]", "BDSTwoCircleSoftSEPlot"}], "Input",
 CellChangeTimes->{{3.672638091485569*^9, 3.67263809613348*^9}}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Symbol", "[", "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Stumps", ",", "Efficiency"}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", "\<\"BDS Linear Hard Stumps-Efficiency\"\>"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[1, 0, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 0],
     Editable->False,
     Selectable->False]}]}], "]"}]], "Output",
 CellChangeTimes->{3.6726438966426573`*^9, 3.6726441929378853`*^9, 
  3.6726443584510603`*^9}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Symbol", "[", "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Stumps", ",", "Efficiency"}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", "\<\"BDS Linear Soft Stumps-Efficiency\"\>"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[1, 0, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 0],
     Editable->False,
     Selectable->False]}]}], "]"}]], "Output",
 CellChangeTimes->{3.6726438966426573`*^9, 3.6726441929378853`*^9, 
  3.672644358460042*^9}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Symbol", "[", "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Stumps", ",", "Efficiency"}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", "\<\"BDS Circle Hard Stumps-Efficiency\"\>"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[1, 0, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 0],
     Editable->False,
     Selectable->False]}]}], "]"}]], "Output",
 CellChangeTimes->{3.6726438966426573`*^9, 3.6726441929378853`*^9, 
  3.67264435846734*^9}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Symbol", "[", "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Stumps", ",", "Efficiency"}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", "\<\"BDS Circle Soft Stumps-Efficiency\"\>"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[1, 0, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 0],
     Editable->False,
     Selectable->False]}]}], "]"}]], "Output",
 CellChangeTimes->{3.6726438966426573`*^9, 3.6726441929378853`*^9, 
  3.6726443584745827`*^9}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Symbol", "[", "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Stumps", ",", "Efficiency"}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", "\<\"BDS Two Circle Hard Stumps-Efficiency\"\>"}], 
   ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[1, 0, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 0],
     Editable->False,
     Selectable->False]}]}], "]"}]], "Output",
 CellChangeTimes->{3.6726438966426573`*^9, 3.6726441929378853`*^9, 
  3.672644358481669*^9}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Symbol", "[", "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Stumps", ",", "Efficiency"}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", "\<\"BDS Two Circle Soft Stumps-Efficiency\"\>"}], 
   ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[1, 0, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 0],
     Editable->False,
     Selectable->False]}]}], "]"}]], "Output",
 CellChangeTimes->{3.6726438966426573`*^9, 3.6726441929378853`*^9, 
  3.67264435848877*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Efficiency-1 - False Positive Fraction", "Subsubsection",
 CellChangeTimes->{3.672638111104538*^9}],

Cell[CellGroupData[{

Cell[BoxData[{"BDSLinearHardEFPPlot", "\[IndentingNewLine]", 
 RowBox[{"BDSLinearSoftEFPPlot", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", "BDSCircleHardEFPPlot", "\
\[IndentingNewLine]", 
 RowBox[{"BDSCircleSoftEFPPlot", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", "BDSTwoCircleHardEFPPlot", \
"\[IndentingNewLine]", "BDSTwoCircleSoftEFPPlot"}], "Input",
 CellChangeTimes->{{3.672638124030559*^9, 3.6726381278607483`*^9}}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#1"}], "&"}], ",", 
     RowBox[{"Symbol", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Efficiency", ",", "\<\"1 - False Positive Fraction\"\>"}], 
     "}"}]}], ",", 
   RowBox[{
   "PlotLabel", 
    "\[Rule]", "\<\"BDS Linear Hard Efficiency-1 - False Positive \
Fraction\"\>"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[1, 0, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 0],
     Editable->False,
     Selectable->False]}]}], "]"}]], "Output",
 CellChangeTimes->{3.672643896744076*^9, 3.672644193010034*^9, 
  3.672644358518186*^9}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#1"}], "&"}], ",", 
     RowBox[{"Symbol", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Efficiency", ",", "\<\"1 - False Positive Fraction\"\>"}], 
     "}"}]}], ",", 
   RowBox[{
   "PlotLabel", 
    "\[Rule]", "\<\"BDS Linear Soft Efficiency-1 - False Positive \
Fraction\"\>"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[1, 0, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 0],
     Editable->False,
     Selectable->False]}]}], "]"}]], "Output",
 CellChangeTimes->{3.672643896744076*^9, 3.672644193010034*^9, 
  3.672644358529994*^9}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#1"}], "&"}], ",", 
     RowBox[{"Symbol", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Efficiency", ",", "\<\"1 - False Positive Fraction\"\>"}], 
     "}"}]}], ",", 
   RowBox[{
   "PlotLabel", 
    "\[Rule]", "\<\"BDS Circle Hard Efficiency-1 - False Positive \
Fraction\"\>"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[1, 0, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 0],
     Editable->False,
     Selectable->False]}]}], "]"}]], "Output",
 CellChangeTimes->{3.672643896744076*^9, 3.672644193010034*^9, 
  3.6726443585387287`*^9}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#1"}], "&"}], ",", 
     RowBox[{"Symbol", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Efficiency", ",", "\<\"1 - False Positive Fraction\"\>"}], 
     "}"}]}], ",", 
   RowBox[{
   "PlotLabel", 
    "\[Rule]", "\<\"BDS Circle Soft Efficiency-1 - False Positive \
Fraction\"\>"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[1, 0, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 0],
     Editable->False,
     Selectable->False]}]}], "]"}]], "Output",
 CellChangeTimes->{3.672643896744076*^9, 3.672644193010034*^9, 
  3.672644358546789*^9}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#1"}], "&"}], ",", 
     RowBox[{"Symbol", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Efficiency", ",", "\<\"1 - False Positive Fraction\"\>"}], 
     "}"}]}], ",", 
   RowBox[{
   "PlotLabel", 
    "\[Rule]", "\<\"BDS Two Circle Hard Efficiency-1 - False Positive \
Fraction\"\>"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[1, 0, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 0],
     Editable->False,
     Selectable->False]}]}], "]"}]], "Output",
 CellChangeTimes->{3.672643896744076*^9, 3.672644193010034*^9, 
  3.672644358555099*^9}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#1"}], "&"}], ",", 
     RowBox[{"Symbol", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Efficiency", ",", "\<\"1 - False Positive Fraction\"\>"}], 
     "}"}]}], ",", 
   RowBox[{
   "PlotLabel", 
    "\[Rule]", "\<\"BDS Two Circle Soft Efficiency-1 - False Positive \
Fraction\"\>"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[1, 0, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 0],
     Editable->False,
     Selectable->False]}]}], "]"}]], "Output",
 CellChangeTimes->{3.672643896744076*^9, 3.672644193010034*^9, 
  3.672644358564872*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Efficiency-1 - False Negative Fraction", "Subsubsection",
 CellChangeTimes->{3.672638137374267*^9}],

Cell[CellGroupData[{

Cell[BoxData[{"BDSLinearHardEFNPlot", "\[IndentingNewLine]", 
 RowBox[{"BDSLinearSoftEFNPlot", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", "BDSCircleHardEFNPlot", "\
\[IndentingNewLine]", 
 RowBox[{"BDSCircleSoftEFNPlot", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", "BDSTwoCircleHardEFNPlot", \
"\[IndentingNewLine]", "BDSTwoCircleSoftEFNPlot"}], "Input",
 CellChangeTimes->{{3.672638206992028*^9, 3.672638212078559*^9}}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#1"}], "&"}], ",", 
     RowBox[{"Symbol", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Efficiency", ",", "\<\"1 - False Negative Fraction\"\>"}], 
     "}"}]}], ",", 
   RowBox[{
   "PlotLabel", 
    "\[Rule]", "\<\"BDS Linear Hard Efficiency-1 - False Negative \
Fraction\"\>"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[1, 0, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 0],
     Editable->False,
     Selectable->False]}]}], "]"}]], "Output",
 CellChangeTimes->{3.672643896810574*^9, 3.672644193063986*^9, 
  3.672644358593917*^9}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#1"}], "&"}], ",", 
     RowBox[{"Symbol", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Efficiency", ",", "\<\"1 - False Negative Fraction\"\>"}], 
     "}"}]}], ",", 
   RowBox[{
   "PlotLabel", 
    "\[Rule]", "\<\"BDS Linear Soft fficiency-1 - False Negative \
Fraction\"\>"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[1, 0, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 0],
     Editable->False,
     Selectable->False]}]}], "]"}]], "Output",
 CellChangeTimes->{3.672643896810574*^9, 3.672644193063986*^9, 
  3.6726443586025352`*^9}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#1"}], "&"}], ",", 
     RowBox[{"Symbol", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Efficiency", ",", "\<\"1 - False Negative Fraction\"\>"}], 
     "}"}]}], ",", 
   RowBox[{
   "PlotLabel", 
    "\[Rule]", "\<\"BDS Circle Hard Efficiency-1 - False Negative \
Fraction\"\>"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[1, 0, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 0],
     Editable->False,
     Selectable->False]}]}], "]"}]], "Output",
 CellChangeTimes->{3.672643896810574*^9, 3.672644193063986*^9, 
  3.672644358609683*^9}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#1"}], "&"}], ",", 
     RowBox[{"Symbol", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Efficiency", ",", "\<\"1 - False Negative Fraction\"\>"}], 
     "}"}]}], ",", 
   RowBox[{
   "PlotLabel", 
    "\[Rule]", "\<\"BDS Circle Soft Efficiency-1 - False Negative \
Fraction\"\>"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[1, 0, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 0],
     Editable->False,
     Selectable->False]}]}], "]"}]], "Output",
 CellChangeTimes->{3.672643896810574*^9, 3.672644193063986*^9, 
  3.672644358617375*^9}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#1"}], "&"}], ",", 
     RowBox[{"Symbol", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Efficiency", ",", "\<\"1 - False Negative Fraction\"\>"}], 
     "}"}]}], ",", 
   RowBox[{
   "PlotLabel", 
    "\[Rule]", "\<\"BDS Two Circle Hard Efficiency-1 - False Negative \
Fraction\"\>"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[1, 0, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 0],
     Editable->False,
     Selectable->False]}]}], "]"}]], "Output",
 CellChangeTimes->{3.672643896810574*^9, 3.672644193063986*^9, 
  3.672644358625792*^9}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#1"}], "&"}], ",", 
     RowBox[{"Symbol", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Efficiency", ",", "\<\"1 - False Negative Fraction\"\>"}], 
     "}"}]}], ",", 
   RowBox[{
   "PlotLabel", 
    "\[Rule]", "\<\"BDS Two Circle Soft Efficiency-1 - False Negative \
Fraction\"\>"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[1, 0, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 0],
     Editable->False,
     Selectable->False]}]}], "]"}]], "Output",
 CellChangeTimes->{3.672643896810574*^9, 3.672644193063986*^9, 
  3.672644358633566*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["False Positive Fraction-1 - False Negative Fraction", "Subsubsection",
 CellChangeTimes->{3.6726381530848513`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{"BDSLinearHardFPFNPlot", "\[IndentingNewLine]", 
 RowBox[{"BDSLinearSoftFPFNPlot", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", "BDSCircleHardFPFNPlot", "\
\[IndentingNewLine]", 
 RowBox[{"BDSCircleSoftFPFNPlot", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", "BDSTwoCircleHardFPFNPlot", \
"\[IndentingNewLine]", "BDSTwoCircleSoftFPFNPlot"}], "Input",
 CellChangeTimes->{{3.6726382140464163`*^9, 3.672638218814024*^9}}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#1"}], "&"}], ",", 
     RowBox[{"Symbol", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"False Positive Fraction\"\>", 
      ",", "\<\"1 - False Negative Fraction\"\>"}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", 
    "\[Rule]", "\<\"BDS Linear Hard False Positive Fraction-1 - False \
Negative Fraction\"\>"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[1, 0, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 0],
     Editable->False,
     Selectable->False]}]}], "]"}]], "Output",
 CellChangeTimes->{3.6726438968766537`*^9, 3.672644193123609*^9, 
  3.672644358661059*^9}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#1"}], "&"}], ",", 
     RowBox[{"Symbol", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"False Positive Fraction\"\>", 
      ",", "\<\"1 - False Negative Fraction\"\>"}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", 
    "\[Rule]", "\<\"BDS Linear Soft False Positive Fraction-1 - False \
Negative Fraction\"\>"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[1, 0, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 0],
     Editable->False,
     Selectable->False]}]}], "]"}]], "Output",
 CellChangeTimes->{3.6726438968766537`*^9, 3.672644193123609*^9, 
  3.672644358670158*^9}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#1"}], "&"}], ",", 
     RowBox[{"Symbol", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"False Positive Fraction\"\>", 
      ",", "\<\"1 - False Negative Fraction\"\>"}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", 
    "\[Rule]", "\<\"BDS Circle Hard False Positive Fraction-1 - False \
Negative Fraction\"\>"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[1, 0, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 0],
     Editable->False,
     Selectable->False]}]}], "]"}]], "Output",
 CellChangeTimes->{3.6726438968766537`*^9, 3.672644193123609*^9, 
  3.672644358678259*^9}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#1"}], "&"}], ",", 
     RowBox[{"Symbol", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"False Positive Fraction\"\>", 
      ",", "\<\"1 - False Negative Fraction\"\>"}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", 
    "\[Rule]", "\<\"BDS Circle Soft False Positive Fraction-1 - False \
Negative Fraction\"\>"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[1, 0, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 0],
     Editable->False,
     Selectable->False]}]}], "]"}]], "Output",
 CellChangeTimes->{3.6726438968766537`*^9, 3.672644193123609*^9, 
  3.672644358685775*^9}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#1"}], "&"}], ",", 
     RowBox[{"Symbol", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"False Positive Fraction\"\>", 
      ",", "\<\"1 - False Negative Fraction\"\>"}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", 
    "\[Rule]", "\<\"BDS Two Circle Hard False Positive Fraction-1 - False \
Negative Fraction\"\>"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[1, 0, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 0],
     Editable->False,
     Selectable->False]}]}], "]"}]], "Output",
 CellChangeTimes->{3.6726438968766537`*^9, 3.672644193123609*^9, 
  3.672644358694216*^9}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#1"}], "&"}], ",", 
     RowBox[{"Symbol", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"False Positive Fraction\"\>", 
      ",", "\<\"1 - False Negative Fraction\"\>"}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", 
    "\[Rule]", "\<\"BDS Two Circle Soft False Positive Fraction-1 - False \
Negative Fraction\"\>"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[1, 0, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 0],
     Editable->False,
     Selectable->False]}]}], "]"}]], "Output",
 CellChangeTimes->{3.6726438968766537`*^9, 3.672644193123609*^9, 
  3.672644358702033*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["BDT", "Subsection",
 CellChangeTimes->{3.6703769901940823`*^9}],

Cell[CellGroupData[{

Cell["Trees-Efficiency", "Subsubsection",
 CellChangeTimes->{{3.670377015768856*^9, 3.67037701817457*^9}, {
  3.6709396826043377`*^9, 3.6709396842922087`*^9}, {3.6715366777950478`*^9, 
  3.6715366779879923`*^9}, {3.671538784674761*^9, 3.671538785587104*^9}, {
  3.672638064303129*^9, 3.672638083413906*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{"BDTLinearHardTEPlot", "\[IndentingNewLine]", 
 RowBox[{"BDTLinearSoftTEPlot", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", "BDTCircleHardTEPlot", "\
\[IndentingNewLine]", 
 RowBox[{"BDTCircleSoftTEPlot", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", "BDTTwoCircleHardTEPlot", "\
\[IndentingNewLine]", "BDTTwoCircleSoftTEPlot"}], "Input",
 CellChangeTimes->{{3.6703770347688828`*^9, 3.670377052269568*^9}, {
  3.670939686069255*^9, 3.670939690836553*^9}, {3.6715366810592413`*^9, 
  3.671536684363381*^9}, {3.671538786907639*^9, 3.671538790339094*^9}, {
  3.671541957654723*^9, 3.671541962649358*^9}, {3.672570609048978*^9, 
  3.672570639966957*^9}, {3.672638084686297*^9, 3.672638089077635*^9}}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Symbol", "[", "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Stumps", ",", "Efficiency"}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", "\<\"BDT Linear Hard Trees-Efficiency\"\>"}], ",", 
   
   RowBox[{"PlotStyle", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[0, 0, 1]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 0, 1],
     Editable->False,
     Selectable->False]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.670377052737719*^9, 3.6706776457059317`*^9, 3.670931215920471*^9, 
   3.6709312745645103`*^9, 3.670931359794264*^9, 3.670931446611266*^9, {
   3.670931532728177*^9, 3.670931579950445*^9}, 3.6709317273614197`*^9, 
   3.6709318562627707`*^9, 3.6709320032913733`*^9, 3.670932044039624*^9, {
   3.670932082116523*^9, 3.670932093076068*^9}, 3.6709321399643393`*^9, 
   3.670932184830699*^9, 3.67093232221805*^9, {3.670932486981246*^9, 
   3.670932553313323*^9}, 3.670932672905282*^9, 3.6709327654284143`*^9, {
   3.6709331982420053`*^9, 3.670933225816105*^9}, {3.670933696394774*^9, 
   3.670933706385666*^9}, 3.6709393801167183`*^9, 3.6709394177119303`*^9, 
   3.670939702455297*^9, {3.6709399075413017`*^9, 3.670939922685602*^9}, 
   3.671540978555921*^9, 3.671541967008091*^9, 3.671542054760171*^9, 
   3.672570640372752*^9, 3.6725715935278063`*^9, 3.672643896959649*^9, 
   3.672644193173761*^9, 3.6726443587366743`*^9}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Symbol", "[", "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Stumps", ",", "Efficiency"}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", "\<\"BDT Linear Soft Tres-Efficiency\"\>"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[0, 0, 1]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 0, 1],
     Editable->False,
     Selectable->False]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.670377052737719*^9, 3.6706776457059317`*^9, 3.670931215920471*^9, 
   3.6709312745645103`*^9, 3.670931359794264*^9, 3.670931446611266*^9, {
   3.670931532728177*^9, 3.670931579950445*^9}, 3.6709317273614197`*^9, 
   3.6709318562627707`*^9, 3.6709320032913733`*^9, 3.670932044039624*^9, {
   3.670932082116523*^9, 3.670932093076068*^9}, 3.6709321399643393`*^9, 
   3.670932184830699*^9, 3.67093232221805*^9, {3.670932486981246*^9, 
   3.670932553313323*^9}, 3.670932672905282*^9, 3.6709327654284143`*^9, {
   3.6709331982420053`*^9, 3.670933225816105*^9}, {3.670933696394774*^9, 
   3.670933706385666*^9}, 3.6709393801167183`*^9, 3.6709394177119303`*^9, 
   3.670939702455297*^9, {3.6709399075413017`*^9, 3.670939922685602*^9}, 
   3.671540978555921*^9, 3.671541967008091*^9, 3.671542054760171*^9, 
   3.672570640372752*^9, 3.6725715935278063`*^9, 3.672643896959649*^9, 
   3.672644193173761*^9, 3.672644358746491*^9}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Symbol", "[", "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Stumps", ",", "Efficiency"}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", "\<\"BDT Circle Hard Trees-Efficiency\"\>"}], ",", 
   
   RowBox[{"PlotStyle", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[0, 0, 1]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 0, 1],
     Editable->False,
     Selectable->False]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.670377052737719*^9, 3.6706776457059317`*^9, 3.670931215920471*^9, 
   3.6709312745645103`*^9, 3.670931359794264*^9, 3.670931446611266*^9, {
   3.670931532728177*^9, 3.670931579950445*^9}, 3.6709317273614197`*^9, 
   3.6709318562627707`*^9, 3.6709320032913733`*^9, 3.670932044039624*^9, {
   3.670932082116523*^9, 3.670932093076068*^9}, 3.6709321399643393`*^9, 
   3.670932184830699*^9, 3.67093232221805*^9, {3.670932486981246*^9, 
   3.670932553313323*^9}, 3.670932672905282*^9, 3.6709327654284143`*^9, {
   3.6709331982420053`*^9, 3.670933225816105*^9}, {3.670933696394774*^9, 
   3.670933706385666*^9}, 3.6709393801167183`*^9, 3.6709394177119303`*^9, 
   3.670939702455297*^9, {3.6709399075413017`*^9, 3.670939922685602*^9}, 
   3.671540978555921*^9, 3.671541967008091*^9, 3.671542054760171*^9, 
   3.672570640372752*^9, 3.6725715935278063`*^9, 3.672643896959649*^9, 
   3.672644193173761*^9, 3.672644358753665*^9}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Symbol", "[", "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Stumps", ",", "Efficiency"}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", "\<\"BDT Circle Soft Trees-Efficiency\"\>"}], ",", 
   
   RowBox[{"PlotStyle", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[0, 0, 1]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 0, 1],
     Editable->False,
     Selectable->False]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.670377052737719*^9, 3.6706776457059317`*^9, 3.670931215920471*^9, 
   3.6709312745645103`*^9, 3.670931359794264*^9, 3.670931446611266*^9, {
   3.670931532728177*^9, 3.670931579950445*^9}, 3.6709317273614197`*^9, 
   3.6709318562627707`*^9, 3.6709320032913733`*^9, 3.670932044039624*^9, {
   3.670932082116523*^9, 3.670932093076068*^9}, 3.6709321399643393`*^9, 
   3.670932184830699*^9, 3.67093232221805*^9, {3.670932486981246*^9, 
   3.670932553313323*^9}, 3.670932672905282*^9, 3.6709327654284143`*^9, {
   3.6709331982420053`*^9, 3.670933225816105*^9}, {3.670933696394774*^9, 
   3.670933706385666*^9}, 3.6709393801167183`*^9, 3.6709394177119303`*^9, 
   3.670939702455297*^9, {3.6709399075413017`*^9, 3.670939922685602*^9}, 
   3.671540978555921*^9, 3.671541967008091*^9, 3.671542054760171*^9, 
   3.672570640372752*^9, 3.6725715935278063`*^9, 3.672643896959649*^9, 
   3.672644193173761*^9, 3.672644358760737*^9}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Symbol", "[", "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Stumps", ",", "Efficiency"}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", "\<\"BDT Two Circle Hard Trees-Efficiency\"\>"}], 
   ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[0, 0, 1]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 0, 1],
     Editable->False,
     Selectable->False]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.670377052737719*^9, 3.6706776457059317`*^9, 3.670931215920471*^9, 
   3.6709312745645103`*^9, 3.670931359794264*^9, 3.670931446611266*^9, {
   3.670931532728177*^9, 3.670931579950445*^9}, 3.6709317273614197`*^9, 
   3.6709318562627707`*^9, 3.6709320032913733`*^9, 3.670932044039624*^9, {
   3.670932082116523*^9, 3.670932093076068*^9}, 3.6709321399643393`*^9, 
   3.670932184830699*^9, 3.67093232221805*^9, {3.670932486981246*^9, 
   3.670932553313323*^9}, 3.670932672905282*^9, 3.6709327654284143`*^9, {
   3.6709331982420053`*^9, 3.670933225816105*^9}, {3.670933696394774*^9, 
   3.670933706385666*^9}, 3.6709393801167183`*^9, 3.6709394177119303`*^9, 
   3.670939702455297*^9, {3.6709399075413017`*^9, 3.670939922685602*^9}, 
   3.671540978555921*^9, 3.671541967008091*^9, 3.671542054760171*^9, 
   3.672570640372752*^9, 3.6725715935278063`*^9, 3.672643896959649*^9, 
   3.672644193173761*^9, 3.672644358768023*^9}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Symbol", "[", "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Stumps", ",", "Efficiency"}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", "\<\"BDT Two Circle Soft Trees-Efficiency\"\>"}], 
   ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[0, 0, 1]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 0, 1],
     Editable->False,
     Selectable->False]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.670377052737719*^9, 3.6706776457059317`*^9, 3.670931215920471*^9, 
   3.6709312745645103`*^9, 3.670931359794264*^9, 3.670931446611266*^9, {
   3.670931532728177*^9, 3.670931579950445*^9}, 3.6709317273614197`*^9, 
   3.6709318562627707`*^9, 3.6709320032913733`*^9, 3.670932044039624*^9, {
   3.670932082116523*^9, 3.670932093076068*^9}, 3.6709321399643393`*^9, 
   3.670932184830699*^9, 3.67093232221805*^9, {3.670932486981246*^9, 
   3.670932553313323*^9}, 3.670932672905282*^9, 3.6709327654284143`*^9, {
   3.6709331982420053`*^9, 3.670933225816105*^9}, {3.670933696394774*^9, 
   3.670933706385666*^9}, 3.6709393801167183`*^9, 3.6709394177119303`*^9, 
   3.670939702455297*^9, {3.6709399075413017`*^9, 3.670939922685602*^9}, 
   3.671540978555921*^9, 3.671541967008091*^9, 3.671542054760171*^9, 
   3.672570640372752*^9, 3.6725715935278063`*^9, 3.672643896959649*^9, 
   3.672644193173761*^9, 3.672644358776566*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Efficiency-1 - False Positive Fraction", "Subsubsection",
 CellChangeTimes->{{3.670425325514924*^9, 3.670425329649191*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{"BDTLinearHardEFPPlot", "\[IndentingNewLine]", 
 RowBox[{"BDTLinearSoftEFPPlot", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", "BDTCircleHardEFPPlot", "\
\[IndentingNewLine]", 
 RowBox[{"BDTCircleSoftEFPPlot", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", "BDTTwoCircleHardEFPPlot", \
"\[IndentingNewLine]", "BDTTwoCircleSoftEFPPlot"}], "Input",
 CellChangeTimes->{{3.6704253340262203`*^9, 3.670425339929019*^9}, {
  3.6725706649557543`*^9, 3.672570695994113*^9}}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#1"}], "&"}], ",", 
     RowBox[{"Symbol", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Efficiency", ",", "\<\"1 - False Positive Fraction\"\>"}], 
     "}"}]}], ",", 
   RowBox[{
   "PlotLabel", 
    "\[Rule]", "\<\"BDT Linear Hard Efficiency-1 - False Positive \
Fraction\"\>"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[0, 0, 1]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 0, 1],
     Editable->False,
     Selectable->False]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.670425340926303*^9, 3.67067764580727*^9, 3.670931215988847*^9, 
   3.670931274632907*^9, 3.6709313599497547`*^9, 3.6709314467118464`*^9, {
   3.6709315328287973`*^9, 3.670931580050337*^9}, 3.670931727461363*^9, 
   3.6709318563644648`*^9, 3.670932003391114*^9, 3.670932044146555*^9, {
   3.67093208221775*^9, 3.6709320931761217`*^9}, 3.67093214006371*^9, 
   3.670932184931422*^9, 3.6709323223186283`*^9, {3.6709324870827847`*^9, 
   3.670932553413377*^9}, 3.670932673104999*^9, 3.670932765579236*^9, {
   3.670933198376206*^9, 3.670933225950282*^9}, {3.670933696560923*^9, 
   3.670933706552006*^9}, 3.670939380251217*^9, 3.670939417877594*^9, 
   3.6709397025370617`*^9, {3.670939907624443*^9, 3.670939922755143*^9}, 
   3.671540978823542*^9, 3.671541967165586*^9, 3.6715420548188553`*^9, 
   3.672570697479616*^9, 3.672571593610684*^9, 3.672643897041707*^9, 
   3.672644193232544*^9, 3.672644358800034*^9}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#1"}], "&"}], ",", 
     RowBox[{"Symbol", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Efficiency", ",", "\<\"1 - False Positive Fraction\"\>"}], 
     "}"}]}], ",", 
   RowBox[{
   "PlotLabel", 
    "\[Rule]", "\<\"BDT Linear Soft Efficiency-1 - False Positive \
Fraction\"\>"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[0, 0, 1]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 0, 1],
     Editable->False,
     Selectable->False]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.670425340926303*^9, 3.67067764580727*^9, 3.670931215988847*^9, 
   3.670931274632907*^9, 3.6709313599497547`*^9, 3.6709314467118464`*^9, {
   3.6709315328287973`*^9, 3.670931580050337*^9}, 3.670931727461363*^9, 
   3.6709318563644648`*^9, 3.670932003391114*^9, 3.670932044146555*^9, {
   3.67093208221775*^9, 3.6709320931761217`*^9}, 3.67093214006371*^9, 
   3.670932184931422*^9, 3.6709323223186283`*^9, {3.6709324870827847`*^9, 
   3.670932553413377*^9}, 3.670932673104999*^9, 3.670932765579236*^9, {
   3.670933198376206*^9, 3.670933225950282*^9}, {3.670933696560923*^9, 
   3.670933706552006*^9}, 3.670939380251217*^9, 3.670939417877594*^9, 
   3.6709397025370617`*^9, {3.670939907624443*^9, 3.670939922755143*^9}, 
   3.671540978823542*^9, 3.671541967165586*^9, 3.6715420548188553`*^9, 
   3.672570697479616*^9, 3.672571593610684*^9, 3.672643897041707*^9, 
   3.672644193232544*^9, 3.67264435881001*^9}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#1"}], "&"}], ",", 
     RowBox[{"Symbol", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Efficiency", ",", "\<\"1 - False Positive Fraction\"\>"}], 
     "}"}]}], ",", 
   RowBox[{
   "PlotLabel", 
    "\[Rule]", "\<\"BDT Circle Hard Efficiency-1 - False Positive \
Fraction\"\>"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[0, 0, 1]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 0, 1],
     Editable->False,
     Selectable->False]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.670425340926303*^9, 3.67067764580727*^9, 3.670931215988847*^9, 
   3.670931274632907*^9, 3.6709313599497547`*^9, 3.6709314467118464`*^9, {
   3.6709315328287973`*^9, 3.670931580050337*^9}, 3.670931727461363*^9, 
   3.6709318563644648`*^9, 3.670932003391114*^9, 3.670932044146555*^9, {
   3.67093208221775*^9, 3.6709320931761217`*^9}, 3.67093214006371*^9, 
   3.670932184931422*^9, 3.6709323223186283`*^9, {3.6709324870827847`*^9, 
   3.670932553413377*^9}, 3.670932673104999*^9, 3.670932765579236*^9, {
   3.670933198376206*^9, 3.670933225950282*^9}, {3.670933696560923*^9, 
   3.670933706552006*^9}, 3.670939380251217*^9, 3.670939417877594*^9, 
   3.6709397025370617`*^9, {3.670939907624443*^9, 3.670939922755143*^9}, 
   3.671540978823542*^9, 3.671541967165586*^9, 3.6715420548188553`*^9, 
   3.672570697479616*^9, 3.672571593610684*^9, 3.672643897041707*^9, 
   3.672644193232544*^9, 3.67264435881853*^9}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#1"}], "&"}], ",", 
     RowBox[{"Symbol", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Efficiency", ",", "\<\"1 - False Positive Fraction\"\>"}], 
     "}"}]}], ",", 
   RowBox[{
   "PlotLabel", 
    "\[Rule]", "\<\"BDT Circle Soft Efficiency-1 - False Positive \
Fraction\"\>"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[0, 0, 1]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 0, 1],
     Editable->False,
     Selectable->False]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.670425340926303*^9, 3.67067764580727*^9, 3.670931215988847*^9, 
   3.670931274632907*^9, 3.6709313599497547`*^9, 3.6709314467118464`*^9, {
   3.6709315328287973`*^9, 3.670931580050337*^9}, 3.670931727461363*^9, 
   3.6709318563644648`*^9, 3.670932003391114*^9, 3.670932044146555*^9, {
   3.67093208221775*^9, 3.6709320931761217`*^9}, 3.67093214006371*^9, 
   3.670932184931422*^9, 3.6709323223186283`*^9, {3.6709324870827847`*^9, 
   3.670932553413377*^9}, 3.670932673104999*^9, 3.670932765579236*^9, {
   3.670933198376206*^9, 3.670933225950282*^9}, {3.670933696560923*^9, 
   3.670933706552006*^9}, 3.670939380251217*^9, 3.670939417877594*^9, 
   3.6709397025370617`*^9, {3.670939907624443*^9, 3.670939922755143*^9}, 
   3.671540978823542*^9, 3.671541967165586*^9, 3.6715420548188553`*^9, 
   3.672570697479616*^9, 3.672571593610684*^9, 3.672643897041707*^9, 
   3.672644193232544*^9, 3.6726443588277817`*^9}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#1"}], "&"}], ",", 
     RowBox[{"Symbol", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Efficiency", ",", "\<\"1 - False Positive Fraction\"\>"}], 
     "}"}]}], ",", 
   RowBox[{
   "PlotLabel", 
    "\[Rule]", "\<\"BDT Two Circle Hard Efficiency-1 - False Positive \
Fraction\"\>"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[0, 0, 1]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 0, 1],
     Editable->False,
     Selectable->False]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.670425340926303*^9, 3.67067764580727*^9, 3.670931215988847*^9, 
   3.670931274632907*^9, 3.6709313599497547`*^9, 3.6709314467118464`*^9, {
   3.6709315328287973`*^9, 3.670931580050337*^9}, 3.670931727461363*^9, 
   3.6709318563644648`*^9, 3.670932003391114*^9, 3.670932044146555*^9, {
   3.67093208221775*^9, 3.6709320931761217`*^9}, 3.67093214006371*^9, 
   3.670932184931422*^9, 3.6709323223186283`*^9, {3.6709324870827847`*^9, 
   3.670932553413377*^9}, 3.670932673104999*^9, 3.670932765579236*^9, {
   3.670933198376206*^9, 3.670933225950282*^9}, {3.670933696560923*^9, 
   3.670933706552006*^9}, 3.670939380251217*^9, 3.670939417877594*^9, 
   3.6709397025370617`*^9, {3.670939907624443*^9, 3.670939922755143*^9}, 
   3.671540978823542*^9, 3.671541967165586*^9, 3.6715420548188553`*^9, 
   3.672570697479616*^9, 3.672571593610684*^9, 3.672643897041707*^9, 
   3.672644193232544*^9, 3.6726443588358097`*^9}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#1"}], "&"}], ",", 
     RowBox[{"Symbol", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Efficiency", ",", "\<\"1 - False Positive Fraction\"\>"}], 
     "}"}]}], ",", 
   RowBox[{
   "PlotLabel", 
    "\[Rule]", "\<\"BDT Two Circle Soft Efficiency-1 - False Positive \
Fraction\"\>"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[0, 0, 1]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 0, 1],
     Editable->False,
     Selectable->False]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.670425340926303*^9, 3.67067764580727*^9, 3.670931215988847*^9, 
   3.670931274632907*^9, 3.6709313599497547`*^9, 3.6709314467118464`*^9, {
   3.6709315328287973`*^9, 3.670931580050337*^9}, 3.670931727461363*^9, 
   3.6709318563644648`*^9, 3.670932003391114*^9, 3.670932044146555*^9, {
   3.67093208221775*^9, 3.6709320931761217`*^9}, 3.67093214006371*^9, 
   3.670932184931422*^9, 3.6709323223186283`*^9, {3.6709324870827847`*^9, 
   3.670932553413377*^9}, 3.670932673104999*^9, 3.670932765579236*^9, {
   3.670933198376206*^9, 3.670933225950282*^9}, {3.670933696560923*^9, 
   3.670933706552006*^9}, 3.670939380251217*^9, 3.670939417877594*^9, 
   3.6709397025370617`*^9, {3.670939907624443*^9, 3.670939922755143*^9}, 
   3.671540978823542*^9, 3.671541967165586*^9, 3.6715420548188553`*^9, 
   3.672570697479616*^9, 3.672571593610684*^9, 3.672643897041707*^9, 
   3.672644193232544*^9, 3.672644358843617*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Efficiency-1 - False Negative Fraction", "Subsubsection",
 CellChangeTimes->{3.670377076181429*^9}],

Cell[CellGroupData[{

Cell[BoxData[{"BDTLinearHardEFNPlot", "\[IndentingNewLine]", 
 RowBox[{"BDTLinearSoftEFNPlot", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", "BDTCircleHardEFNPlot", "\
\[IndentingNewLine]", 
 RowBox[{"BDTCircleSoftEFNPlot", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", "BDTTwoCircleHardEFNPlot", \
"\[IndentingNewLine]", "BDTTwoCircleSoftEFNPlot"}], "Input",
 CellChangeTimes->{{3.670377082844585*^9, 3.670377092747245*^9}, {
  3.672570716328034*^9, 3.6725707395824213`*^9}}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#1"}], "&"}], ",", 
     RowBox[{"Symbol", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Efficiency", ",", "\<\"1 - False Negative Fraction\"\>"}], 
     "}"}]}], ",", 
   RowBox[{
   "PlotLabel", 
    "\[Rule]", "\<\"BDT Linear Hard Efficiency-1 - False Negative \
Fraction\"\>"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[0, 0, 1]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 0, 1],
     Editable->False,
     Selectable->False]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.6703770946493187`*^9, 3.670677645857649*^9, 3.670931216037528*^9, 
   3.6709312746809397`*^9, 3.670931359997336*^9, 3.670931446761498*^9, {
   3.670931558966687*^9, 3.670931580101285*^9}, 3.6709317275114813`*^9, 
   3.670931856431612*^9, 3.67093200344059*^9, 3.670932044195228*^9, {
   3.670932082267309*^9, 3.670932093226472*^9}, 3.670932140113617*^9, 
   3.670932184982387*^9, 3.6709323223687143`*^9, {3.67093248713278*^9, 
   3.670932553481246*^9}, 3.670932673189742*^9, 3.670932765645299*^9, {
   3.670933198459725*^9, 3.670933226033763*^9}, {3.670933696654254*^9, 
   3.6709337066358023`*^9}, 3.670939380317636*^9, 3.670939417960807*^9, 
   3.67093970262123*^9, {3.670939907707646*^9, 3.670939922837356*^9}, 
   3.671540978950161*^9, 3.671541967233843*^9, 3.67154205487111*^9, 
   3.672570739954933*^9, 3.672571593695406*^9, 3.672643897124035*^9, 
   3.672644193293116*^9, 3.672644358869299*^9}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#1"}], "&"}], ",", 
     RowBox[{"Symbol", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Efficiency", ",", "\<\"1 - False Negative Fraction\"\>"}], 
     "}"}]}], ",", 
   RowBox[{
   "PlotLabel", 
    "\[Rule]", "\<\"BDT Linear Soft fficiency-1 - False Negative \
Fraction\"\>"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[0, 0, 1]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 0, 1],
     Editable->False,
     Selectable->False]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.6703770946493187`*^9, 3.670677645857649*^9, 3.670931216037528*^9, 
   3.6709312746809397`*^9, 3.670931359997336*^9, 3.670931446761498*^9, {
   3.670931558966687*^9, 3.670931580101285*^9}, 3.6709317275114813`*^9, 
   3.670931856431612*^9, 3.67093200344059*^9, 3.670932044195228*^9, {
   3.670932082267309*^9, 3.670932093226472*^9}, 3.670932140113617*^9, 
   3.670932184982387*^9, 3.6709323223687143`*^9, {3.67093248713278*^9, 
   3.670932553481246*^9}, 3.670932673189742*^9, 3.670932765645299*^9, {
   3.670933198459725*^9, 3.670933226033763*^9}, {3.670933696654254*^9, 
   3.6709337066358023`*^9}, 3.670939380317636*^9, 3.670939417960807*^9, 
   3.67093970262123*^9, {3.670939907707646*^9, 3.670939922837356*^9}, 
   3.671540978950161*^9, 3.671541967233843*^9, 3.67154205487111*^9, 
   3.672570739954933*^9, 3.672571593695406*^9, 3.672643897124035*^9, 
   3.672644193293116*^9, 3.6726443588793592`*^9}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#1"}], "&"}], ",", 
     RowBox[{"Symbol", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Efficiency", ",", "\<\"1 - False Negative Fraction\"\>"}], 
     "}"}]}], ",", 
   RowBox[{
   "PlotLabel", 
    "\[Rule]", "\<\"BDT Circle Hard Efficiency-1 - False Negative \
Fraction\"\>"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[0, 0, 1]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 0, 1],
     Editable->False,
     Selectable->False]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.6703770946493187`*^9, 3.670677645857649*^9, 3.670931216037528*^9, 
   3.6709312746809397`*^9, 3.670931359997336*^9, 3.670931446761498*^9, {
   3.670931558966687*^9, 3.670931580101285*^9}, 3.6709317275114813`*^9, 
   3.670931856431612*^9, 3.67093200344059*^9, 3.670932044195228*^9, {
   3.670932082267309*^9, 3.670932093226472*^9}, 3.670932140113617*^9, 
   3.670932184982387*^9, 3.6709323223687143`*^9, {3.67093248713278*^9, 
   3.670932553481246*^9}, 3.670932673189742*^9, 3.670932765645299*^9, {
   3.670933198459725*^9, 3.670933226033763*^9}, {3.670933696654254*^9, 
   3.6709337066358023`*^9}, 3.670939380317636*^9, 3.670939417960807*^9, 
   3.67093970262123*^9, {3.670939907707646*^9, 3.670939922837356*^9}, 
   3.671540978950161*^9, 3.671541967233843*^9, 3.67154205487111*^9, 
   3.672570739954933*^9, 3.672571593695406*^9, 3.672643897124035*^9, 
   3.672644193293116*^9, 3.6726443588875504`*^9}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#1"}], "&"}], ",", 
     RowBox[{"Symbol", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Efficiency", ",", "\<\"1 - False Negative Fraction\"\>"}], 
     "}"}]}], ",", 
   RowBox[{
   "PlotLabel", 
    "\[Rule]", "\<\"BDT Circle Soft Efficiency-1 - False Negative \
Fraction\"\>"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[0, 0, 1]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 0, 1],
     Editable->False,
     Selectable->False]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.6703770946493187`*^9, 3.670677645857649*^9, 3.670931216037528*^9, 
   3.6709312746809397`*^9, 3.670931359997336*^9, 3.670931446761498*^9, {
   3.670931558966687*^9, 3.670931580101285*^9}, 3.6709317275114813`*^9, 
   3.670931856431612*^9, 3.67093200344059*^9, 3.670932044195228*^9, {
   3.670932082267309*^9, 3.670932093226472*^9}, 3.670932140113617*^9, 
   3.670932184982387*^9, 3.6709323223687143`*^9, {3.67093248713278*^9, 
   3.670932553481246*^9}, 3.670932673189742*^9, 3.670932765645299*^9, {
   3.670933198459725*^9, 3.670933226033763*^9}, {3.670933696654254*^9, 
   3.6709337066358023`*^9}, 3.670939380317636*^9, 3.670939417960807*^9, 
   3.67093970262123*^9, {3.670939907707646*^9, 3.670939922837356*^9}, 
   3.671540978950161*^9, 3.671541967233843*^9, 3.67154205487111*^9, 
   3.672570739954933*^9, 3.672571593695406*^9, 3.672643897124035*^9, 
   3.672644193293116*^9, 3.672644358895956*^9}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#1"}], "&"}], ",", 
     RowBox[{"Symbol", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Efficiency", ",", "\<\"1 - False Negative Fraction\"\>"}], 
     "}"}]}], ",", 
   RowBox[{
   "PlotLabel", 
    "\[Rule]", "\<\"BDT Two Circle Hard Efficiency-1 - False Negative \
Fraction\"\>"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[0, 0, 1]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 0, 1],
     Editable->False,
     Selectable->False]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.6703770946493187`*^9, 3.670677645857649*^9, 3.670931216037528*^9, 
   3.6709312746809397`*^9, 3.670931359997336*^9, 3.670931446761498*^9, {
   3.670931558966687*^9, 3.670931580101285*^9}, 3.6709317275114813`*^9, 
   3.670931856431612*^9, 3.67093200344059*^9, 3.670932044195228*^9, {
   3.670932082267309*^9, 3.670932093226472*^9}, 3.670932140113617*^9, 
   3.670932184982387*^9, 3.6709323223687143`*^9, {3.67093248713278*^9, 
   3.670932553481246*^9}, 3.670932673189742*^9, 3.670932765645299*^9, {
   3.670933198459725*^9, 3.670933226033763*^9}, {3.670933696654254*^9, 
   3.6709337066358023`*^9}, 3.670939380317636*^9, 3.670939417960807*^9, 
   3.67093970262123*^9, {3.670939907707646*^9, 3.670939922837356*^9}, 
   3.671540978950161*^9, 3.671541967233843*^9, 3.67154205487111*^9, 
   3.672570739954933*^9, 3.672571593695406*^9, 3.672643897124035*^9, 
   3.672644193293116*^9, 3.6726443589036913`*^9}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#1"}], "&"}], ",", 
     RowBox[{"Symbol", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Efficiency", ",", "\<\"1 - False Negative Fraction\"\>"}], 
     "}"}]}], ",", 
   RowBox[{
   "PlotLabel", 
    "\[Rule]", "\<\"BDT Two Circle Soft Efficiency-1 - False Negative \
Fraction\"\>"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[0, 0, 1]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 0, 1],
     Editable->False,
     Selectable->False]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.6703770946493187`*^9, 3.670677645857649*^9, 3.670931216037528*^9, 
   3.6709312746809397`*^9, 3.670931359997336*^9, 3.670931446761498*^9, {
   3.670931558966687*^9, 3.670931580101285*^9}, 3.6709317275114813`*^9, 
   3.670931856431612*^9, 3.67093200344059*^9, 3.670932044195228*^9, {
   3.670932082267309*^9, 3.670932093226472*^9}, 3.670932140113617*^9, 
   3.670932184982387*^9, 3.6709323223687143`*^9, {3.67093248713278*^9, 
   3.670932553481246*^9}, 3.670932673189742*^9, 3.670932765645299*^9, {
   3.670933198459725*^9, 3.670933226033763*^9}, {3.670933696654254*^9, 
   3.6709337066358023`*^9}, 3.670939380317636*^9, 3.670939417960807*^9, 
   3.67093970262123*^9, {3.670939907707646*^9, 3.670939922837356*^9}, 
   3.671540978950161*^9, 3.671541967233843*^9, 3.67154205487111*^9, 
   3.672570739954933*^9, 3.672571593695406*^9, 3.672643897124035*^9, 
   3.672644193293116*^9, 3.672644358910597*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["False Positive Fraction-1 - False Negative Fraction", "Subsubsection",
 CellChangeTimes->{{3.6704253505943727`*^9, 3.670425357655838*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{"BDTLinearHardFPFNPlot", "\[IndentingNewLine]", 
 RowBox[{"BDTLinearSoftFPFNPlot", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", "BDTCircleHardFPFNPlot", "\
\[IndentingNewLine]", 
 RowBox[{"BDTCircleSoftFPFNPlot", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", "BDTTwoCircleHardFPFNPlot", \
"\[IndentingNewLine]", "BDTTwoCircleSoftFPFNPlot"}], "Input",
 CellChangeTimes->{{3.670425370281191*^9, 3.670425378665926*^9}, {
  3.672570815018373*^9, 3.6725708432416573`*^9}}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#1"}], "&"}], ",", 
     RowBox[{"Symbol", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"False Positive Fraction\"\>", 
      ",", "\<\"1 - False Negative Fraction\"\>"}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", 
    "\[Rule]", "\<\"BDT Linear Hard False Positive Fraction-1 - False \
Negative Fraction\"\>"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[0, 0, 1]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 0, 1],
     Editable->False,
     Selectable->False]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.670425378932337*^9, 3.6706776459244223`*^9, 3.6709312160722837`*^9, 
   3.670931274716482*^9, 3.670931360048335*^9, 3.670931446821073*^9, {
   3.670931559017171*^9, 3.670931580150552*^9}, 3.670931727561057*^9, 
   3.670931856503257*^9, 3.670932003507102*^9, 3.670932044246786*^9, 
   3.6709320823178883`*^9, 3.6709321401705093`*^9, 3.670932185049055*^9, 
   3.6709323224182873`*^9, {3.670932487181982*^9, 3.670932553531439*^9}, 
   3.670932673272373*^9, 3.670932765712243*^9, {3.6709331985278063`*^9, 
   3.670933226117282*^9}, {3.670933696744425*^9, 3.670933706718979*^9}, 
   3.6709393805331182`*^9, 3.670939418044859*^9, 3.6709397027212553`*^9, {
   3.670939907800398*^9, 3.670939922919718*^9}, 3.671540979687134*^9, 
   3.671541967315929*^9, 3.671542054935934*^9, 3.672571593777364*^9, 
   3.6726438971929502`*^9, 3.6726441933456373`*^9, 3.6726443589349203`*^9}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#1"}], "&"}], ",", 
     RowBox[{"Symbol", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"False Positive Fraction\"\>", 
      ",", "\<\"1 - False Negative Fraction\"\>"}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", 
    "\[Rule]", "\<\"BDT Linear Soft False Positive Fraction-1 - False \
Negative Fraction\"\>"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[0, 0, 1]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 0, 1],
     Editable->False,
     Selectable->False]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.670425378932337*^9, 3.6706776459244223`*^9, 3.6709312160722837`*^9, 
   3.670931274716482*^9, 3.670931360048335*^9, 3.670931446821073*^9, {
   3.670931559017171*^9, 3.670931580150552*^9}, 3.670931727561057*^9, 
   3.670931856503257*^9, 3.670932003507102*^9, 3.670932044246786*^9, 
   3.6709320823178883`*^9, 3.6709321401705093`*^9, 3.670932185049055*^9, 
   3.6709323224182873`*^9, {3.670932487181982*^9, 3.670932553531439*^9}, 
   3.670932673272373*^9, 3.670932765712243*^9, {3.6709331985278063`*^9, 
   3.670933226117282*^9}, {3.670933696744425*^9, 3.670933706718979*^9}, 
   3.6709393805331182`*^9, 3.670939418044859*^9, 3.6709397027212553`*^9, {
   3.670939907800398*^9, 3.670939922919718*^9}, 3.671540979687134*^9, 
   3.671541967315929*^9, 3.671542054935934*^9, 3.672571593777364*^9, 
   3.6726438971929502`*^9, 3.6726441933456373`*^9, 3.672644358945566*^9}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#1"}], "&"}], ",", 
     RowBox[{"Symbol", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"False Positive Fraction\"\>", 
      ",", "\<\"1 - False Negative Fraction\"\>"}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", 
    "\[Rule]", "\<\"BDT Circle Hard False Positive Fraction-1 - False \
Negative Fraction\"\>"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[0, 0, 1]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 0, 1],
     Editable->False,
     Selectable->False]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.670425378932337*^9, 3.6706776459244223`*^9, 3.6709312160722837`*^9, 
   3.670931274716482*^9, 3.670931360048335*^9, 3.670931446821073*^9, {
   3.670931559017171*^9, 3.670931580150552*^9}, 3.670931727561057*^9, 
   3.670931856503257*^9, 3.670932003507102*^9, 3.670932044246786*^9, 
   3.6709320823178883`*^9, 3.6709321401705093`*^9, 3.670932185049055*^9, 
   3.6709323224182873`*^9, {3.670932487181982*^9, 3.670932553531439*^9}, 
   3.670932673272373*^9, 3.670932765712243*^9, {3.6709331985278063`*^9, 
   3.670933226117282*^9}, {3.670933696744425*^9, 3.670933706718979*^9}, 
   3.6709393805331182`*^9, 3.670939418044859*^9, 3.6709397027212553`*^9, {
   3.670939907800398*^9, 3.670939922919718*^9}, 3.671540979687134*^9, 
   3.671541967315929*^9, 3.671542054935934*^9, 3.672571593777364*^9, 
   3.6726438971929502`*^9, 3.6726441933456373`*^9, 3.672644358952812*^9}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#1"}], "&"}], ",", 
     RowBox[{"Symbol", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"False Positive Fraction\"\>", 
      ",", "\<\"1 - False Negative Fraction\"\>"}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", 
    "\[Rule]", "\<\"BDT Circle Soft False Positive Fraction-1 - False \
Negative Fraction\"\>"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[0, 0, 1]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 0, 1],
     Editable->False,
     Selectable->False]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.670425378932337*^9, 3.6706776459244223`*^9, 3.6709312160722837`*^9, 
   3.670931274716482*^9, 3.670931360048335*^9, 3.670931446821073*^9, {
   3.670931559017171*^9, 3.670931580150552*^9}, 3.670931727561057*^9, 
   3.670931856503257*^9, 3.670932003507102*^9, 3.670932044246786*^9, 
   3.6709320823178883`*^9, 3.6709321401705093`*^9, 3.670932185049055*^9, 
   3.6709323224182873`*^9, {3.670932487181982*^9, 3.670932553531439*^9}, 
   3.670932673272373*^9, 3.670932765712243*^9, {3.6709331985278063`*^9, 
   3.670933226117282*^9}, {3.670933696744425*^9, 3.670933706718979*^9}, 
   3.6709393805331182`*^9, 3.670939418044859*^9, 3.6709397027212553`*^9, {
   3.670939907800398*^9, 3.670939922919718*^9}, 3.671540979687134*^9, 
   3.671541967315929*^9, 3.671542054935934*^9, 3.672571593777364*^9, 
   3.6726438971929502`*^9, 3.6726441933456373`*^9, 3.672644358961335*^9}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#1"}], "&"}], ",", 
     RowBox[{"Symbol", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"False Positive Fraction\"\>", 
      ",", "\<\"1 - False Negative Fraction\"\>"}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", 
    "\[Rule]", "\<\"BDT Two Circle Hard False Positive Fraction-1 - False \
Negative Fraction\"\>"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[0, 0, 1]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 0, 1],
     Editable->False,
     Selectable->False]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.670425378932337*^9, 3.6706776459244223`*^9, 3.6709312160722837`*^9, 
   3.670931274716482*^9, 3.670931360048335*^9, 3.670931446821073*^9, {
   3.670931559017171*^9, 3.670931580150552*^9}, 3.670931727561057*^9, 
   3.670931856503257*^9, 3.670932003507102*^9, 3.670932044246786*^9, 
   3.6709320823178883`*^9, 3.6709321401705093`*^9, 3.670932185049055*^9, 
   3.6709323224182873`*^9, {3.670932487181982*^9, 3.670932553531439*^9}, 
   3.670932673272373*^9, 3.670932765712243*^9, {3.6709331985278063`*^9, 
   3.670933226117282*^9}, {3.670933696744425*^9, 3.670933706718979*^9}, 
   3.6709393805331182`*^9, 3.670939418044859*^9, 3.6709397027212553`*^9, {
   3.670939907800398*^9, 3.670939922919718*^9}, 3.671540979687134*^9, 
   3.671541967315929*^9, 3.671542054935934*^9, 3.672571593777364*^9, 
   3.6726438971929502`*^9, 3.6726441933456373`*^9, 3.6726443589685926`*^9}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "-", "#1"}], "&"}], ",", 
     RowBox[{"Symbol", "[", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"False Positive Fraction\"\>", 
      ",", "\<\"1 - False Negative Fraction\"\>"}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", 
    "\[Rule]", "\<\"BDT Two Circle Soft False Positive Fraction-1 - False \
Negative Fraction\"\>"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       RowBox[{
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None], "\[InvisibleSpace]"}],
       "RGBColor[0, 0, 1]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 0, 1],
     Editable->False,
     Selectable->False]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.670425378932337*^9, 3.6706776459244223`*^9, 3.6709312160722837`*^9, 
   3.670931274716482*^9, 3.670931360048335*^9, 3.670931446821073*^9, {
   3.670931559017171*^9, 3.670931580150552*^9}, 3.670931727561057*^9, 
   3.670931856503257*^9, 3.670932003507102*^9, 3.670932044246786*^9, 
   3.6709320823178883`*^9, 3.6709321401705093`*^9, 3.670932185049055*^9, 
   3.6709323224182873`*^9, {3.670932487181982*^9, 3.670932553531439*^9}, 
   3.670932673272373*^9, 3.670932765712243*^9, {3.6709331985278063`*^9, 
   3.670933226117282*^9}, {3.670933696744425*^9, 3.670933706718979*^9}, 
   3.6709393805331182`*^9, 3.670939418044859*^9, 3.6709397027212553`*^9, {
   3.670939907800398*^9, 3.670939922919718*^9}, 3.671540979687134*^9, 
   3.671541967315929*^9, 3.671542054935934*^9, 3.672571593777364*^9, 
   3.6726438971929502`*^9, 3.6726441933456373`*^9, 3.672644358978253*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Merged", "Subsection",
 CellChangeTimes->{{3.670933299869636*^9, 3.670933300564714*^9}}],

Cell[CellGroupData[{

Cell["False Positive Fraction- 1 - False Negative Fraction", "Subsubsection",
 CellChangeTimes->{{3.670933303716662*^9, 3.670933321011763*^9}, {
  3.670933380547598*^9, 3.670933398698413*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Show", "[", 
  RowBox[{
  "SVMLinearHardFPFNPlot", ",", "BDSLinearHardFPFNPlot", ",", 
   "BDTLinearHardFPFNPlot", ",", 
   RowBox[{"PlotRange", "\[Rule]", " ", "All"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{
   "SVMLinearSoftFPFNPlot", ",", "BDSLinearSoftFPFNPlot", ",", 
    "BDTLinearSoftFPFNPlot", ",", 
    RowBox[{"PlotRange", "\[Rule]", " ", "All"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
  "SVMCircleHardFPFNPlot", ",", "BDSCircleHardFPFNPlot", ",", 
   "BDTCircleHardFPFNPlot", ",", 
   RowBox[{"PlotRange", "\[Rule]", " ", "All"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{
   "SVMCircleSoftFPFNPlot", ",", "BDSCircleSoftFPFNPlot", ",", 
    "BDTCircleSoftFPFNPlot", ",", 
    RowBox[{"PlotRange", "\[Rule]", " ", "All"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
  "SVMTwoCircleHardFPFNPlot", ",", "BDSTwoCircleHardFPFNPlot", ",", 
   "BDTTwoCircleHardFPFNPlot", ",", 
   RowBox[{"PlotRange", "\[Rule]", " ", "All"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
  "SVMTwoCircleSoftFPFNPlot", ",", "BDSTwoCircleSoftFPFNPlot", ",", 
   "BDTTwoCircleSoftFPFNPlot", ",", 
   RowBox[{"PlotRange", "\[Rule]", " ", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.670933410519279*^9, 3.670933430990078*^9}, {
  3.670933472174418*^9, 3.670933476947925*^9}, {3.670933611097383*^9, 
  3.670933627245627*^9}, {3.670933663300658*^9, 3.670933703657701*^9}, {
  3.672570996350429*^9, 3.672571045329125*^9}, {3.6726383053614883`*^9, 
  3.672638361252297*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Show", "::", "gcomb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Could not combine the graphics objects in \
\[NoBreak]\\!\\(Show[\\(\\(\\*GraphicsBox[List[List[], List[List[List[], \
List[Hue[0.67`, 0.6`, 0.6`], Directive[PointSize[Skeleton[1]], \
AbsoluteThickness[Skeleton[1]], RGBColor[Skeleton[3]]], \
PointBox[List[Skeleton[231]]]], List[]]], List[]], List[Rule[DisplayFunction, \
Identity], Rule[PlotRangePadding, List[List[Scaled[0.02`], Scaled[0.02`]], \
List[Scaled[0.05`], Scaled[0.05`]]]], Rule[AxesOrigin, List[0, 0.9811`]], \
Rule[PlotRange, List[List[0, 1.`], List[0.982`, 1.`]]], Rule[DisplayFunction, \
Identity], Rule[AspectRatio, NCache[Power[GoldenRatio, -1], \
0.6180339887498948`]], Rule[Axes, List[True, True]], Rule[AxesLabel, \
List[FormBox[\\\"\\\\\\\"False Positive Fraction\\\\\\\"\\\", \
TraditionalForm], FormBox[\\\"\\\\\\\"1 - False Negative \
Fraction\\\\\\\"\\\", TraditionalForm]]], Rule[AxesOrigin, List[0, 0.9811`]], \
RuleDelayed[DisplayFunction, Identity], Rule[Frame, List[List[False, False], \
List[False, False]]], Rule[FrameLabel, List[List[None, None], List[None, \
None]]], Rule[FrameTicks, List[List[Automatic, Automatic], List[Automatic, \
Automatic]]], Rule[GridLines, List[None, None]], Rule[GridLinesStyle, \
Directive[GrayLevel[0.5`, 0.4`]]], Rule[Method, List[]], Rule[PlotLabel, \
FormBox[\\\"\\\\\\\"SVM Linear Hard False Positive Fraction-1 - False \
Negative Fraction\\\\\\\"\\\", TraditionalForm]], Rule[PlotRange, \
List[List[0, 1.`], List[0.982`, 1.`]]], Rule[PlotRangeClipping, True], \
Rule[PlotRangePadding, List[List[Scaled[0.02`], Scaled[0.02`]], \
List[Scaled[0.05`], Scaled[0.05`]]]], Rule[Ticks, List[Automatic, \
Automatic]]]], \\(\\(ListPlot[\\(\\(\\(\\(MapAt[\\(\\(\\(\\(\\(\\(1 - \
#1\\)\\) &\\)\\), \\(\\(Symbol[]\\)\\), \\(\\({All, 2}\\)\\)\\)\\)]\\)\\), \
\\(\\(AxesLabel \[Rule] \\(\\({\\\"False Positive Fraction\\\", \\\"1 - False \
Negative Fraction\\\"}\\)\\)\\)\\), \\(\\(PlotLabel \[Rule] \\\"BDS Linear \
Hard False Positive Fraction-1 - False Negative Fraction\\\"\\)\\), \
\\(\\(PlotStyle \[Rule] \
\\*InterpretationBox[ButtonBox[TooltipBox[\\(\\*GraphicsBox[List[List[\
GrayLevel[0], RectangleBox[List[0, 0]]], List[GrayLevel[0], \
RectangleBox[List[1, -1]]], List[RGBColor[1, 0, 0], RectangleBox[List[0, -1], \
List[2, 1]]]], Rule[AspectRatio, 1], Rule[Frame, True], Rule[FrameStyle, \
RGBColor[0.6666666666666666`, 0.`, 0.`]], Rule[FrameTicks, None], \
Rule[PlotRangePadding, None], Rule[ImageSize, Dynamic[List[Automatic, \
Times[1.35`, CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]] \[InvisibleSpace]\\), \
\\\"RGBColor[1, 0, 0]\\\"], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[BaselinePosition, Baseline], Rule[DefaultBaseStyle, List[]], \
RuleDelayed[ButtonFunction, With[List[Set[Typeset`box$, EvaluationBox[]]], \
If[Not[AbsoluteCurrentValue[\\\"Deployed\\\"]], \
CompoundExpression[SelectionMove[Typeset`box$, All, Expression], \
Set[FrontEnd`Private`$ColorSelectorInitialAlpha, 1], \
Set[FrontEnd`Private`$ColorSelectorInitialColor, RGBColor[1, 0, 0]], \
Set[FrontEnd`Private`$ColorSelectorUseMakeBoxes, True], \
MathLink`CallFrontEnd[FrontEnd`AttachCell[Typeset`box$, \
FrontEndResource[\\\"RGBColorValueSelector\\\"], List[0, List[Left, Bottom]], \
List[Left, Top], Rule[\\\"ClosingActions\\\", \
List[\\\"SelectionDeparture\\\", \\\"ParentChanged\\\", \
\\\"EvaluatorQuit\\\"]]]]]]]], Rule[BaseStyle, Inherited], Rule[Evaluator, \
Automatic], Rule[Method, \\\"Preemptive\\\"]], RGBColor[1, 0, 0], \
Rule[Editable, False], Rule[Selectable, False]]\\)\\)\\)\\)]\\)\\), \
\\(\\(ListPlot[\\(\\(\\(\\(MapAt[\\(\\(\\(\\(\\(\\(1 - #1\\)\\) &\\)\\), \
\\(\\(Symbol[]\\)\\), \\(\\({All, 2}\\)\\)\\)\\)]\\)\\), \\(\\(AxesLabel \
\[Rule] \\(\\({\\\"False Positive Fraction\\\", \\\"1 - False Negative \
Fraction\\\"}\\)\\)\\)\\), \\(\\(PlotLabel \[Rule] \\\"BDT Linear Hard False \
Positive Fraction-1 - False Negative Fraction\\\"\\)\\), \\(\\(PlotStyle \
\[Rule] \\*InterpretationBox[ButtonBox[TooltipBox[\\(\\*GraphicsBox[List[List[\
GrayLevel[0], RectangleBox[List[0, 0]]], List[GrayLevel[0], \
RectangleBox[List[1, -1]]], List[RGBColor[0, 0, 1], RectangleBox[List[0, -1], \
List[2, 1]]]], Rule[AspectRatio, 1], Rule[Frame, True], Rule[FrameStyle, \
RGBColor[0.`, 0.`, 0.6666666666666666`]], Rule[FrameTicks, None], \
Rule[PlotRangePadding, None], Rule[ImageSize, Dynamic[List[Automatic, \
Times[1.35`, CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]] \[InvisibleSpace]\\), \
\\\"RGBColor[0, 0, 1]\\\"], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[BaselinePosition, Baseline], Rule[DefaultBaseStyle, List[]], \
RuleDelayed[ButtonFunction, With[List[Set[Typeset`box$, EvaluationBox[]]], \
If[Not[AbsoluteCurrentValue[\\\"Deployed\\\"]], \
CompoundExpression[SelectionMove[Typeset`box$, All, Expression], \
Set[FrontEnd`Private`$ColorSelectorInitialAlpha, 1], \
Set[FrontEnd`Private`$ColorSelectorInitialColor, RGBColor[0, 0, 1]], \
Set[FrontEnd`Private`$ColorSelectorUseMakeBoxes, True], \
MathLink`CallFrontEnd[FrontEnd`AttachCell[Typeset`box$, \
FrontEndResource[\\\"RGBColorValueSelector\\\"], List[0, List[Left, Bottom]], \
List[Left, Top], Rule[\\\"ClosingActions\\\", \
List[\\\"SelectionDeparture\\\", \\\"ParentChanged\\\", \
\\\"EvaluatorQuit\\\"]]]]]]]], Rule[BaseStyle, Inherited], Rule[Evaluator, \
Automatic], Rule[Method, \\\"Preemptive\\\"]], RGBColor[0, 0, 1], \
Rule[Editable, False], Rule[Selectable, False]]\\)\\)\\)\\)]\\)\\), \
\\(\\(PlotRange \[Rule] All\\)\\)\\)\\)]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Show/gcomb\\\", \
ButtonNote -> \\\"Show::gcomb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643897279002*^9, 3.672644193450925*^9, 
  3.672644359024489*^9}],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   GraphicsBox[{{}, {{}, 
      {RGBColor[0, 
        NCache[
         Rational[2, 3], 0.6666666666666666], 0], PointSize[
       0.01388888888888889], AbsoluteThickness[1.6], PointBox[CompressedData["

1:eJxTTMoPSmViYGB4DsQgGgI+2I/So/QoTXuaSbtd7Oa55wPuDmLpX3VZe0om
r4DzlxTYcl1ffAHOB/EKbF8NuDthdLXIOveHVS32LGF8upvmvrf/s/LjJd+k
CWj8BfZrZKJSrO+/t18F4grsgOvvznn+G6gEzrc3jdvlyfMIzjcGg9dwfhoY
vEOL3/dwPsRa3HyIewrsQa7x730PDe8KuHtJ5RPyv7T+XRW2xqVwd75UM+RY
I7ML7q6gHXKtrwNPwN2nfPsn0IYrGO5FNT8Bw/24+Oj+pZRPyD7i3JNgv6Eo
Y+LbmoHnM0ABW+NU5+4cBB9dnhAf5j9q89HjGzsfPb5wq8duPvXSByH3EOc/
wuaj5gfi+ej5FyLfAOdTGv6Eygt0+6jDJ+Q+TD66fnLDjzz/JmCENy4+ce5N
INp+Ut2Py32E0jNp7ic/fHG5F728I5Q/B8q92MtnzPQ32NyL3z2Dx70AIaww
wg==
        "]]}, {}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"False Positive Fraction\"", TraditionalForm], 
      FormBox["\"1 - False Negative Fraction\"", TraditionalForm]},
    AxesOrigin->{0, 0.9811},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{},
    PlotLabel->FormBox[
     "\"SVM Linear Hard False Positive Fraction-1 - False Negative \
Fraction\"", TraditionalForm],
    PlotRange->{{0, 1.}, {0.982, 1.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"MapAt", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"1", "-", "#1"}], "&"}], ",", 
       RowBox[{"Symbol", "[", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"All", ",", "2"}], "}"}]}], "]"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\<\"False Positive Fraction\"\>", 
        ",", "\<\"1 - False Negative Fraction\"\>"}], "}"}]}], ",", 
     RowBox[{
     "PlotLabel", 
      "\[Rule]", "\<\"BDS Linear Hard False Positive Fraction-1 - False \
Negative Fraction\"\>"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False]}]}], "]"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"MapAt", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"1", "-", "#1"}], "&"}], ",", 
       RowBox[{"Symbol", "[", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"All", ",", "2"}], "}"}]}], "]"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\<\"False Positive Fraction\"\>", 
        ",", "\<\"1 - False Negative Fraction\"\>"}], "}"}]}], ",", 
     RowBox[{
     "PlotLabel", 
      "\[Rule]", "\<\"BDT Linear Hard False Positive Fraction-1 - False \
Negative Fraction\"\>"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0., 0., 0.6666666666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False]}]}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.6709334313301563`*^9, 3.670933477381407*^9, {3.670933696831788*^9, 
   3.670933706803569*^9}, 3.670939380668584*^9, 3.670939418176195*^9, 
   3.6709397028217783`*^9, {3.6709399078912163`*^9, 3.670939923003325*^9}, 
   3.671540979903349*^9, 3.671541967400207*^9, 3.671542055003422*^9, 
   3.672571045935026*^9, 3.672571593878253*^9, 3.672643897296555*^9, 
   3.672644193468896*^9, 3.672644359043591*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Show", "::", "gcomb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Could not combine the graphics objects in \
\[NoBreak]\\!\\(Show[\\(\\(\\*GraphicsBox[List[List[], List[List[List[], \
List[Hue[0.67`, 0.6`, 0.6`], Directive[PointSize[Skeleton[1]], \
AbsoluteThickness[Skeleton[1]], RGBColor[Skeleton[3]]], \
PointBox[List[Skeleton[231]]]], List[]]], List[]], List[Rule[DisplayFunction, \
Identity], Rule[PlotRangePadding, List[List[Scaled[0.02`], Scaled[0.02`]], \
List[Scaled[0.02`], Scaled[0.05`]]]], Rule[AxesOrigin, List[0, 0]], \
Rule[PlotRange, List[List[0, 0.0709812108559`], List[0, 0.9692898272553`]]], \
Rule[DisplayFunction, Identity], Rule[AspectRatio, NCache[Power[GoldenRatio, \
-1], 0.6180339887498948`]], Rule[Axes, List[True, True]], Rule[AxesLabel, \
List[FormBox[\\\"\\\\\\\"False Positive Fraction\\\\\\\"\\\", \
TraditionalForm], FormBox[\\\"\\\\\\\"1 - False Negative \
Fraction\\\\\\\"\\\", TraditionalForm]]], Rule[AxesOrigin, List[0, 0]], \
RuleDelayed[DisplayFunction, Identity], Rule[Frame, List[List[False, False], \
List[False, False]]], Rule[FrameLabel, List[List[None, None], List[None, \
None]]], Rule[FrameTicks, List[List[Automatic, Automatic], List[Automatic, \
Automatic]]], Rule[GridLines, List[None, None]], Rule[GridLinesStyle, \
Directive[GrayLevel[0.5`, 0.4`]]], Rule[Method, List[]], Rule[PlotLabel, \
FormBox[\\\"\\\\\\\"SVM Linear Soft False Positive Fraction-1 - False \
Negative Fraction\\\\\\\"\\\", TraditionalForm]], Rule[PlotRange, \
List[List[0, 0.0709812108559`], List[0, 0.9692898272553`]]], \
Rule[PlotRangeClipping, True], Rule[PlotRangePadding, \
List[List[Scaled[0.02`], Scaled[0.02`]], List[Scaled[0.02`], \
Scaled[0.05`]]]], Rule[Ticks, List[Automatic, Automatic]]]], \
\\(\\(ListPlot[\\(\\(\\(\\(MapAt[\\(\\(\\(\\(\\(\\(1 - #1\\)\\) &\\)\\), \
\\(\\(Symbol[]\\)\\), \\(\\({All, 2}\\)\\)\\)\\)]\\)\\), \\(\\(AxesLabel \
\[Rule] \\(\\({\\\"False Positive Fraction\\\", \\\"1 - False Negative \
Fraction\\\"}\\)\\)\\)\\), \\(\\(PlotLabel \[Rule] \\\"BDS Linear Soft False \
Positive Fraction-1 - False Negative Fraction\\\"\\)\\), \\(\\(PlotStyle \
\[Rule] \\*InterpretationBox[ButtonBox[TooltipBox[\\(\\*GraphicsBox[List[List[\
GrayLevel[0], RectangleBox[List[0, 0]]], List[GrayLevel[0], \
RectangleBox[List[1, -1]]], List[RGBColor[1, 0, 0], RectangleBox[List[0, -1], \
List[2, 1]]]], Rule[AspectRatio, 1], Rule[Frame, True], Rule[FrameStyle, \
RGBColor[0.6666666666666666`, 0.`, 0.`]], Rule[FrameTicks, None], \
Rule[PlotRangePadding, None], Rule[ImageSize, Dynamic[List[Automatic, \
Times[1.35`, CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]] \[InvisibleSpace]\\), \
\\\"RGBColor[1, 0, 0]\\\"], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[BaselinePosition, Baseline], Rule[DefaultBaseStyle, List[]], \
RuleDelayed[ButtonFunction, With[List[Set[Typeset`box$, EvaluationBox[]]], \
If[Not[AbsoluteCurrentValue[\\\"Deployed\\\"]], \
CompoundExpression[SelectionMove[Typeset`box$, All, Expression], \
Set[FrontEnd`Private`$ColorSelectorInitialAlpha, 1], \
Set[FrontEnd`Private`$ColorSelectorInitialColor, RGBColor[1, 0, 0]], \
Set[FrontEnd`Private`$ColorSelectorUseMakeBoxes, True], \
MathLink`CallFrontEnd[FrontEnd`AttachCell[Typeset`box$, \
FrontEndResource[\\\"RGBColorValueSelector\\\"], List[0, List[Left, Bottom]], \
List[Left, Top], Rule[\\\"ClosingActions\\\", \
List[\\\"SelectionDeparture\\\", \\\"ParentChanged\\\", \
\\\"EvaluatorQuit\\\"]]]]]]]], Rule[BaseStyle, Inherited], Rule[Evaluator, \
Automatic], Rule[Method, \\\"Preemptive\\\"]], RGBColor[1, 0, 0], \
Rule[Editable, False], Rule[Selectable, False]]\\)\\)\\)\\)]\\)\\), \
\\(\\(ListPlot[\\(\\(\\(\\(MapAt[\\(\\(\\(\\(\\(\\(1 - #1\\)\\) &\\)\\), \
\\(\\(Symbol[]\\)\\), \\(\\({All, 2}\\)\\)\\)\\)]\\)\\), \\(\\(AxesLabel \
\[Rule] \\(\\({\\\"False Positive Fraction\\\", \\\"1 - False Negative \
Fraction\\\"}\\)\\)\\)\\), \\(\\(PlotLabel \[Rule] \\\"BDT Linear Soft False \
Positive Fraction-1 - False Negative Fraction\\\"\\)\\), \\(\\(PlotStyle \
\[Rule] \\*InterpretationBox[ButtonBox[TooltipBox[\\(\\*GraphicsBox[List[List[\
GrayLevel[0], RectangleBox[List[0, 0]]], List[GrayLevel[0], \
RectangleBox[List[1, -1]]], List[RGBColor[0, 0, 1], RectangleBox[List[0, -1], \
List[2, 1]]]], Rule[AspectRatio, 1], Rule[Frame, True], Rule[FrameStyle, \
RGBColor[0.`, 0.`, 0.6666666666666666`]], Rule[FrameTicks, None], \
Rule[PlotRangePadding, None], Rule[ImageSize, Dynamic[List[Automatic, \
Times[1.35`, CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]] \[InvisibleSpace]\\), \
\\\"RGBColor[0, 0, 1]\\\"], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[BaselinePosition, Baseline], Rule[DefaultBaseStyle, List[]], \
RuleDelayed[ButtonFunction, With[List[Set[Typeset`box$, EvaluationBox[]]], \
If[Not[AbsoluteCurrentValue[\\\"Deployed\\\"]], \
CompoundExpression[SelectionMove[Typeset`box$, All, Expression], \
Set[FrontEnd`Private`$ColorSelectorInitialAlpha, 1], \
Set[FrontEnd`Private`$ColorSelectorInitialColor, RGBColor[0, 0, 1]], \
Set[FrontEnd`Private`$ColorSelectorUseMakeBoxes, True], \
MathLink`CallFrontEnd[FrontEnd`AttachCell[Typeset`box$, \
FrontEndResource[\\\"RGBColorValueSelector\\\"], List[0, List[Left, Bottom]], \
List[Left, Top], Rule[\\\"ClosingActions\\\", \
List[\\\"SelectionDeparture\\\", \\\"ParentChanged\\\", \
\\\"EvaluatorQuit\\\"]]]]]]]], Rule[BaseStyle, Inherited], Rule[Evaluator, \
Automatic], Rule[Method, \\\"Preemptive\\\"]], RGBColor[0, 0, 1], \
Rule[Editable, False], Rule[Selectable, False]]\\)\\)\\)\\)]\\)\\), \
\\(\\(PlotRange \[Rule] All\\)\\)\\)\\)]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Show/gcomb\\\", \
ButtonNote -> \\\"Show::gcomb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643897279002*^9, 3.672644193450925*^9, 
  3.6726443590557747`*^9}],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   GraphicsBox[{{}, {{}, 
      {RGBColor[0, 
        NCache[
         Rational[2, 3], 0.6666666666666666], 0], PointSize[
       0.01388888888888889], AbsoluteThickness[1.6], PointBox[CompressedData["

1:eJztlWFIU1EYhpdF+EOhyERNqxVOxZGJEBXJZ0WZhkkWihRqYdQwksRmWMuk
zAqMxLKwiHA6XZpbYVKhkUqhQlk6yULIhTFTdxXqj7/KS73nwpHDzX7kn10Y
4+U99zvP935nZ9rDuSlHvDQajWvmI397Hs/jef7/E5ff4bgV85nmm0Pt2aIf
CjbGmqk94IrzzROJXqfUBa4PKqammgv7mxPGGH9WxfWrGxL6572f02FLV7dm
1dJ5y4u70yMSQY/mp2XEDUjUXGZcGZhcQznpE65Ro0T6ySUz/k2qP3Gqu0Xv
ps5MeX0JGX58WRPd+o3aQuV+D5G1qjqpr3mYaXvUh8LUd12s3ylf2b+v9K87
+PZsXq5qHmq80AM7p1aVvpJo6nKDNjPPwuYBP8KlNftZlP78nz3PPlApUWfP
1hX9kdX0cjokx5gmUWW9LeJazx3SJJk2fe920+/5VtBe22Dve/cE7TbI/ZVT
nG97UbD/OMvDtCf7RofDxeqDB1rEI+IT+XPVOJ/Q6JffD3z8ep6HXy/SavX/
VfPzE+2nlo8a/9/yIE9eY/5q5w/1zpXu01VfUnw1zffP1+M13z//e4E2jO1Y
63Wxju03Vz7UF/GJ5sPnK8oPfPz7PE9/WIk16qg6rygvfj34kBf2D4lfHj7+
9AG7n5zD8v3RMEvjvsL7onxFPLiPec3Pk+dJ35YYGT3UyPw+84je4X7I/MrY
onUFP5socnFZ4PFFkxSaJN9vj5iPvEX5QOP+BA907ddC3a46K8sL+4MHfMgH
PvR2zafbGeV2pkt7fQLKvO1sHtDgQ77hXS36tniFD+cBfH5VydLCjUpe8JEH
6oEH/SIf8EOjP/BCw0c9fj14TMdGbYnhynkDP/jY/9MfPsyf57vXJN8/j5mP
fOCLtIgP9fjfA3jAl+oTFDPorZx3w+bik+UBs3lRH3ljf54XPvLk34d2mvKr
FpiVenx9nAfMG3zLzowUNH50s/MHH/tDox7moeaDFxr9Iy/40Hgf+hdptn2b

        "]]}, {}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"False Positive Fraction\"", TraditionalForm], 
      FormBox["\"1 - False Negative Fraction\"", TraditionalForm]},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{},
    PlotLabel->FormBox[
     "\"SVM Linear Soft False Positive Fraction-1 - False Negative \
Fraction\"", TraditionalForm],
    PlotRange->{{0, 0.0709812108559}, {0, 0.9692898272553}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"MapAt", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"1", "-", "#1"}], "&"}], ",", 
       RowBox[{"Symbol", "[", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"All", ",", "2"}], "}"}]}], "]"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\<\"False Positive Fraction\"\>", 
        ",", "\<\"1 - False Negative Fraction\"\>"}], "}"}]}], ",", 
     RowBox[{
     "PlotLabel", 
      "\[Rule]", "\<\"BDS Linear Soft False Positive Fraction-1 - False \
Negative Fraction\"\>"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False]}]}], "]"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"MapAt", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"1", "-", "#1"}], "&"}], ",", 
       RowBox[{"Symbol", "[", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"All", ",", "2"}], "}"}]}], "]"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\<\"False Positive Fraction\"\>", 
        ",", "\<\"1 - False Negative Fraction\"\>"}], "}"}]}], ",", 
     RowBox[{
     "PlotLabel", 
      "\[Rule]", "\<\"BDT Linear Soft False Positive Fraction-1 - False \
Negative Fraction\"\>"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0., 0., 0.6666666666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False]}]}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.6709334313301563`*^9, 3.670933477381407*^9, {3.670933696831788*^9, 
   3.670933706803569*^9}, 3.670939380668584*^9, 3.670939418176195*^9, 
   3.6709397028217783`*^9, {3.6709399078912163`*^9, 3.670939923003325*^9}, 
   3.671540979903349*^9, 3.671541967400207*^9, 3.671542055003422*^9, 
   3.672571045935026*^9, 3.672571593878253*^9, 3.672643897296555*^9, 
   3.672644193468896*^9, 3.672644359072377*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Show", "::", "gcomb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Could not combine the graphics objects in \
\[NoBreak]\\!\\(Show[\\(\\(\\*GraphicsBox[List[List[], List[List[List[], \
List[Hue[0.67`, 0.6`, 0.6`], Directive[PointSize[Skeleton[1]], \
AbsoluteThickness[Skeleton[1]], RGBColor[Skeleton[3]]], \
PointBox[List[Skeleton[231]]]], List[]]], List[]], List[Rule[DisplayFunction, \
Identity], Rule[PlotRangePadding, List[List[Scaled[0.02`], Scaled[0.02`]], \
List[Scaled[0.02`], Scaled[0.05`]]]], Rule[AxesOrigin, List[0, 0]], \
Rule[PlotRange, List[List[0, 0.00684931506849`], List[0, 0.9838709677419`]]], \
Rule[DisplayFunction, Identity], Rule[AspectRatio, NCache[Power[GoldenRatio, \
-1], 0.6180339887498948`]], Rule[Axes, List[True, True]], Rule[AxesLabel, \
List[FormBox[\\\"\\\\\\\"False Positive Fraction\\\\\\\"\\\", \
TraditionalForm], FormBox[\\\"\\\\\\\"1 - False Negative \
Fraction\\\\\\\"\\\", TraditionalForm]]], Rule[AxesOrigin, List[0, 0]], \
RuleDelayed[DisplayFunction, Identity], Rule[Frame, List[List[False, False], \
List[False, False]]], Rule[FrameLabel, List[List[None, None], List[None, \
None]]], Rule[FrameTicks, List[List[Automatic, Automatic], List[Automatic, \
Automatic]]], Rule[GridLines, List[None, None]], Rule[GridLinesStyle, \
Directive[GrayLevel[0.5`, 0.4`]]], Rule[Method, List[]], Rule[PlotLabel, \
FormBox[\\\"\\\\\\\"SVM Circle Hard False Positive Fraction-1 - False \
Negative Fraction\\\\\\\"\\\", TraditionalForm]], Rule[PlotRange, \
List[List[0, 0.00684931506849`], List[0, 0.9838709677419`]]], \
Rule[PlotRangeClipping, True], Rule[PlotRangePadding, \
List[List[Scaled[0.02`], Scaled[0.02`]], List[Scaled[0.02`], \
Scaled[0.05`]]]], Rule[Ticks, List[Automatic, Automatic]]]], \
\\(\\(ListPlot[\\(\\(\\(\\(MapAt[\\(\\(\\(\\(\\(\\(1 - #1\\)\\) &\\)\\), \
\\(\\(Symbol[]\\)\\), \\(\\({All, 2}\\)\\)\\)\\)]\\)\\), \\(\\(AxesLabel \
\[Rule] \\(\\({\\\"False Positive Fraction\\\", \\\"1 - False Negative \
Fraction\\\"}\\)\\)\\)\\), \\(\\(PlotLabel \[Rule] \\\"BDS Circle Hard False \
Positive Fraction-1 - False Negative Fraction\\\"\\)\\), \\(\\(PlotStyle \
\[Rule] \\*InterpretationBox[ButtonBox[TooltipBox[\\(\\*GraphicsBox[List[List[\
GrayLevel[0], RectangleBox[List[0, 0]]], List[GrayLevel[0], \
RectangleBox[List[1, -1]]], List[RGBColor[1, 0, 0], RectangleBox[List[0, -1], \
List[2, 1]]]], Rule[AspectRatio, 1], Rule[Frame, True], Rule[FrameStyle, \
RGBColor[0.6666666666666666`, 0.`, 0.`]], Rule[FrameTicks, None], \
Rule[PlotRangePadding, None], Rule[ImageSize, Dynamic[List[Automatic, \
Times[1.35`, CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]] \[InvisibleSpace]\\), \
\\\"RGBColor[1, 0, 0]\\\"], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[BaselinePosition, Baseline], Rule[DefaultBaseStyle, List[]], \
RuleDelayed[ButtonFunction, With[List[Set[Typeset`box$, EvaluationBox[]]], \
If[Not[AbsoluteCurrentValue[\\\"Deployed\\\"]], \
CompoundExpression[SelectionMove[Typeset`box$, All, Expression], \
Set[FrontEnd`Private`$ColorSelectorInitialAlpha, 1], \
Set[FrontEnd`Private`$ColorSelectorInitialColor, RGBColor[1, 0, 0]], \
Set[FrontEnd`Private`$ColorSelectorUseMakeBoxes, True], \
MathLink`CallFrontEnd[FrontEnd`AttachCell[Typeset`box$, \
FrontEndResource[\\\"RGBColorValueSelector\\\"], List[0, List[Left, Bottom]], \
List[Left, Top], Rule[\\\"ClosingActions\\\", \
List[\\\"SelectionDeparture\\\", \\\"ParentChanged\\\", \
\\\"EvaluatorQuit\\\"]]]]]]]], Rule[BaseStyle, Inherited], Rule[Evaluator, \
Automatic], Rule[Method, \\\"Preemptive\\\"]], RGBColor[1, 0, 0], \
Rule[Editable, False], Rule[Selectable, False]]\\)\\)\\)\\)]\\)\\), \
\\(\\(ListPlot[\\(\\(\\(\\(MapAt[\\(\\(\\(\\(\\(\\(1 - #1\\)\\) &\\)\\), \
\\(\\(Symbol[]\\)\\), \\(\\({All, 2}\\)\\)\\)\\)]\\)\\), \\(\\(AxesLabel \
\[Rule] \\(\\({\\\"False Positive Fraction\\\", \\\"1 - False Negative \
Fraction\\\"}\\)\\)\\)\\), \\(\\(PlotLabel \[Rule] \\\"BDT Circle Hard False \
Positive Fraction-1 - False Negative Fraction\\\"\\)\\), \\(\\(PlotStyle \
\[Rule] \\*InterpretationBox[ButtonBox[TooltipBox[\\(\\*GraphicsBox[List[List[\
GrayLevel[0], RectangleBox[List[0, 0]]], List[GrayLevel[0], \
RectangleBox[List[1, -1]]], List[RGBColor[0, 0, 1], RectangleBox[List[0, -1], \
List[2, 1]]]], Rule[AspectRatio, 1], Rule[Frame, True], Rule[FrameStyle, \
RGBColor[0.`, 0.`, 0.6666666666666666`]], Rule[FrameTicks, None], \
Rule[PlotRangePadding, None], Rule[ImageSize, Dynamic[List[Automatic, \
Times[1.35`, CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]] \[InvisibleSpace]\\), \
\\\"RGBColor[0, 0, 1]\\\"], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[BaselinePosition, Baseline], Rule[DefaultBaseStyle, List[]], \
RuleDelayed[ButtonFunction, With[List[Set[Typeset`box$, EvaluationBox[]]], \
If[Not[AbsoluteCurrentValue[\\\"Deployed\\\"]], \
CompoundExpression[SelectionMove[Typeset`box$, All, Expression], \
Set[FrontEnd`Private`$ColorSelectorInitialAlpha, 1], \
Set[FrontEnd`Private`$ColorSelectorInitialColor, RGBColor[0, 0, 1]], \
Set[FrontEnd`Private`$ColorSelectorUseMakeBoxes, True], \
MathLink`CallFrontEnd[FrontEnd`AttachCell[Typeset`box$, \
FrontEndResource[\\\"RGBColorValueSelector\\\"], List[0, List[Left, Bottom]], \
List[Left, Top], Rule[\\\"ClosingActions\\\", \
List[\\\"SelectionDeparture\\\", \\\"ParentChanged\\\", \
\\\"EvaluatorQuit\\\"]]]]]]]], Rule[BaseStyle, Inherited], Rule[Evaluator, \
Automatic], Rule[Method, \\\"Preemptive\\\"]], RGBColor[0, 0, 1], \
Rule[Editable, False], Rule[Selectable, False]]\\)\\)\\)\\)]\\)\\), \
\\(\\(PlotRange \[Rule] All\\)\\)\\)\\)]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Show/gcomb\\\", \
ButtonNote -> \\\"Show::gcomb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643897279002*^9, 3.672644193450925*^9, 
  3.6726443590917807`*^9}],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   GraphicsBox[{{}, {{}, 
      {RGBColor[0, 
        NCache[
         Rational[2, 3], 0.6666666666666666], 0], PointSize[
       0.01388888888888889], AbsoluteThickness[1.6], PointBox[CompressedData["

1:eJxTTMoPSmViYGB4DsQgehSMglEwCgiBE7LF5yyf77EfaHcQC/5YcCi2CDyC
u9dPC8h1ugHnX1id1GN4bAec/+C4I1DDhAHzX1Uo0DkSr+H2Nz2ufr/3+zM4
f2cyMPjnPIbzFdhB/nmA038dhdlrt147hfDvkywgfxfCvwxemkunbELwweEx
g6D/TysyrmXZkmQvdVwiucfwnf3dahA/yD5s67Wo7LVv4frd5wC9k/wGzo/y
A7nnFZr7X8D5SXeA2rci/Ju2OAjowCc4/X/g497v96rvw/mbrt4DBth1OH8X
WP1l+533G5nZ+XLg7oW4vwgnH6a+bA/Q+Pdv4f4rngNK/2/gfIj7cPNvZgGj
7x4iPmfFAL0fheCjx/c85aVTgrxe2h9qcLzBmlhuH3kVFB7vcPKtQN4rRrgf
Jo/Oh/kHVT4Jrh/mXnT/ovNx+RfdPnT34nLf3/ug9I3Jh+nHxUdXj+4/9PiG
8c3XgRLoW5zukX0OiuD3GHyY/TbvQOkNIU+Ij8s8XHz0+ERPn7j0w/xHqn3o
7sUVvrj46OEHcz/MPejxQ8g8Qu4j1r240g+u/IMefjB5YtMDOn/DJpB5NRh8
mHuI5cPcC+PD3IvLfGrzR907tNwLS5+D3b0AhrgrsQ==
        "]]}, {}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"False Positive Fraction\"", TraditionalForm], 
      FormBox["\"1 - False Negative Fraction\"", TraditionalForm]},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{},
    PlotLabel->FormBox[
     "\"SVM Circle Hard False Positive Fraction-1 - False Negative \
Fraction\"", TraditionalForm],
    PlotRange->{{0, 0.00684931506849}, {0, 0.9838709677419}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"MapAt", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"1", "-", "#1"}], "&"}], ",", 
       RowBox[{"Symbol", "[", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"All", ",", "2"}], "}"}]}], "]"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\<\"False Positive Fraction\"\>", 
        ",", "\<\"1 - False Negative Fraction\"\>"}], "}"}]}], ",", 
     RowBox[{
     "PlotLabel", 
      "\[Rule]", "\<\"BDS Circle Hard False Positive Fraction-1 - False \
Negative Fraction\"\>"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False]}]}], "]"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"MapAt", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"1", "-", "#1"}], "&"}], ",", 
       RowBox[{"Symbol", "[", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"All", ",", "2"}], "}"}]}], "]"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\<\"False Positive Fraction\"\>", 
        ",", "\<\"1 - False Negative Fraction\"\>"}], "}"}]}], ",", 
     RowBox[{
     "PlotLabel", 
      "\[Rule]", "\<\"BDT Circle Hard False Positive Fraction-1 - False \
Negative Fraction\"\>"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0., 0., 0.6666666666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False]}]}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.6709334313301563`*^9, 3.670933477381407*^9, {3.670933696831788*^9, 
   3.670933706803569*^9}, 3.670939380668584*^9, 3.670939418176195*^9, 
   3.6709397028217783`*^9, {3.6709399078912163`*^9, 3.670939923003325*^9}, 
   3.671540979903349*^9, 3.671541967400207*^9, 3.671542055003422*^9, 
   3.672571045935026*^9, 3.672571593878253*^9, 3.672643897296555*^9, 
   3.672644193468896*^9, 3.672644359109765*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Show", "::", "gcomb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Could not combine the graphics objects in \
\[NoBreak]\\!\\(Show[\\(\\(\\*GraphicsBox[List[List[], List[List[List[], \
List[Hue[0.67`, 0.6`, 0.6`], Directive[PointSize[Skeleton[1]], \
AbsoluteThickness[Skeleton[1]], RGBColor[Skeleton[3]]], \
PointBox[List[Skeleton[231]]]], List[]]], List[]], List[Rule[DisplayFunction, \
Identity], Rule[PlotRangePadding, List[List[Scaled[0.02`], Scaled[0.02`]], \
List[Scaled[0.02`], Scaled[0.05`]]]], Rule[AxesOrigin, List[0, 0]], \
Rule[PlotRange, List[List[0, 0.0205479452055`], List[0, 0.9354838709677`]]], \
Rule[DisplayFunction, Identity], Rule[AspectRatio, NCache[Power[GoldenRatio, \
-1], 0.6180339887498948`]], Rule[Axes, List[True, True]], Rule[AxesLabel, \
List[FormBox[\\\"\\\\\\\"False Positive Fraction\\\\\\\"\\\", \
TraditionalForm], FormBox[\\\"\\\\\\\"1 - False Negative \
Fraction\\\\\\\"\\\", TraditionalForm]]], Rule[AxesOrigin, List[0, 0]], \
RuleDelayed[DisplayFunction, Identity], Rule[Frame, List[List[False, False], \
List[False, False]]], Rule[FrameLabel, List[List[None, None], List[None, \
None]]], Rule[FrameTicks, List[List[Automatic, Automatic], List[Automatic, \
Automatic]]], Rule[GridLines, List[None, None]], Rule[GridLinesStyle, \
Directive[GrayLevel[0.5`, 0.4`]]], Rule[Method, List[]], Rule[PlotLabel, \
FormBox[\\\"\\\\\\\"SVM Circle Soft False Positive Fraction-1 - False \
Negative Fraction\\\\\\\"\\\", TraditionalForm]], Rule[PlotRange, \
List[List[0, 0.0205479452055`], List[0, 0.9354838709677`]]], \
Rule[PlotRangeClipping, True], Rule[PlotRangePadding, \
List[List[Scaled[0.02`], Scaled[0.02`]], List[Scaled[0.02`], \
Scaled[0.05`]]]], Rule[Ticks, List[Automatic, Automatic]]]], \
\\(\\(ListPlot[\\(\\(\\(\\(MapAt[\\(\\(\\(\\(\\(\\(1 - #1\\)\\) &\\)\\), \
\\(\\(Symbol[]\\)\\), \\(\\({All, 2}\\)\\)\\)\\)]\\)\\), \\(\\(AxesLabel \
\[Rule] \\(\\({\\\"False Positive Fraction\\\", \\\"1 - False Negative \
Fraction\\\"}\\)\\)\\)\\), \\(\\(PlotLabel \[Rule] \\\"BDS Circle Soft False \
Positive Fraction-1 - False Negative Fraction\\\"\\)\\), \\(\\(PlotStyle \
\[Rule] \\*InterpretationBox[ButtonBox[TooltipBox[\\(\\*GraphicsBox[List[List[\
GrayLevel[0], RectangleBox[List[0, 0]]], List[GrayLevel[0], \
RectangleBox[List[1, -1]]], List[RGBColor[1, 0, 0], RectangleBox[List[0, -1], \
List[2, 1]]]], Rule[AspectRatio, 1], Rule[Frame, True], Rule[FrameStyle, \
RGBColor[0.6666666666666666`, 0.`, 0.`]], Rule[FrameTicks, None], \
Rule[PlotRangePadding, None], Rule[ImageSize, Dynamic[List[Automatic, \
Times[1.35`, CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]] \[InvisibleSpace]\\), \
\\\"RGBColor[1, 0, 0]\\\"], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[BaselinePosition, Baseline], Rule[DefaultBaseStyle, List[]], \
RuleDelayed[ButtonFunction, With[List[Set[Typeset`box$, EvaluationBox[]]], \
If[Not[AbsoluteCurrentValue[\\\"Deployed\\\"]], \
CompoundExpression[SelectionMove[Typeset`box$, All, Expression], \
Set[FrontEnd`Private`$ColorSelectorInitialAlpha, 1], \
Set[FrontEnd`Private`$ColorSelectorInitialColor, RGBColor[1, 0, 0]], \
Set[FrontEnd`Private`$ColorSelectorUseMakeBoxes, True], \
MathLink`CallFrontEnd[FrontEnd`AttachCell[Typeset`box$, \
FrontEndResource[\\\"RGBColorValueSelector\\\"], List[0, List[Left, Bottom]], \
List[Left, Top], Rule[\\\"ClosingActions\\\", \
List[\\\"SelectionDeparture\\\", \\\"ParentChanged\\\", \
\\\"EvaluatorQuit\\\"]]]]]]]], Rule[BaseStyle, Inherited], Rule[Evaluator, \
Automatic], Rule[Method, \\\"Preemptive\\\"]], RGBColor[1, 0, 0], \
Rule[Editable, False], Rule[Selectable, False]]\\)\\)\\)\\)]\\)\\), \
\\(\\(ListPlot[\\(\\(\\(\\(MapAt[\\(\\(\\(\\(\\(\\(1 - #1\\)\\) &\\)\\), \
\\(\\(Symbol[]\\)\\), \\(\\({All, 2}\\)\\)\\)\\)]\\)\\), \\(\\(AxesLabel \
\[Rule] \\(\\({\\\"False Positive Fraction\\\", \\\"1 - False Negative \
Fraction\\\"}\\)\\)\\)\\), \\(\\(PlotLabel \[Rule] \\\"BDT Circle Soft False \
Positive Fraction-1 - False Negative Fraction\\\"\\)\\), \\(\\(PlotStyle \
\[Rule] \\*InterpretationBox[ButtonBox[TooltipBox[\\(\\*GraphicsBox[List[List[\
GrayLevel[0], RectangleBox[List[0, 0]]], List[GrayLevel[0], \
RectangleBox[List[1, -1]]], List[RGBColor[0, 0, 1], RectangleBox[List[0, -1], \
List[2, 1]]]], Rule[AspectRatio, 1], Rule[Frame, True], Rule[FrameStyle, \
RGBColor[0.`, 0.`, 0.6666666666666666`]], Rule[FrameTicks, None], \
Rule[PlotRangePadding, None], Rule[ImageSize, Dynamic[List[Automatic, \
Times[1.35`, CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]] \[InvisibleSpace]\\), \
\\\"RGBColor[0, 0, 1]\\\"], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[BaselinePosition, Baseline], Rule[DefaultBaseStyle, List[]], \
RuleDelayed[ButtonFunction, With[List[Set[Typeset`box$, EvaluationBox[]]], \
If[Not[AbsoluteCurrentValue[\\\"Deployed\\\"]], \
CompoundExpression[SelectionMove[Typeset`box$, All, Expression], \
Set[FrontEnd`Private`$ColorSelectorInitialAlpha, 1], \
Set[FrontEnd`Private`$ColorSelectorInitialColor, RGBColor[0, 0, 1]], \
Set[FrontEnd`Private`$ColorSelectorUseMakeBoxes, True], \
MathLink`CallFrontEnd[FrontEnd`AttachCell[Typeset`box$, \
FrontEndResource[\\\"RGBColorValueSelector\\\"], List[0, List[Left, Bottom]], \
List[Left, Top], Rule[\\\"ClosingActions\\\", \
List[\\\"SelectionDeparture\\\", \\\"ParentChanged\\\", \
\\\"EvaluatorQuit\\\"]]]]]]]], Rule[BaseStyle, Inherited], Rule[Evaluator, \
Automatic], Rule[Method, \\\"Preemptive\\\"]], RGBColor[0, 0, 1], \
Rule[Editable, False], Rule[Selectable, False]]\\)\\)\\)\\)]\\)\\), \
\\(\\(PlotRange \[Rule] All\\)\\)\\)\\)]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Show/gcomb\\\", \
ButtonNote -> \\\"Show::gcomb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643897279002*^9, 3.672644193450925*^9, 
  3.6726443591241837`*^9}],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   GraphicsBox[{{}, {{}, 
      {RGBColor[0, 
        NCache[
         Rational[2, 3], 0.6666666666666666], 0], PointSize[
       0.01388888888888889], AbsoluteThickness[1.6], PointBox[CompressedData["

1:eJztlUFoE0EUhqNWDCKSmz3ksniQigcFQYuHsUUI5KAQqIegYDdawShiCwpG
JJbUVghFY3tQglRKvUVUFCkYtCKNUigIoagQU4tl0TQEtZAePDhj/d/gk3FX
L4JkIIQvb2fe997MTiz7ZOTISp/P58iP+m6MxmiMxvjfxtedfisVmBNg/2At
X387JX4351+M8fKFVWvWHxe7QuGWsaGPopRYkWu6HxHng6lAu/8D8fvHM9F4
bp78n3yS5STKxIFgOVHLF4hnC22yASO63ueKk2b2OO7cU77nxOtjqp8VMWUp
P1tcP5B7MBOtkG90b1z+oOsJ7pblRTTnN082x9K6vonv9TjEt+4ORcIt82w9
vZ9NBfl4rUS8dEq2yyoSr+twsj3TLwR8Nw2r+MIP324xHptudbIVA9tGhg+v
92xHettks7n+5fOo+cZG2Y6wrn92SZaTd8gX+UyM/j9Ntr1a3XmG7Ue3C9ue
GX68fu6D/oJDWdmO2AL5ce4alds79ivD18R4X/6WuQ98EQf3yNPT6uj8JsZ6
Xtm0XmZUnfcq+e64LY9XvEo+iIMR5+sX/Z0bUgeTxLweE/P1wct+vZQPvF9h
rkr5OPP10F/EOXN/zN9eH2nvW9tHXHyj6u2nfIibmPtyRv9ofRc/zPfqw+N/
6s+Z7w/3desXGPtpYq/9RBzzeX43X54vVHp34uLDS0Z2qwfPc8b+gXFfcebv
E+Lw3zJnXes/PEj5TXz6kfp/0gwfMOoH4z4C4/6dWPTJfmfIjzP6/fN9lyaf
fZ8PyX5fdvVBvdxn4MtW+9nAFWLkRz7Oma6X9T3lq/r+PnpT+g0TfwO3Wg7n

        "]]}, {}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"False Positive Fraction\"", TraditionalForm], 
      FormBox["\"1 - False Negative Fraction\"", TraditionalForm]},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{},
    PlotLabel->FormBox[
     "\"SVM Circle Soft False Positive Fraction-1 - False Negative \
Fraction\"", TraditionalForm],
    PlotRange->{{0, 0.0205479452055}, {0, 0.9354838709677}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"MapAt", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"1", "-", "#1"}], "&"}], ",", 
       RowBox[{"Symbol", "[", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"All", ",", "2"}], "}"}]}], "]"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\<\"False Positive Fraction\"\>", 
        ",", "\<\"1 - False Negative Fraction\"\>"}], "}"}]}], ",", 
     RowBox[{
     "PlotLabel", 
      "\[Rule]", "\<\"BDS Circle Soft False Positive Fraction-1 - False \
Negative Fraction\"\>"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False]}]}], "]"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"MapAt", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"1", "-", "#1"}], "&"}], ",", 
       RowBox[{"Symbol", "[", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"All", ",", "2"}], "}"}]}], "]"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\<\"False Positive Fraction\"\>", 
        ",", "\<\"1 - False Negative Fraction\"\>"}], "}"}]}], ",", 
     RowBox[{
     "PlotLabel", 
      "\[Rule]", "\<\"BDT Circle Soft False Positive Fraction-1 - False \
Negative Fraction\"\>"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0., 0., 0.6666666666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False]}]}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.6709334313301563`*^9, 3.670933477381407*^9, {3.670933696831788*^9, 
   3.670933706803569*^9}, 3.670939380668584*^9, 3.670939418176195*^9, 
   3.6709397028217783`*^9, {3.6709399078912163`*^9, 3.670939923003325*^9}, 
   3.671540979903349*^9, 3.671541967400207*^9, 3.671542055003422*^9, 
   3.672571045935026*^9, 3.672571593878253*^9, 3.672643897296555*^9, 
   3.672644193468896*^9, 3.6726443591405087`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Show", "::", "gcomb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Could not combine the graphics objects in \
\[NoBreak]\\!\\(Show[\\(\\(\\*GraphicsBox[List[List[], List[List[List[], \
List[Hue[0.67`, 0.6`, 0.6`], Directive[PointSize[Skeleton[1]], \
AbsoluteThickness[Skeleton[1]], RGBColor[Skeleton[3]]], \
PointBox[List[Skeleton[231]]]], List[]]], List[]], List[Rule[DisplayFunction, \
Identity], Rule[PlotRangePadding, List[List[Scaled[0.02`], Scaled[0.02`]], \
List[Scaled[0.02`], Scaled[0.05`]]]], Rule[AxesOrigin, List[0, 0]], \
Rule[PlotRange, List[List[0, 0.0186335403727`], List[0, 0.974358974359`]]], \
Rule[DisplayFunction, Identity], Rule[AspectRatio, NCache[Power[GoldenRatio, \
-1], 0.6180339887498948`]], Rule[Axes, List[True, True]], Rule[AxesLabel, \
List[FormBox[\\\"\\\\\\\"False Positive Fraction\\\\\\\"\\\", \
TraditionalForm], FormBox[\\\"\\\\\\\"1 - False Negative \
Fraction\\\\\\\"\\\", TraditionalForm]]], Rule[AxesOrigin, List[0, 0]], \
RuleDelayed[DisplayFunction, Identity], Rule[Frame, List[List[False, False], \
List[False, False]]], Rule[FrameLabel, List[List[None, None], List[None, \
None]]], Rule[FrameTicks, List[List[Automatic, Automatic], List[Automatic, \
Automatic]]], Rule[GridLines, List[None, None]], Rule[GridLinesStyle, \
Directive[GrayLevel[0.5`, 0.4`]]], Rule[Method, List[]], Rule[PlotLabel, \
FormBox[\\\"\\\\\\\"SVM Two Circle Hard False Positive Fraction-1 - False \
Negative Fraction\\\\\\\"\\\", TraditionalForm]], Rule[PlotRange, \
List[List[0, 0.0186335403727`], List[0, 0.974358974359`]]], \
Rule[PlotRangeClipping, True], Rule[PlotRangePadding, \
List[List[Scaled[0.02`], Scaled[0.02`]], List[Scaled[0.02`], \
Scaled[0.05`]]]], Rule[Ticks, List[Automatic, Automatic]]]], \
\\(\\(ListPlot[\\(\\(\\(\\(MapAt[\\(\\(\\(\\(\\(\\(1 - #1\\)\\) &\\)\\), \
\\(\\(Symbol[]\\)\\), \\(\\({All, 2}\\)\\)\\)\\)]\\)\\), \\(\\(AxesLabel \
\[Rule] \\(\\({\\\"False Positive Fraction\\\", \\\"1 - False Negative \
Fraction\\\"}\\)\\)\\)\\), \\(\\(PlotLabel \[Rule] \\\"BDS Two Circle Hard \
False Positive Fraction-1 - False Negative Fraction\\\"\\)\\), \
\\(\\(PlotStyle \[Rule] \
\\*InterpretationBox[ButtonBox[TooltipBox[\\(\\*GraphicsBox[List[List[\
GrayLevel[0], RectangleBox[List[0, 0]]], List[GrayLevel[0], \
RectangleBox[List[1, -1]]], List[RGBColor[1, 0, 0], RectangleBox[List[0, -1], \
List[2, 1]]]], Rule[AspectRatio, 1], Rule[Frame, True], Rule[FrameStyle, \
RGBColor[0.6666666666666666`, 0.`, 0.`]], Rule[FrameTicks, None], \
Rule[PlotRangePadding, None], Rule[ImageSize, Dynamic[List[Automatic, \
Times[1.35`, CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]] \[InvisibleSpace]\\), \
\\\"RGBColor[1, 0, 0]\\\"], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[BaselinePosition, Baseline], Rule[DefaultBaseStyle, List[]], \
RuleDelayed[ButtonFunction, With[List[Set[Typeset`box$, EvaluationBox[]]], \
If[Not[AbsoluteCurrentValue[\\\"Deployed\\\"]], \
CompoundExpression[SelectionMove[Typeset`box$, All, Expression], \
Set[FrontEnd`Private`$ColorSelectorInitialAlpha, 1], \
Set[FrontEnd`Private`$ColorSelectorInitialColor, RGBColor[1, 0, 0]], \
Set[FrontEnd`Private`$ColorSelectorUseMakeBoxes, True], \
MathLink`CallFrontEnd[FrontEnd`AttachCell[Typeset`box$, \
FrontEndResource[\\\"RGBColorValueSelector\\\"], List[0, List[Left, Bottom]], \
List[Left, Top], Rule[\\\"ClosingActions\\\", \
List[\\\"SelectionDeparture\\\", \\\"ParentChanged\\\", \
\\\"EvaluatorQuit\\\"]]]]]]]], Rule[BaseStyle, Inherited], Rule[Evaluator, \
Automatic], Rule[Method, \\\"Preemptive\\\"]], RGBColor[1, 0, 0], \
Rule[Editable, False], Rule[Selectable, False]]\\)\\)\\)\\)]\\)\\), \
\\(\\(ListPlot[\\(\\(\\(\\(MapAt[\\(\\(\\(\\(\\(\\(1 - #1\\)\\) &\\)\\), \
\\(\\(Symbol[]\\)\\), \\(\\({All, 2}\\)\\)\\)\\)]\\)\\), \\(\\(AxesLabel \
\[Rule] \\(\\({\\\"False Positive Fraction\\\", \\\"1 - False Negative \
Fraction\\\"}\\)\\)\\)\\), \\(\\(PlotLabel \[Rule] \\(\\(\\\"BDT Two Circle \
Hard False Posit\\\" \[Ellipsis] \\\"ion-1 - False Negative \
Fraction\\\"\\)\\)\\)\\), \\(\\(PlotStyle \[Rule] \
\\*InterpretationBox[ButtonBox[TooltipBox[\\(\\*GraphicsBox[List[List[\
GrayLevel[0], RectangleBox[List[0, 0]]], List[GrayLevel[0], \
RectangleBox[List[1, -1]]], List[RGBColor[0, 0, 1], RectangleBox[List[0, -1], \
List[2, 1]]]], Rule[AspectRatio, 1], Rule[Frame, True], Rule[FrameStyle, \
RGBColor[0.`, 0.`, 0.6666666666666666`]], Rule[FrameTicks, None], \
Rule[PlotRangePadding, None], Rule[ImageSize, Dynamic[List[Automatic, \
Times[1.35`, CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]] \[InvisibleSpace]\\), \
\\\"RGBColor[0, 0, 1]\\\"], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[BaselinePosition, Baseline], Rule[DefaultBaseStyle, List[]], \
RuleDelayed[ButtonFunction, With[List[Set[Typeset`box$, EvaluationBox[]]], \
If[Not[AbsoluteCurrentValue[\\\"Deployed\\\"]], \
CompoundExpression[SelectionMove[Typeset`box$, All, Expression], \
Set[FrontEnd`Private`$ColorSelectorInitialAlpha, 1], \
Set[FrontEnd`Private`$ColorSelectorInitialColor, RGBColor[0, 0, 1]], \
Set[FrontEnd`Private`$ColorSelectorUseMakeBoxes, True], \
MathLink`CallFrontEnd[FrontEnd`AttachCell[Typeset`box$, \
FrontEndResource[\\\"RGBColorValueSelector\\\"], List[0, List[Left, Bottom]], \
List[Left, Top], Rule[\\\"ClosingActions\\\", \
List[\\\"SelectionDeparture\\\", \\\"ParentChanged\\\", \
\\\"EvaluatorQuit\\\"]]]]]]]], Rule[BaseStyle, Inherited], Rule[Evaluator, \
Automatic], Rule[Method, \\\"Preemptive\\\"]], RGBColor[0, 0, 1], \
Rule[Editable, False], Rule[Selectable, False]]\\)\\)\\)\\)]\\)\\), \
\\(\\(PlotRange \[Rule] All\\)\\)\\)\\)]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Show/gcomb\\\", \
ButtonNote -> \\\"Show::gcomb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643897279002*^9, 3.672644193450925*^9, 
  3.672644359158991*^9}],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   GraphicsBox[{{}, {{}, 
      {RGBColor[0, 
        NCache[
         Rational[2, 3], 0.6666666666666666], 0], PointSize[
       0.01388888888888889], AbsoluteThickness[1.6], PointBox[CompressedData["

1:eJxTTMoPSmViYGB4DsQgehSMglEwCgiBOyUvZ617ecp+oN1BLLAzi5ziGvkE
7t6gr3dBAM4/xZwopJZ4Cc4vUN0obL1xM9399+TJCs3K9jr7pduA1gu/tm+1
KzgWEBVinz3h7c15b1/C3bOv9fT2mtPP4fxrIc0mHs0I/8kKTzbgnPwAzrdp
d5Ra4ngLp38FhEHhcwTOP2D7UObcwzVwvkNUq/yPxn6M8HCqWrSW7XyjPds5
kPo39uh8yxU8P54UVNpvuNx750TvG/sZM0D+KbF338f/5wD/G7j/0P3LtF68
aqH4K7h9Jzo+SvR/fAHnhxT4Xi/xRfi/wkl7a5D2UzjfGAweY4QHxP4W+5ir
8X+vxr+F8x1ubba9vZkwHxY/5653zr3RicmH+Q/Gh/kfZh+MDwufW9tB+vPs
N+y0nHPYEhY+KfZlx3cDwWv7+z3WCxM7J9ir3Geve8D+zn5fMih8J9pvugNK
vm8x5NX9QOZ34uRnLLC7P+tpG8V8mP0wPix8LnaB/NMHVw/jczyJ3vc0+p29
8N1bAvp/uuF8dHkYv+DN+n+v1iPUw/gw/6DzH70DZo+bxPNh+k1Wc+5aLTIZ
w/5/L1vjXrQi+DD9sPCG6YfxQz4y239gfk8yH2Y+Oh9mHy77Ye6DpQeYe9DD
D5f56O459ln3/iddhDw6H6YeFh/EqkcPX3Q+zDx08+nFh6UHdHlc6RE9/mDp
n9j4IxQf6O4jpB7dfej+QU//uNITIfNxxS+u9ISLj+4eWPjB+Oj+Jzb/EBu+
1HIvrvyAnp9w5S9S45fa4TtY3AsAyrWDaA==
        "]]}, {}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"False Positive Fraction\"", TraditionalForm], 
      FormBox["\"1 - False Negative Fraction\"", TraditionalForm]},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{},
    PlotLabel->FormBox[
     "\"SVM Two Circle Hard False Positive Fraction-1 - False Negative \
Fraction\"", TraditionalForm],
    PlotRange->{{0, 0.0186335403727}, {0, 0.974358974359}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"MapAt", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"1", "-", "#1"}], "&"}], ",", 
       RowBox[{"Symbol", "[", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"All", ",", "2"}], "}"}]}], "]"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\<\"False Positive Fraction\"\>", 
        ",", "\<\"1 - False Negative Fraction\"\>"}], "}"}]}], ",", 
     RowBox[{
     "PlotLabel", 
      "\[Rule]", "\<\"BDS Two Circle Hard False Positive Fraction-1 - False \
Negative Fraction\"\>"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False]}]}], "]"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"MapAt", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"1", "-", "#1"}], "&"}], ",", 
       RowBox[{"Symbol", "[", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"All", ",", "2"}], "}"}]}], "]"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\<\"False Positive Fraction\"\>", 
        ",", "\<\"1 - False Negative Fraction\"\>"}], "}"}]}], ",", 
     RowBox[{
     "PlotLabel", 
      "\[Rule]", "\<\"BDT Two Circle Hard False Positive Fraction-1 - False \
Negative Fraction\"\>"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0., 0., 0.6666666666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False]}]}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.6709334313301563`*^9, 3.670933477381407*^9, {3.670933696831788*^9, 
   3.670933706803569*^9}, 3.670939380668584*^9, 3.670939418176195*^9, 
   3.6709397028217783`*^9, {3.6709399078912163`*^9, 3.670939923003325*^9}, 
   3.671540979903349*^9, 3.671541967400207*^9, 3.671542055003422*^9, 
   3.672571045935026*^9, 3.672571593878253*^9, 3.672643897296555*^9, 
   3.672644193468896*^9, 3.67264435917636*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Show", "::", "gcomb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Could not combine the graphics objects in \
\[NoBreak]\\!\\(Show[\\(\\(\\*GraphicsBox[List[List[], List[List[List[], \
List[Hue[0.67`, 0.6`, 0.6`], Directive[PointSize[Skeleton[1]], \
AbsoluteThickness[Skeleton[1]], RGBColor[Skeleton[3]]], \
PointBox[List[Skeleton[231]]]], List[]]], List[]], List[Rule[DisplayFunction, \
Identity], Rule[PlotRangePadding, List[List[Scaled[0.02`], Scaled[0.02`]], \
List[Scaled[0.02`], Scaled[0.05`]]]], Rule[AxesOrigin, List[0, 0]], \
Rule[PlotRange, List[List[0, 0.0300375469337`], List[0, 0.9601990049751`]]], \
Rule[DisplayFunction, Identity], Rule[AspectRatio, NCache[Power[GoldenRatio, \
-1], 0.6180339887498948`]], Rule[Axes, List[True, True]], Rule[AxesLabel, \
List[FormBox[\\\"\\\\\\\"False Positive Fraction\\\\\\\"\\\", \
TraditionalForm], FormBox[\\\"\\\\\\\"1 - False Negative \
Fraction\\\\\\\"\\\", TraditionalForm]]], Rule[AxesOrigin, List[0, 0]], \
RuleDelayed[DisplayFunction, Identity], Rule[Frame, List[List[False, False], \
List[False, False]]], Rule[FrameLabel, List[List[None, None], List[None, \
None]]], Rule[FrameTicks, List[List[Automatic, Automatic], List[Automatic, \
Automatic]]], Rule[GridLines, List[None, None]], Rule[GridLinesStyle, \
Directive[GrayLevel[0.5`, 0.4`]]], Rule[Method, List[]], Rule[PlotLabel, \
FormBox[\\\"\\\\\\\"SVM Two Circle SoftFalse Positive Fraction-1 - False \
Negative Fraction\\\\\\\"\\\", TraditionalForm]], Rule[PlotRange, \
List[List[0, 0.0300375469337`], List[0, 0.9601990049751`]]], \
Rule[PlotRangeClipping, True], Rule[PlotRangePadding, \
List[List[Scaled[0.02`], Scaled[0.02`]], List[Scaled[0.02`], \
Scaled[0.05`]]]], Rule[Ticks, List[Automatic, Automatic]]]], \
\\(\\(ListPlot[\\(\\(\\(\\(MapAt[\\(\\(\\(\\(\\(\\(1 - #1\\)\\) &\\)\\), \
\\(\\(Symbol[]\\)\\), \\(\\({All, 2}\\)\\)\\)\\)]\\)\\), \\(\\(AxesLabel \
\[Rule] \\(\\({\\\"False Positive Fraction\\\", \\\"1 - False Negative \
Fraction\\\"}\\)\\)\\)\\), \\(\\(PlotLabel \[Rule] \\\"BDS Two Circle Soft \
False Positive Fraction-1 - False Negative Fraction\\\"\\)\\), \
\\(\\(PlotStyle \[Rule] \
\\*InterpretationBox[ButtonBox[TooltipBox[\\(\\*GraphicsBox[List[List[\
GrayLevel[0], RectangleBox[List[0, 0]]], List[GrayLevel[0], \
RectangleBox[List[1, -1]]], List[RGBColor[1, 0, 0], RectangleBox[List[0, -1], \
List[2, 1]]]], Rule[AspectRatio, 1], Rule[Frame, True], Rule[FrameStyle, \
RGBColor[0.6666666666666666`, 0.`, 0.`]], Rule[FrameTicks, None], \
Rule[PlotRangePadding, None], Rule[ImageSize, Dynamic[List[Automatic, \
Times[1.35`, CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]] \[InvisibleSpace]\\), \
\\\"RGBColor[1, 0, 0]\\\"], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[BaselinePosition, Baseline], Rule[DefaultBaseStyle, List[]], \
RuleDelayed[ButtonFunction, With[List[Set[Typeset`box$, EvaluationBox[]]], \
If[Not[AbsoluteCurrentValue[\\\"Deployed\\\"]], \
CompoundExpression[SelectionMove[Typeset`box$, All, Expression], \
Set[FrontEnd`Private`$ColorSelectorInitialAlpha, 1], \
Set[FrontEnd`Private`$ColorSelectorInitialColor, RGBColor[1, 0, 0]], \
Set[FrontEnd`Private`$ColorSelectorUseMakeBoxes, True], \
MathLink`CallFrontEnd[FrontEnd`AttachCell[Typeset`box$, \
FrontEndResource[\\\"RGBColorValueSelector\\\"], List[0, List[Left, Bottom]], \
List[Left, Top], Rule[\\\"ClosingActions\\\", \
List[\\\"SelectionDeparture\\\", \\\"ParentChanged\\\", \
\\\"EvaluatorQuit\\\"]]]]]]]], Rule[BaseStyle, Inherited], Rule[Evaluator, \
Automatic], Rule[Method, \\\"Preemptive\\\"]], RGBColor[1, 0, 0], \
Rule[Editable, False], Rule[Selectable, False]]\\)\\)\\)\\)]\\)\\), \
\\(\\(ListPlot[\\(\\(\\(\\(MapAt[\\(\\(\\(\\(\\(\\(1 - #1\\)\\) &\\)\\), \
\\(\\(Symbol[]\\)\\), \\(\\({All, 2}\\)\\)\\)\\)]\\)\\), \\(\\(AxesLabel \
\[Rule] \\(\\({\\\"False Positive Fraction\\\", \\\"1 - False Negative \
Fraction\\\"}\\)\\)\\)\\), \\(\\(PlotLabel \[Rule] \\(\\(\\\"BDT Two Circle \
Soft False Posit\\\" \[Ellipsis] \\\"ion-1 - False Negative \
Fraction\\\"\\)\\)\\)\\), \\(\\(PlotStyle \[Rule] \
\\*InterpretationBox[ButtonBox[TooltipBox[\\(\\*GraphicsBox[List[List[\
GrayLevel[0], RectangleBox[List[0, 0]]], List[GrayLevel[0], \
RectangleBox[List[1, -1]]], List[RGBColor[0, 0, 1], RectangleBox[List[0, -1], \
List[2, 1]]]], Rule[AspectRatio, 1], Rule[Frame, True], Rule[FrameStyle, \
RGBColor[0.`, 0.`, 0.6666666666666666`]], Rule[FrameTicks, None], \
Rule[PlotRangePadding, None], Rule[ImageSize, Dynamic[List[Automatic, \
Times[1.35`, CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]] \[InvisibleSpace]\\), \
\\\"RGBColor[0, 0, 1]\\\"], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[BaselinePosition, Baseline], Rule[DefaultBaseStyle, List[]], \
RuleDelayed[ButtonFunction, With[List[Set[Typeset`box$, EvaluationBox[]]], \
If[Not[AbsoluteCurrentValue[\\\"Deployed\\\"]], \
CompoundExpression[SelectionMove[Typeset`box$, All, Expression], \
Set[FrontEnd`Private`$ColorSelectorInitialAlpha, 1], \
Set[FrontEnd`Private`$ColorSelectorInitialColor, RGBColor[0, 0, 1]], \
Set[FrontEnd`Private`$ColorSelectorUseMakeBoxes, True], \
MathLink`CallFrontEnd[FrontEnd`AttachCell[Typeset`box$, \
FrontEndResource[\\\"RGBColorValueSelector\\\"], List[0, List[Left, Bottom]], \
List[Left, Top], Rule[\\\"ClosingActions\\\", \
List[\\\"SelectionDeparture\\\", \\\"ParentChanged\\\", \
\\\"EvaluatorQuit\\\"]]]]]]]], Rule[BaseStyle, Inherited], Rule[Evaluator, \
Automatic], Rule[Method, \\\"Preemptive\\\"]], RGBColor[0, 0, 1], \
Rule[Editable, False], Rule[Selectable, False]]\\)\\)\\)\\)]\\)\\), \
\\(\\(PlotRange \[Rule] All\\)\\)\\)\\)]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Show/gcomb\\\", \
ButtonNote -> \\\"Show::gcomb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.672643897279002*^9, 3.672644193450925*^9, 
  3.672644359195238*^9}],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   GraphicsBox[{{}, {{}, 
      {RGBColor[0, 
        NCache[
         Rational[2, 3], 0.6666666666666666], 0], PointSize[
       0.01388888888888889], AbsoluteThickness[1.6], PointBox[CompressedData["

1:eJztlWtIk2EUx1cSFI1Iq7WiBGVGMQUvJCxmJ0xIEMWGGJYfzC4YNHNmaRfK
eUGLkJYOu5g1P0iRZWUNJTKbpWhlmoKIis7L1tw0dWZJEL1veZ4XHntYfelD
7IExfnt2zvn/zznv5pN8THVosUgksnIv/t193Md93Od/Od19znUa7UF4GBmr
eJY/APj5JfGXmMddHYQHFdP3gnTl8Pss/+74SyWj8ruX4b30Vej9WiuMrA4O
u+VZAH4ifc2+r6Mg7kpLemc4BRb1yeUv1g8D+vPy03nfKesn+hPXTgdLl7wl
fHvNbPObpCeEJ3UzO0YdlYLfrnHOfxGTG4acXHwe4eyfnAH1h+OW7lUUQ+eV
dE7QGDRkPp0Nn9JBbq+puiliDNBPiGyVTdtqg0DNeOUWUxH0mIr9T+R9nPdz
AUpEcW2pZivYQmc4P3kwZpVFbfSxgHI/n08L8kDjkdfPh4l/aZ/k3NZNQ/P+
M2CbNC1le/fAPMeBRMf3p5PojVzhrPue1QIWv2J5YYsepnu1rT0BDsImtXnP
Ad9xwlVthrnE88J9ijj5RnyfHVRNfP4SqJB98NDX2Il/ldo3LFZhJ/4jG1W7
CtVCP+qd3Dg2CP1IVebubjDYCGM/kLEftL4z+fw+lIIshJ+3wLXLHkXLJwRO
9fbhGib4ESdoPsmiBA4ofbl5sF3wV9voyRl0EH/YH/QXMDPFGRCY9t+vDD/a
edHO1OPxmVs3yQTh6MH2sw+AzXQ87ZfuB/pB/RpjEBcgMM4TGf1kZXTEGBOu
gtk4ye37BGHUg4z6kVEPcnzEogLLcYGx38iZOdy45xxELzJrHqifZoyXV2Tv
dNYJenDerPqoj+4naz/o54FmWi9LP91P2j8yrY9met50vCu9+H3Ug3pZ88F+
sPL/aX3cN1o/yw+th8Wu/NL66X1jMUsfnQ/359fv8bUFzwPG4z1Lnys9dD5X
+431kA0hK9NHbNcX3NP6sB4y/fxhPD1PVr/petifct/q3G9BZaQei7E+6sd9
RWbdoz66v6gHGfVgPH4/OCdG73X6JtHTbOb/r8tJfryn6/+tXuQfZR1L7g==

        "]]}, {}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{
      FormBox["\"False Positive Fraction\"", TraditionalForm], 
      FormBox["\"1 - False Negative Fraction\"", TraditionalForm]},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{},
    PlotLabel->FormBox[
     "\"SVM Two Circle SoftFalse Positive Fraction-1 - False Negative \
Fraction\"", TraditionalForm],
    PlotRange->{{0, 0.0300375469337}, {0, 0.9601990049751}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"MapAt", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"1", "-", "#1"}], "&"}], ",", 
       RowBox[{"Symbol", "[", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"All", ",", "2"}], "}"}]}], "]"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\<\"False Positive Fraction\"\>", 
        ",", "\<\"1 - False Negative Fraction\"\>"}], "}"}]}], ",", 
     RowBox[{
     "PlotLabel", 
      "\[Rule]", "\<\"BDS Two Circle Soft False Positive Fraction-1 - False \
Negative Fraction\"\>"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False]}]}], "]"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"MapAt", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"1", "-", "#1"}], "&"}], ",", 
       RowBox[{"Symbol", "[", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"All", ",", "2"}], "}"}]}], "]"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\<\"False Positive Fraction\"\>", 
        ",", "\<\"1 - False Negative Fraction\"\>"}], "}"}]}], ",", 
     RowBox[{
     "PlotLabel", 
      "\[Rule]", "\<\"BDT Two Circle Soft False Positive Fraction-1 - False \
Negative Fraction\"\>"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         RowBox[{
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0., 0., 0.6666666666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None], "\[InvisibleSpace]"}],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False]}]}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.6709334313301563`*^9, 3.670933477381407*^9, {3.670933696831788*^9, 
   3.670933706803569*^9}, 3.670939380668584*^9, 3.670939418176195*^9, 
   3.6709397028217783`*^9, {3.6709399078912163`*^9, 3.670939923003325*^9}, 
   3.671540979903349*^9, 3.671541967400207*^9, 3.671542055003422*^9, 
   3.672571045935026*^9, 3.672571593878253*^9, 3.672643897296555*^9, 
   3.672644193468896*^9, 3.672644359213763*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1043, 690},
WindowMargins->{{Automatic, 93}, {39, Automatic}},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 4, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 268, 3, 92, "Title"],
Cell[CellGroupData[{
Cell[873, 29, 102, 1, 65, "Chapter"],
Cell[CellGroupData[{
Cell[1000, 34, 201, 4, 99, "Section"],
Cell[CellGroupData[{
Cell[1226, 42, 4090, 85, 165, "Input"],
Cell[5319, 129, 35748, 928, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[41116, 1063, 421, 8, 50, "Section"],
Cell[CellGroupData[{
Cell[41562, 1075, 3241, 75, 182, "Input"],
Cell[44806, 1152, 487, 10, 70, "Message"],
Cell[45296, 1164, 489, 10, 70, "Message"],
Cell[45788, 1176, 486, 10, 70, "Message"],
Cell[46277, 1188, 487, 10, 70, "Message"],
Cell[46767, 1200, 487, 10, 70, "Message"],
Cell[47257, 1212, 487, 10, 70, "Message"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[47793, 1228, 178, 4, 50, "Section"],
Cell[CellGroupData[{
Cell[47996, 1236, 2627, 67, 182, "Input"],
Cell[50626, 1305, 489, 10, 70, "Message"],
Cell[51118, 1317, 487, 10, 70, "Message"],
Cell[51608, 1329, 489, 10, 70, "Message"],
Cell[52100, 1341, 487, 10, 70, "Message"],
Cell[52590, 1353, 487, 10, 70, "Message"],
Cell[53080, 1365, 489, 10, 70, "Message"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[53630, 1382, 79, 1, 65, "Chapter"],
Cell[CellGroupData[{
Cell[53734, 1387, 64, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[53823, 1392, 85, 1, 44, "Subsection"],
Cell[53911, 1395, 3095, 69, 148, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57043, 1469, 90, 1, 44, "Subsection"],
Cell[57136, 1472, 3001, 62, 148, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60174, 1539, 152, 2, 44, "Subsection"],
Cell[60329, 1543, 4113, 105, 148, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64479, 1653, 155, 2, 44, "Subsection"],
Cell[64637, 1657, 4144, 105, 148, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68818, 1767, 166, 2, 44, "Subsection"],
Cell[68987, 1771, 4135, 105, 148, "Input"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[73171, 1882, 115, 2, 50, "Section"],
Cell[CellGroupData[{
Cell[73311, 1888, 336, 4, 44, "Subsection"],
Cell[CellGroupData[{
Cell[73672, 1896, 2492, 61, 148, "Input"],
Cell[76167, 1959, 542, 11, 70, "Message"],
Cell[76712, 1972, 539, 11, 70, "Message"],
Cell[77254, 1985, 542, 11, 70, "Message"],
Cell[77799, 1998, 540, 11, 70, "Message"],
Cell[78342, 2011, 542, 11, 70, "Message"],
Cell[78887, 2024, 542, 11, 70, "Message"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[79478, 2041, 102, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[79605, 2046, 3108, 91, 148, "Input"],
Cell[82716, 2139, 540, 11, 70, "Message"],
Cell[83259, 2152, 542, 11, 70, "Message"],
Cell[83804, 2165, 540, 11, 70, "Message"],
Cell[84347, 2178, 540, 11, 70, "Message"],
Cell[84890, 2191, 540, 11, 70, "Message"],
Cell[85433, 2204, 540, 11, 70, "Message"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[86022, 2221, 126, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[86173, 2226, 3358, 94, 148, "Input"],
Cell[89534, 2322, 540, 11, 70, "Message"],
Cell[90077, 2335, 540, 11, 70, "Message"],
Cell[90620, 2348, 540, 11, 70, "Message"],
Cell[91163, 2361, 542, 11, 70, "Message"],
Cell[91708, 2374, 542, 11, 70, "Message"],
Cell[92253, 2387, 542, 11, 70, "Message"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[92844, 2404, 117, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[92986, 2409, 3115, 91, 148, "Input"],
Cell[96104, 2502, 539, 11, 70, "Message"],
Cell[96646, 2515, 540, 11, 70, "Message"],
Cell[97189, 2528, 542, 11, 70, "Message"],
Cell[97734, 2541, 540, 11, 70, "Message"],
Cell[98277, 2554, 540, 11, 70, "Message"],
Cell[98820, 2567, 540, 11, 70, "Message"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[99421, 2585, 90, 1, 50, "Section"],
Cell[CellGroupData[{
Cell[99536, 2590, 139, 2, 44, "Subsection"],
Cell[CellGroupData[{
Cell[99700, 2596, 1713, 51, 148, "Input"],
Cell[101416, 2649, 540, 11, 70, "Message"],
Cell[101959, 2662, 542, 11, 70, "Message"],
Cell[102504, 2675, 540, 11, 70, "Message"],
Cell[103047, 2688, 542, 11, 70, "Message"],
Cell[103592, 2701, 540, 11, 70, "Message"],
Cell[104135, 2714, 540, 11, 70, "Message"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[104724, 2731, 102, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[104851, 2736, 2704, 85, 148, "Input"],
Cell[107558, 2823, 539, 11, 70, "Message"],
Cell[108100, 2836, 539, 11, 70, "Message"],
Cell[108642, 2849, 539, 11, 70, "Message"],
Cell[109184, 2862, 541, 11, 70, "Message"],
Cell[109728, 2875, 539, 11, 70, "Message"],
Cell[110270, 2888, 539, 11, 70, "Message"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[110858, 2905, 102, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[110985, 2910, 2704, 85, 148, "Input"],
Cell[113692, 2997, 541, 11, 70, "Message"],
Cell[114236, 3010, 537, 11, 70, "Message"],
Cell[114776, 3023, 541, 11, 70, "Message"],
Cell[115320, 3036, 539, 11, 70, "Message"],
Cell[115862, 3049, 539, 11, 70, "Message"],
Cell[116404, 3062, 539, 11, 70, "Message"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[116992, 3079, 117, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[117134, 3084, 2710, 85, 148, "Input"],
Cell[119847, 3171, 542, 11, 70, "Message"],
Cell[120392, 3184, 542, 11, 70, "Message"],
Cell[120937, 3197, 542, 11, 70, "Message"],
Cell[121482, 3210, 540, 11, 70, "Message"],
Cell[122025, 3223, 540, 11, 70, "Message"],
Cell[122568, 3236, 540, 11, 70, "Message"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[123181, 3255, 131, 2, 54, "Chapter"],
Cell[CellGroupData[{
Cell[123337, 3261, 64, 1, 64, "Section"],
Cell[123404, 3264, 2998, 72, 250, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[126439, 3341, 88, 1, 50, "Section"],
Cell[CellGroupData[{
Cell[126552, 3346, 2479, 63, 250, "Input"],
Cell[129034, 3411, 505, 11, 70, "Message"],
Cell[129542, 3424, 504, 11, 70, "Message"],
Cell[130049, 3437, 505, 11, 70, "Message"],
Cell[130557, 3450, 505, 11, 70, "Message"],
Cell[131065, 3463, 505, 11, 70, "Message"],
Cell[131573, 3476, 507, 11, 70, "Message"],
Cell[132083, 3489, 534, 11, 70, "Message"],
Cell[132620, 3502, 533, 11, 70, "Message"],
Cell[133156, 3515, 536, 11, 70, "Message"],
Cell[133695, 3528, 574, 12, 70, "Message"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[134318, 3546, 64, 1, 50, "Section"],
Cell[CellGroupData[{
Cell[134407, 3551, 3025, 72, 250, "Input"],
Cell[137435, 3625, 509, 11, 70, "Message"],
Cell[137947, 3638, 506, 11, 70, "Message"],
Cell[138456, 3651, 509, 11, 70, "Message"],
Cell[138968, 3664, 507, 11, 70, "Message"],
Cell[139478, 3677, 507, 11, 70, "Message"],
Cell[139988, 3690, 509, 11, 70, "Message"],
Cell[140500, 3703, 536, 11, 70, "Message"],
Cell[141039, 3716, 536, 11, 70, "Message"],
Cell[141578, 3729, 536, 11, 70, "Message"],
Cell[142117, 3742, 575, 12, 70, "Message"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[142753, 3761, 77, 1, 54, "Chapter"],
Cell[CellGroupData[{
Cell[142855, 3766, 66, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[142946, 3771, 87, 1, 44, "Subsection"],
Cell[143036, 3774, 4012, 93, 250, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[147085, 3872, 90, 1, 44, "Subsection"],
Cell[147178, 3875, 3920, 96, 250, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[151135, 3976, 103, 1, 44, "Subsection"],
Cell[151241, 3979, 4262, 103, 250, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[155540, 4087, 102, 1, 44, "Subsection"],
Cell[155645, 4090, 4112, 104, 250, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[159794, 4199, 115, 1, 44, "Subsection"],
Cell[159912, 4202, 4367, 107, 352, "Input"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[164328, 4315, 90, 1, 50, "Section"],
Cell[CellGroupData[{
Cell[164443, 4320, 107, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[164575, 4325, 2964, 76, 250, "Input"],
Cell[167542, 4403, 500, 11, 70, "Message"],
Cell[168045, 4416, 500, 11, 70, "Message"],
Cell[168548, 4429, 500, 11, 70, "Message"],
Cell[169051, 4442, 577, 12, 70, "Message"],
Cell[169631, 4456, 500, 11, 70, "Message"],
Cell[170134, 4469, 502, 11, 70, "Message"],
Cell[170639, 4482, 500, 11, 70, "Message"],
Cell[171142, 4495, 579, 12, 70, "Message"],
Cell[171724, 4509, 500, 11, 70, "Message"],
Cell[172227, 4522, 500, 11, 70, "Message"],
Cell[172730, 4535, 499, 11, 70, "Message"],
Cell[173232, 4548, 577, 12, 70, "Message"],
Cell[173812, 4562, 502, 11, 70, "Message"],
Cell[174317, 4575, 502, 11, 70, "Message"],
Cell[174822, 4588, 500, 11, 70, "Message"],
Cell[175325, 4601, 577, 12, 70, "Message"],
Cell[175905, 4615, 500, 11, 70, "Message"],
Cell[176408, 4628, 500, 11, 70, "Message"],
Cell[176911, 4641, 500, 11, 70, "Message"],
Cell[177414, 4654, 577, 12, 70, "Message"],
Cell[177994, 4668, 500, 11, 70, "Message"],
Cell[178497, 4681, 499, 11, 70, "Message"],
Cell[178999, 4694, 502, 11, 70, "Message"],
Cell[179504, 4707, 579, 12, 70, "Message"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[180132, 4725, 101, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[180258, 4730, 3304, 90, 250, "Input"],
Cell[183565, 4822, 648, 13, 70, "Message"],
Cell[184216, 4837, 646, 13, 70, "Message"],
Cell[184865, 4852, 646, 13, 70, "Message"],
Cell[185514, 4867, 579, 12, 70, "Message"],
Cell[186096, 4881, 648, 13, 70, "Message"],
Cell[186747, 4896, 646, 13, 70, "Message"],
Cell[187396, 4911, 648, 13, 70, "Message"],
Cell[188047, 4926, 581, 12, 70, "Message"],
Cell[188631, 4940, 648, 13, 70, "Message"],
Cell[189282, 4955, 646, 13, 70, "Message"],
Cell[189931, 4970, 646, 13, 70, "Message"],
Cell[190580, 4985, 579, 12, 70, "Message"],
Cell[191162, 4999, 646, 13, 70, "Message"],
Cell[191811, 5014, 646, 13, 70, "Message"],
Cell[192460, 5029, 646, 13, 70, "Message"],
Cell[193109, 5044, 579, 12, 70, "Message"],
Cell[193691, 5058, 645, 13, 70, "Message"],
Cell[194339, 5073, 645, 13, 70, "Message"],
Cell[194987, 5088, 646, 13, 70, "Message"],
Cell[195636, 5103, 579, 12, 70, "Message"],
Cell[196218, 5117, 648, 13, 70, "Message"],
Cell[196869, 5132, 645, 13, 70, "Message"],
Cell[197517, 5147, 646, 13, 70, "Message"],
Cell[198166, 5162, 579, 12, 70, "Message"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[198794, 5180, 104, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[198923, 5185, 3298, 89, 250, "Input"],
Cell[202224, 5276, 646, 13, 70, "Message"],
Cell[202873, 5291, 645, 13, 70, "Message"],
Cell[203521, 5306, 646, 13, 70, "Message"],
Cell[204170, 5321, 579, 12, 70, "Message"],
Cell[204752, 5335, 646, 13, 70, "Message"],
Cell[205401, 5350, 646, 13, 70, "Message"],
Cell[206050, 5365, 645, 13, 70, "Message"],
Cell[206698, 5380, 579, 12, 70, "Message"],
Cell[207280, 5394, 646, 13, 70, "Message"],
Cell[207929, 5409, 646, 13, 70, "Message"],
Cell[208578, 5424, 646, 13, 70, "Message"],
Cell[209227, 5439, 579, 12, 70, "Message"],
Cell[209809, 5453, 646, 13, 70, "Message"],
Cell[210458, 5468, 648, 13, 70, "Message"],
Cell[211109, 5483, 646, 13, 70, "Message"],
Cell[211758, 5498, 578, 12, 70, "Message"],
Cell[212339, 5512, 646, 13, 70, "Message"],
Cell[212988, 5527, 646, 13, 70, "Message"],
Cell[213637, 5542, 646, 13, 70, "Message"],
Cell[214286, 5557, 579, 12, 70, "Message"],
Cell[214868, 5571, 646, 13, 70, "Message"],
Cell[215517, 5586, 646, 13, 70, "Message"],
Cell[216166, 5601, 646, 13, 70, "Message"],
Cell[216815, 5616, 579, 12, 70, "Message"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[217443, 5634, 117, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[217585, 5639, 3510, 92, 352, "Input"],
Cell[221098, 5733, 648, 13, 70, "Message"],
Cell[221749, 5748, 646, 13, 70, "Message"],
Cell[222398, 5763, 646, 13, 70, "Message"],
Cell[223047, 5778, 581, 12, 70, "Message"],
Cell[223631, 5792, 646, 13, 70, "Message"],
Cell[224280, 5807, 646, 13, 70, "Message"],
Cell[224929, 5822, 648, 13, 70, "Message"],
Cell[225580, 5837, 579, 12, 70, "Message"],
Cell[226162, 5851, 648, 13, 70, "Message"],
Cell[226813, 5866, 645, 13, 70, "Message"],
Cell[227461, 5881, 646, 13, 70, "Message"],
Cell[228110, 5896, 579, 12, 70, "Message"],
Cell[228692, 5910, 646, 13, 70, "Message"],
Cell[229341, 5925, 646, 13, 70, "Message"],
Cell[229990, 5940, 646, 13, 70, "Message"],
Cell[230639, 5955, 579, 12, 70, "Message"],
Cell[231221, 5969, 646, 13, 70, "Message"],
Cell[231870, 5984, 646, 13, 70, "Message"],
Cell[232519, 5999, 646, 13, 70, "Message"],
Cell[233168, 6014, 578, 12, 70, "Message"],
Cell[233749, 6028, 648, 13, 70, "Message"],
Cell[234400, 6043, 646, 13, 70, "Message"],
Cell[235049, 6058, 648, 13, 70, "Message"],
Cell[235700, 6073, 579, 12, 70, "Message"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[236340, 6092, 90, 1, 50, "Section"],
Cell[CellGroupData[{
Cell[236455, 6097, 311, 5, 44, "Subsection"],
Cell[CellGroupData[{
Cell[236791, 6106, 3451, 82, 250, "Input"],
Cell[240245, 6190, 502, 11, 70, "Message"],
Cell[240750, 6203, 500, 11, 70, "Message"],
Cell[241253, 6216, 502, 11, 70, "Message"],
Cell[241758, 6229, 577, 12, 70, "Message"],
Cell[242338, 6243, 500, 11, 70, "Message"],
Cell[242841, 6256, 500, 11, 70, "Message"],
Cell[243344, 6269, 502, 11, 70, "Message"],
Cell[243849, 6282, 577, 12, 70, "Message"],
Cell[244429, 6296, 500, 11, 70, "Message"],
Cell[244932, 6309, 499, 11, 70, "Message"],
Cell[245434, 6322, 500, 11, 70, "Message"],
Cell[245937, 6335, 577, 12, 70, "Message"],
Cell[246517, 6349, 500, 11, 70, "Message"],
Cell[247020, 6362, 502, 11, 70, "Message"],
Cell[247525, 6375, 500, 11, 70, "Message"],
Cell[248028, 6388, 577, 12, 70, "Message"],
Cell[248608, 6402, 500, 11, 70, "Message"],
Cell[249111, 6415, 500, 11, 70, "Message"],
Cell[249614, 6428, 500, 11, 70, "Message"],
Cell[250117, 6441, 577, 12, 70, "Message"],
Cell[250697, 6455, 500, 11, 70, "Message"],
Cell[251200, 6468, 500, 11, 70, "Message"],
Cell[251703, 6481, 502, 11, 70, "Message"],
Cell[252208, 6494, 577, 12, 70, "Message"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[252834, 6512, 102, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[252961, 6517, 3601, 94, 250, "Input"],
Cell[256565, 6613, 643, 13, 70, "Message"],
Cell[257211, 6628, 645, 13, 70, "Message"],
Cell[257859, 6643, 645, 13, 70, "Message"],
Cell[258507, 6658, 576, 12, 70, "Message"],
Cell[259086, 6672, 643, 13, 70, "Message"],
Cell[259732, 6687, 643, 13, 70, "Message"],
Cell[260378, 6702, 643, 13, 70, "Message"],
Cell[261024, 6717, 576, 12, 70, "Message"],
Cell[261603, 6731, 643, 13, 70, "Message"],
Cell[262249, 6746, 645, 13, 70, "Message"],
Cell[262897, 6761, 643, 13, 70, "Message"],
Cell[263543, 6776, 578, 12, 70, "Message"],
Cell[264124, 6790, 643, 13, 70, "Message"],
Cell[264770, 6805, 643, 13, 70, "Message"],
Cell[265416, 6820, 643, 13, 70, "Message"],
Cell[266062, 6835, 576, 12, 70, "Message"],
Cell[266641, 6849, 643, 13, 70, "Message"],
Cell[267287, 6864, 645, 13, 70, "Message"],
Cell[267935, 6879, 642, 13, 70, "Message"],
Cell[268580, 6894, 576, 12, 70, "Message"],
Cell[269159, 6908, 645, 13, 70, "Message"],
Cell[269807, 6923, 643, 13, 70, "Message"],
Cell[270453, 6938, 645, 13, 70, "Message"],
Cell[271101, 6953, 576, 12, 70, "Message"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[271726, 6971, 128, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[271879, 6976, 3501, 92, 250, "Input"],
Cell[275383, 7070, 648, 13, 70, "Message"],
Cell[276034, 7085, 646, 13, 70, "Message"],
Cell[276683, 7100, 646, 13, 70, "Message"],
Cell[277332, 7115, 579, 12, 70, "Message"],
Cell[277914, 7129, 646, 13, 70, "Message"],
Cell[278563, 7144, 646, 13, 70, "Message"],
Cell[279212, 7159, 646, 13, 70, "Message"],
Cell[279861, 7174, 579, 12, 70, "Message"],
Cell[280443, 7188, 646, 13, 70, "Message"],
Cell[281092, 7203, 646, 13, 70, "Message"],
Cell[281741, 7218, 646, 13, 70, "Message"],
Cell[282390, 7233, 581, 12, 70, "Message"],
Cell[282974, 7247, 648, 13, 70, "Message"],
Cell[283625, 7262, 646, 13, 70, "Message"],
Cell[284274, 7277, 648, 13, 70, "Message"],
Cell[284925, 7292, 579, 12, 70, "Message"],
Cell[285507, 7306, 648, 13, 70, "Message"],
Cell[286158, 7321, 648, 13, 70, "Message"],
Cell[286809, 7336, 646, 13, 70, "Message"],
Cell[287458, 7351, 581, 12, 70, "Message"],
Cell[288042, 7365, 646, 13, 70, "Message"],
Cell[288691, 7380, 646, 13, 70, "Message"],
Cell[289340, 7395, 648, 13, 70, "Message"],
Cell[289991, 7410, 581, 12, 70, "Message"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[290621, 7428, 117, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[290763, 7433, 3665, 94, 352, "Input"],
Cell[294431, 7529, 644, 13, 70, "Message"],
Cell[295078, 7544, 646, 13, 70, "Message"],
Cell[295727, 7559, 646, 13, 70, "Message"],
Cell[296376, 7574, 576, 12, 70, "Message"],
Cell[296955, 7588, 646, 13, 70, "Message"],
Cell[297604, 7603, 644, 13, 70, "Message"],
Cell[298251, 7618, 646, 13, 70, "Message"],
Cell[298900, 7633, 579, 12, 70, "Message"],
Cell[299482, 7647, 644, 13, 70, "Message"],
Cell[300129, 7662, 646, 13, 70, "Message"],
Cell[300778, 7677, 644, 13, 70, "Message"],
Cell[301425, 7692, 577, 12, 70, "Message"],
Cell[302005, 7706, 644, 13, 70, "Message"],
Cell[302652, 7721, 644, 13, 70, "Message"],
Cell[303299, 7736, 644, 13, 70, "Message"],
Cell[303946, 7751, 579, 12, 70, "Message"],
Cell[304528, 7765, 644, 13, 70, "Message"],
Cell[305175, 7780, 646, 13, 70, "Message"],
Cell[305824, 7795, 644, 13, 70, "Message"],
Cell[306471, 7810, 577, 12, 70, "Message"],
Cell[307051, 7824, 643, 13, 70, "Message"],
Cell[307697, 7839, 646, 13, 70, "Message"],
Cell[308346, 7854, 643, 13, 70, "Message"],
Cell[308992, 7869, 577, 12, 70, "Message"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[309642, 7889, 80, 1, 65, "Chapter"],
Cell[CellGroupData[{
Cell[309747, 7894, 83, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[309855, 7899, 69, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[309949, 7904, 112, 1, 28, "Input"],
Cell[310064, 7907, 1701, 28, 147, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[311814, 7941, 91, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[311930, 7946, 131, 2, 28, "Input"],
Cell[312064, 7950, 1111, 28, 63, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[313224, 7984, 69, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[313318, 7989, 180, 3, 28, "Input"],
Cell[313501, 7994, 2006, 41, 63, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[315568, 8042, 90, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[315683, 8047, 95, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[315803, 8052, 114, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[315942, 8057, 513, 8, 148, "Input"],
Cell[316458, 8067, 46994, 774, 298, "Output"],
Cell[363455, 8843, 69937, 1146, 316, "Output"],
Cell[433395, 9991, 45966, 772, 320, "Output"],
Cell[479364, 10765, 65930, 1084, 292, "Output"],
Cell[545297, 11851, 52846, 875, 310, "Output"],
Cell[598146, 12728, 100735, 1658, 292, 65397, 1079, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[698930, 14392, 93, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[699048, 14397, 508, 9, 148, "Input"],
Cell[699559, 14408, 88095, 1440, 303, 45853, 747, "CachedBoxData", "BoxData", \
"Output"],
Cell[787657, 15850, 65387, 1065, 293, "Output"],
Cell[853047, 16917, 57111, 929, 293, "Output"],
Cell[910161, 17848, 61793, 1007, 293, "Output"],
Cell[971957, 18857, 61217, 997, 293, "Output"],
Cell[1033177, 19856, 64938, 1058, 293, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1098164, 20920, 106, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[1098295, 20925, 488, 8, 148, "Input"],
Cell[1098786, 20935, 12010, 211, 218, 1585, 40, "CachedBoxData", "BoxData", \
"Output"],
Cell[1110799, 21148, 13784, 240, 223, 2132, 49, "CachedBoxData", "BoxData", \
"Output"],
Cell[1124586, 21390, 12753, 223, 223, 1738, 42, "CachedBoxData", "BoxData", \
"Output"],
Cell[1137342, 21615, 12932, 226, 223, 1946, 46, "CachedBoxData", "BoxData", \
"Output"],
Cell[1150277, 21843, 2885, 59, 223, "Output"],
Cell[1153165, 21904, 3144, 64, 223, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1156358, 21974, 157, 2, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[1156540, 21980, 482, 8, 148, "Input"],
Cell[1157025, 21990, 11282, 199, 219, 1283, 35, "CachedBoxData", "BoxData", \
"Output"],
Cell[1168310, 22191, 12241, 215, 219, 1819, 44, "CachedBoxData", "BoxData", \
"Output"],
Cell[1180554, 22408, 12780, 224, 219, 1701, 42, "CachedBoxData", "BoxData", \
"Output"],
Cell[1193337, 22634, 2603, 55, 219, "Output"],
Cell[1195943, 22691, 13001, 228, 219, 1757, 43, "CachedBoxData", "BoxData", \
"Output"],
Cell[1208947, 22921, 13491, 235, 219, 1969, 46, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1222487, 23162, 118, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[1222630, 23167, 489, 8, 148, "Input"],
Cell[1223122, 23177, 11800, 208, 157, 1589, 40, "CachedBoxData", "BoxData", \
"Output"],
Cell[1234925, 23387, 3080, 63, 153, "Output"],
Cell[1238008, 23452, 2698, 56, 154, "Output"],
Cell[1240709, 23510, 2897, 60, 152, "Output"],
Cell[1243609, 23572, 2872, 59, 163, "Output"],
Cell[1246484, 23633, 3140, 64, 161, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1249685, 23704, 91, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[1249801, 23709, 84, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[1249910, 23714, 428, 7, 148, "Input"],
Cell[1250341, 23723, 1984, 52, 31, "Output"],
Cell[1252328, 23777, 1982, 52, 31, "Output"],
Cell[1254313, 23831, 1981, 52, 31, "Output"],
Cell[1256297, 23885, 1984, 52, 31, "Output"],
Cell[1258284, 23939, 1990, 53, 48, "Output"],
Cell[1260277, 23994, 1989, 53, 48, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1262315, 24053, 105, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[1262445, 24058, 437, 7, 148, "Input"],
Cell[1262885, 24067, 2215, 61, 48, "Output"],
Cell[1265103, 24130, 2215, 61, 48, "Output"],
Cell[1267321, 24193, 2217, 61, 48, "Output"],
Cell[1269541, 24256, 2215, 61, 48, "Output"],
Cell[1271759, 24319, 2219, 61, 48, "Output"],
Cell[1273981, 24382, 2219, 61, 48, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1276249, 24449, 105, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[1276379, 24454, 435, 7, 148, "Input"],
Cell[1276817, 24463, 2215, 61, 48, "Output"],
Cell[1279035, 24526, 2216, 61, 48, "Output"],
Cell[1281254, 24589, 2215, 61, 48, "Output"],
Cell[1283472, 24652, 2215, 61, 48, "Output"],
Cell[1285690, 24715, 2219, 61, 48, "Output"],
Cell[1287912, 24778, 2219, 61, 48, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1290180, 24845, 120, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[1290325, 24850, 443, 7, 148, "Input"],
Cell[1290771, 24859, 2252, 61, 48, "Output"],
Cell[1293026, 24922, 2252, 61, 48, "Output"],
Cell[1295281, 24985, 2252, 61, 48, "Output"],
Cell[1297536, 25048, 2252, 61, 48, "Output"],
Cell[1299791, 25111, 2256, 61, 48, "Output"],
Cell[1302050, 25174, 2256, 61, 48, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1304367, 25242, 69, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[1304461, 25247, 307, 4, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[1304793, 25255, 721, 11, 148, "Input"],
Cell[1305517, 25268, 2836, 65, 31, "Output"],
Cell[1308356, 25335, 2829, 64, 31, "Output"],
Cell[1311188, 25401, 2834, 65, 31, "Output"],
Cell[1314025, 25468, 2834, 65, 31, "Output"],
Cell[1316862, 25535, 2838, 65, 31, "Output"],
Cell[1319703, 25602, 2838, 65, 31, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1322590, 25673, 129, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[1322744, 25678, 488, 8, 148, "Input"],
Cell[1323235, 25688, 3060, 73, 48, "Output"],
Cell[1326298, 25763, 3059, 73, 48, "Output"],
Cell[1329360, 25838, 3059, 73, 48, "Output"],
Cell[1332422, 25913, 3062, 73, 48, "Output"],
Cell[1335487, 25988, 3066, 73, 48, "Output"],
Cell[1338556, 26063, 3064, 73, 48, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1341669, 26142, 105, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[1341799, 26147, 486, 8, 148, "Input"],
Cell[1342288, 26157, 3051, 73, 48, "Output"],
Cell[1345342, 26232, 3052, 73, 48, "Output"],
Cell[1348397, 26307, 3053, 73, 48, "Output"],
Cell[1351453, 26382, 3051, 73, 48, "Output"],
Cell[1354507, 26457, 3057, 73, 48, "Output"],
Cell[1357567, 26532, 3055, 73, 48, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1360671, 26611, 144, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[1360840, 26616, 492, 8, 148, "Input"],
Cell[1361335, 26626, 3052, 72, 48, "Output"],
Cell[1364390, 26700, 3050, 72, 48, "Output"],
Cell[1367443, 26774, 3050, 72, 48, "Output"],
Cell[1370496, 26848, 3050, 72, 48, "Output"],
Cell[1373549, 26922, 3056, 72, 48, "Output"],
Cell[1376608, 26996, 3054, 72, 48, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1379723, 27075, 94, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[1379842, 27080, 192, 2, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[1380059, 27086, 1702, 42, 148, "Input"],
Cell[1381764, 27130, 5960, 90, 176, "Message"],
Cell[1387727, 27222, 6709, 171, 177, "Output"],
Cell[1394439, 27395, 5992, 90, 175, "Message"],
Cell[1400434, 27487, 7271, 180, 176, "Output"],
Cell[1407708, 27669, 5994, 90, 176, "Message"],
Cell[1413705, 27761, 6889, 173, 177, "Output"],
Cell[1420597, 27936, 5992, 90, 175, "Message"],
Cell[1426592, 28028, 7090, 177, 176, "Output"],
Cell[1433685, 28207, 6028, 92, 179, "Message"],
Cell[1439716, 28301, 7073, 176, 196, "Output"],
Cell[1446792, 28479, 6029, 92, 178, "Message"],
Cell[1452824, 28573, 7343, 181, 195, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
